%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: elpre_talk.dvi
%%Pages: 24
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: Helvetica-Bold Helvetica CMSY10 CMR12 CMMI12 CMBX12
%%+ CMR9 CMMI9 CMEX10 CMR6 CMBX9 CMSY9 Helvetica-Oblique CMMI6 CMSY6
%%+ CMMIB10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /opt/teTeX3/bin/x86_64/dvips elpre_talk
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2007.02.16:1015
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 4, 04/05/10
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
  z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def /x x Coef mul def /y1 y1 Coef mul def /x1 x1 Coef mul def
  x1 0 gt y1 0 gt x 0 gt y 0 gt and { [ y x y1 x1 ] 1 a sub y mul}
  { [ 1 0] 0 } ifelse setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
    n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known not {userdict /pdfmark systemdict /cleartomark get put}
if
 
@fedspecial end
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.1: CMMIB10 1.100
%%CreationDate: 1996 Jul 23 07:54:00
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMIB10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /epsilon1 put
dup 27 /sigma put
readonly def
/FontBBox{-15 -250 1216 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D004B836D34E88C25F6CE738846C8E2E59A2BCF
4ACF80A26D78872E9343A0537BC3BD7715F32ACD958D5AAED865BFE129278935
063A31C2634DE2F9077E0AAAAEB224466B779096D8E3FF0A12AD5157F6603DED
1A82F3511359143311179080C510740B401C930C96270FD1AB3ECBCFEF5DE53F
E846BAAE95828D5790922640EF8AB9D7CEBE7669FEA02B72F86872D3D8754A18
A1629C40A7C00C956F140BC63362478279C36EE353638CD3E249897207A94504
4400668C8E702058EBF7284C9BDF830A3FC79C7EE900CC4C3664F9767A237275
CEE3671644A75F1E696DA906B4C66870DBE87F5B4A176920C078ADBE24F55C09
3D18CDE21B5FBC1C6A8AB18E05EDBEF9D1C1C18B3E6377BA2A688579D4F708F9
A5CF4F56C5E39E2726106E9713E638775E606464CD674E5DC25CE9A696A65806
C8E9D206B421E246F18013ACC6C7B2985BA93B1B7D7745CCB25B09957F50128C
B523A55ACA6A7A2A0193A536E590291ED9D577B527CAD0372E05BFCA1829FED1
662D06144A5FFA628C587A4FA05B179F1A7E3B23B47765FDC054271A0DBF9C2B
B4F4771F80D1F7AAD9024868C30DAD5CF728DB2A71D86D53B0E674996E8C01F7
EF97B225A28872F8AD4752A466E078C2B020EB832F237CB9B5631EB2D2EDDB00
709D3864CA3A6C3EF18085EAEABC011E9F35C9BE4B5D0B608361F329B5784DAC
5557A602E9E3C204909D84DB988F0BAB914E87CD685C7DA55C5E0B9F0176184F
FC39B570873BBF346A0D1DE3942DA05434949A65CE64D8BAB0A091C40F7FF47A
4FC57CB4420221C7B3EB8B891044B5FB0227009F0F6028D3F28545E63DA68A04
E993D5A48AF0019A459ECEEF20675953E6F5F612A7A0C647008B559DAB5087A8
FFD697159C2A88B6AD558825D0E31D28D186BBB0CE7D9B9B34FF0AE9C098E47C
96FFCFC63730377C124B559E401C18F050B7E51CF3BB376B8A8D4AAC895D676C
FD654C206404EE7B85808110F8DBCA9A242CECF6C61A1CAAA47B0539B2B12884
6AFC0E820CE4E6CD40ED0A5E0F7464A53CE4E95B6596CA56BB2DE51ADE611C40
0ED91154217CF94C8815606F7B5437B8A9C243D69EE21C6E6C8BE34DCF9F51B9
53C0EB9B8C16095A861E9B9E947CF35CC79E973B96217A7AA3728DA68F1B04D6
5E2FAE9552B59836BE65EABE7E896559F4E11BF9E1BFE7D8213D8726796D71F8
BFDD452F4679BFFB9BCED31AD3B98DE85582F0C2452D62B4B3A3BE4320BD7D3F
62DC649F8301AC99CE5BE61AF2ECCA6436C3952AA2646DD17CD9E1E4F1D94BCA
90BC7EF58BDCA561263B04FCF0CCA7BF2EEC91C4D39B7F557F8191189C6AD155
9D97FAA19CFE13C55D3BF432015320AFE6EDF0BA55D870C1D74195B551110691
BFAE7B507C054E2F35900A321F5AA9F8F5B5C2A94CA44CE29C2E0F30CB372937
9B0D204955838A5A80B331155C1F90779ABF0D2B1B65E5CEF0DA12A3A4FCD364
1AAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF7499F439A6EBE9BF559D2EE0571
CE54AEC46F6D375FC1237E78AE73CB4E40422E549227E3D472DBD6D3AC6F91C4
45941A2845DC14B0584901CA9CC52053E339F8ACCAC3751F07FF4EBB037DF6C6
75CD98FF88EA4A2484B41BEEFD63DE758D0A63D2CEDE024A194E7A792B9D04EB
4348EF06E01F4761AAD0E95D0C8919EA2CDE174D31110FBCFF1AED0ADE6E0716
B2952D61CF55536EAD2AA9F0FF4CC91EE7D5C71050A3C0AD3263E88751BFE578
3A3F7E361FA5346247197451655E90F2889810643D92AB75A6FAC6B1AE998A41
275368750E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 83 /S put
readonly def
/FontBBox{11 -250 1241 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C726ABE0FD05DB617F7B7BA6C376A8B4E29F8C740003208097F51ADDF
1E3CD0FD9DEFC3B38AA5A3B666C50DF6B772BB84F15EBB1408A9526F753298C7
0BF3D4D00FE04A091886BB4A7E505D7BC06CC87851EEEDED307CD89106717F49
6C214660E36C1EBE3F4A6212D28629B24FC92F6D448551F6506F57208FC0B452
470A01478F40F49EB27C429073CDFC207B17131C1D462B135A5F3CE56070CADC
099765AC1541F6FC021669455F94449254A2F5F88655B2E0F88CE29ADF86E9F8
E434E8464502AFDAAED0C229884178CAA68FDA41ABB826CD2DCDEC8D21D15989
C976C8608424B15D6BC4447B59DFEDA638BDBE1BC99915057D8D86674AEB95AB
4C1C70784D3C3A86E9103D63648D9BB01ACC5047EE25AA0F00C61100AF66EEAE
13542FE498B3FB2CC38309FBAA3E69F65DFB4DB4B987CBD96A714224F17B86BF
3C1F144A605A755BE20221D10D4251910AD6AA861161F7FC014F906A098430AB
610A9C73413C8714809C6A2D66E35B87A0DA8D454CAE3D3D73897DF1CCDE3C39
5A126500E6E3AA0FC17D465A51F3DC30BA557F0BD6A0E00E1CE320CF1A598CC4
0C02389C263AE91AF2EF822AD3DBD26A026436DE99C5D74BEC58CCF569180A83
0BFF5DC4D51E96F5CD044C79DD0149A2E96185864E36E9DFACCD2BE675FEFF27
8C8B298B1F4492CB53301A759C83FF992B052178FC4A0E00F3184CCE1FEBE82E
A31BA9FCD8B925A44CA9E8D8677E4DC54ADD4A992FFEC32ED923D6D488D35B6A
CA3861B93C9E55072CAE0365C39447921F6EC76ACFF9FC8AB4B58D248FB188BC
0B9A19996160E4F12C1AF1137A442DCD6A1390095454C779075E99D0E9B138E4
845059BC7C78284AD7B0EADDB313930E72B3799E1347C1E2FE253BE07156500C
3441F7356201E5DDD826BC25C0E7C3343C9F80ED03102A1411BCF57507A40056
C8FBBD08A687AF6DE9491034EA05E0E41D5672439C629FF813BC1D5C149CE4C1
D64CFE3AD735CA6511351CDE21DE7D82DEC243639090A500ABAEB4BF36BE928F
B4B212FE566FF565CE63F0AB9BA57F291977784CD327723877F185515885D478
3E0D5C0F49EAB18B6EAE13FB687C3C107E9E53275FD9D07D3A1E7F9AD5A4DD08
BD4A70C1861DECA34566102CE161534094F1C72245C567BEE2BD291749644140
4AB3578DDF4BD24D4649FC98ED47E42FC6DA67759642629EE0A55FCF3468A549
ED796F721C3002C7BA668D1363DD58B23CE84A7D8F6A805D10B0D2DB032E5A84
C6A4066959ABBBE3BC28FD1A190C1670EAE27902E0555272099CBEF093027F41
02863C7F4178B34C5153A97ACC62DAF64394E6BA45AF72FBD92AEE588B5F6A48
EE6D6B2AAAE9EDFFD68210A02A3CC74FEC583DBCCD90AD8DE3F1CE7C056AC3F5
8930F21F96858AFEEA24A123206A71B4C3420219C2BC6C3615A0C6E61961C1BC
7A940BC8DBE3526219D18D833F31FC5160EE6C2BE1E3088605A26163CA0407ED
6B792C89CF3E2EBE375FBB034F87D550223E621DDDA7743105B58ED65297330D
39C76934BF67FBCAC77B0C35D05F8D9DB3EDF6362577401CEEB972697523394B
B968426AC2E69C44793E81FEA0BF8AD643BAE403991ADDD9E8F4ECC8A91F44CC
57622A3064BA9D6CA4529264C852B5D35903BD869EE526D93E34C76E195AD37D
28B5E9259D9ABCF587F15569AA28B1B7F68A1D981CB08C853D37B49632189FCE
BC4FDD5453BEE3B2C2934FA7D80EC50929F0E60017F7F863C97292C41CCF8FCC
20A6042030B882DC3E983611A478837860A77D3A98223432476B4DFC26EA3217
393A23673F3AAE62783B0DD88AA6E8AE5F138880868C109C64B5EB6D796B3DB8
23DE2DD4E1A19BAADE1082104FFB1650FE854F17B1EBD2AE6DFE61490F6820D5
BBE6CAEDB1E95CAF628C9A508349F63EDBA00CE40001EE93BB1F47B94995573B
DAF4432776A19BCA5C60B580472A690BF0F588C0343BE42FE24D579BA5D361AA
BCFB7A1EE2B7BCF5F9A05F8DAD3EABEC31582F437DB12A680A9BC64B3DC2FA5D
5477C6CE63CB58FEF6A46BFC1A94EE2E26F22F8C816845FA7DC10E49F13C6FC7
EB0CB47CD1C3E4F55760E0725F1F8B3098940400AF6DA3770E4D4C315C51F8B9
625DB0F7A99E5DFAA4F1B3FA8CADD592B8D911F6E06E447ADBCC4939F00F5440
FE16BA7B022DA6C2ADD3F8D283E6A558EC3FCEFEA5043FCBA77FD46BD81A2595
53ABB5C53B6B3C8F71A4CA87F1DA9CE0B6C6621B189388B2B9933BAF37333D7A
393CA781FDDB6382BD1B161FE316718395BAC962786CDE958A027AFDD617342C
383EC0FFBB0E194847B1647CCE5B2D43BA23A751A9DFCBF9A01452BAEF8ED51A
894443AE260602A845774DC3F6043B3C04F96E3BEE4BEC87D18296467F1CDF7B
A61475E5351DA0B686267B4760DF852EB236E6B0CBC46F6AA1735807310B3968
8098886DA5EC9E73758F0660E1881D609437E15E3C393CF8490FFDAD649324FF
C643A38892B82A4B28D96997B85326013E4C24356D5118C32DFF59594F37AB5F
524A6C0702FE08EFB9940F4ACA74CEDB7FDA36475E07CBCAC2369840B43A9AF6
2FD07C0427D68EE7FC94187386034A2503D73DB963AC6C4014188B5D99B4EFFC
4A80CBEAE33C9EAA5C178B68BBA22CEDBF700BB96AA23AB8DCD24EECBA2C3EA3
07F6EEA2BE0015682D5D797BE19AF4F3B5F9A22D9BCD1D38FF4645A11CA21689
6317C7686A7118D91ADB1BD3C37423EFA6C263B4BCBAF31E1090049670C719C1
DB9A90D70A977C5DB5BAB1A8A8C06739E82276DBEDC71108F20C5657C6F08680
67B6A2C7BB7A58FC654C47D9D7A151C322D4F362FF18D4524589F42FDBC1998A
9E18DF5116F8D71035026C13F1949966DB98660669B1C78E15C73BAF72ACB0F3
80339E82118C417E10A70884F4F5FC648887DDBA5D2BF1B6440924B8AD55297F
E6EFA9005A51CD2314D3C2053731CE85AA98F6E8844A86046FE36F051C6A9431
A3DED8324C91B55B4E51C32AEF910D4E3FC4E965AD2224649AF16ED965CBE093
067A114C79825454579C3C4D6B4EEE2891F9B314C99DD7B9660DA452BC00A7FC
7776E53B87B90D98F2D9419EBDC137C3C3BF92F5106AD25EBFB92C6C7D4DB055
B96C6C4F3234D972C900C0C88692D7F97E948F88E88930B52AB500BDEBBEB7EE
CB915D53A2FE17F2DB950A5C1DC28CB5BDA9B3827FA07C25790395ECBB860174
3DEFAFFDFB37D2DF8E5F9A2B67B3A457EBA0B9159B785544F2F4713B0F162552
A8AC5C1754583B3FAE64DDF6FD3163E95DA708D00F7FE6FFD9A3C89D117A72F0
8E9E9106397F65017971048A9BF6862FD07BFACC0AC5E38EA00040CC8A090C87
8D4CBEFE5BB6038AC23BB1E494961698471A8AE368BC5DE91BF7AD6C587F935A
BA6EE26292A036E05975D7815A530A2F1A98EB0F22BFD92D3BE4E85D1C0FCD68
800B7E80FD7A83DB6A535A6D46716D5264169BE742862112D1E0F3FF13398014
E4C0D2851EF194149D470BE5334A363419748918B3D2B6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BE8C2F499A1AD3753691F4D1DAB520
BDD769B46E96AA8F78ADA9231320B3522E91A6503C92CEAC9C13B1A17F701EF8
8F269895F2FCD14361D6CDA34EC45009400840BCB217677BEBD9EFCF22F0D97E
9E7D1E98A4B6803DB7FE3B6CBF080CD0F82B3921E4BE26E3D612AAE54B1CF910
DBB6D123F7377C3DA0B04B510B5A830BBF8C7964ED164FD1A2E9C80569C6C4D5
41427AD62FFA6CD19149ED3DB9BBCFF05080376E603A409A959937748F98BBD5
CA2AC70E2763B478ED531F06219B9EA40A217F6F7641A03ED7106CBC86D1A520
1B4D41
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D635D93B1823EC35EB8316AA1
86031FCC99F57CB21E8400E54AA474B57112F0D4754A16BEC19117E9D3638986
0777A71B135CC18E20E193AE6C2BCD89F4A27516DBD2BFE69FF9920D547796F9
89E0825B6BD5F492B36AF136EA91B826501ADB1979A4204B2CB5C0517F2B9494
9B2077F316D2B3DA256C99F7549E6BC4B04FE12072B09B4F5D482A126AE351F3
97DB85F3026A793B51E6B28B54661FEB087F011F0BFF67272DD1E8825C180723
22AE77CD6166D2605D0C0F131537417CB60086F08E7197AA916D590944BD801B
DEE8F29FFC516E11396CCB8395CFEC9262E22521882DC0316B0A129DBFA5FB57
E656890C2471675E0566FE461028FB05532E274E6DF77E7D320D09B2203BBB5A
8B185B66B2F8A18A49589C4EE27596DD56260D0D759D2A12CEF7FC3010BA1B36
85A2FD45129DC01A0C7570423305C25D957DFF9215102FFF35F428C823D549E5
014E7F99ACA6C10B3C92805376D0F3F280D65852CEA54F5CC9DEF9EC1347824B
0733D3341B34937316E77E952AD9366D3B2ED045165565F07CB636385E5A5911
2620E185B105EF6C93890833054E05B6301137338A3F1D6AB2F80095E57AE60D
6E5EE2764624849978C811EC38E014AE4A5823734C5CEB2BC22DDA46BB408D00
4F25CA8ED287D35E26A4CACA77D2D4B986ED2ADD3BC0C3405741CAD56DE28C7C
68E8944967C022CC55907B3DFACC1EFAFD38D3EDDA1AADB6E2C006ECBEFAC8D7
18ED3C46C331623D8FAACC6CF9292B8F1B407806A0D4808F51A5BC97FC7AD9CE
A6215D4C5E1D018F6DB70FC387ACD3EA938D56E3827BB739B4B37370F35A5070
3F6D721D3BB13D396410B09FBD30EFF6949E7C2646A16824AFFBECB59E88E6B1
CD338FFCA30BFC2B966AE6C8C6023014CCB5546139FE82F2F7AFE9DC2BC8104D
14A0A5D0ED3BDA05156E5F37017A501E8E9679E050CE80B88CB988B4E8772B7B
B3A9C0C25869AEDF3F12B128B28BF80C58E8061BC16B6EC654345903D31F526F
76D39290CA375F2F26AF6FCEC5940A92D4BBF4FC6AD94A39F9B80A924F561ABC
27D519786A9387AD5830088870B3069631ADFDE3DC3E5170F4E2BBC08CB1395A
06CB9B51A6CE2EE773C80DEA543FFE54189677201C4FA9EA03899AFC63B9EBB7
C9BE45AA63D17368D3D62B284671486CDB2FAE324571CF8C02B8AF9D04BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB67C3039A0F
BF0BA4B455D035FF3126F33A4DF59FF96752CF58DC0863924F6042B14DC2DEE4
099CAA764A8EFFEB78F7FFD276F0928BA32624C3A69ACEB8777A461298B201D3
4DA271476B8AC8966668D4E28A6FBA952F6D295AA80CC09B0CFD6BE840703B07
7ED93999EB5630C2C7CD9BA683ED457D1341C3AA702B5FA8593A51E8E9165FF6
1385693E19161FF1ADC1FE0BE16FD3AFCDC3916A309FCE6B3F2B362C9F958A16
821E1EB2DD899522DD3155C0B7A7F0876E4DA32FD30D8289266D9F05E77F1F1C
D3BFD2D4D6C8B6FDE0E8957BDBBEC54458C70B96F4CD77E734EE0CF620684024
EB05DF0536FAFF10FC6F6050AB338D44EA9C38150D3779A550C505C06D417A71
62D41C2D23843E0A2A73F72D4B5286E3CB7B8695B2434479776A59CB3BC6D352
677CCABF4133E20F12D91CFD8978C09FB81DF801707194AB8FABA9A6599C20FA
B36DB0A166490D20BB0BD53581A8715B099754E6FA0F7D2892F5573380DDFF1E
F9C3DA9F74BDBEBBDFA5715AE23264F967BC7841CE58E5EE2764555978D904F6
E8DEF6ED66C478848FC35A9827ACEA1D7CE85C8626C162FF296869DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 34 /bracketleftBigg put
dup 35 /bracketrightBigg put
dup 40 /braceleftBigg put
dup 41 /bracerightBigg put
dup 50 /bracketlefttp put
dup 51 /bracketrighttp put
dup 52 /bracketleftbt put
dup 53 /bracketrightbt put
dup 54 /bracketleftex put
dup 55 /bracketrightex put
dup 80 /summationtext put
dup 88 /summationdisplay put
dup 89 /productdisplay put
dup 90 /integraldisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C829333DC021F341712CD58F9121EF1A2BB51F22879D180B0D16C145
58D8FB577E7AC07A713A0C22DCB2A9645E2057CF70AAEB87AF8C1C9B03DAE425
4AE7EB9FA3AF71407FD2D9F61C2852C163C0287883FC434D2095AF273A8F4954
642EB74BF8C34DA61FE0D15A86F38D10153AD623712CE35CB692504E8FE86515
A28664CA791BC604CC1420EF9E59FF8E1C25D0BA7791FBFDBA4AC73309B47B65
4F511B242C3C8EB30A4D71595C008D0A61E0F0700B56A893A9B72884FD6770BE
24311ED4DC83F12CDE95D80A6B3BC91D910B1F82930DCCDEEFE5CDE1E762FEDB
A54EA3FA1204D737A24F4B88D9D60E9E10949CBDDD9C81A35B19DFD6A53BE813
A8C5B2FBADE4B40598F773F37F901FB353F1CD6BB8161D9786771FCCAB262CA6
D70954037C7FF5DDDF8D7C10B6AE689E35DA109E409D43323EA55DCE85739DC4
1A043D730BB81CA69D3ABED44A380A243DBF229EDAD38FD9201C81316A78A2A6
A63A96855392757F8DC5A7AAC4057E3E68BE5B3925347E79F2132C582D0176DD
86A84BABB54B5B1E735860E5667F3D2CF63549C5B67D063747DEDBA9899D6B3E
198E38CAD8FA0684404310B61FBEC8C7CBFC120E3A769FB1FAE9263E69DB34F2
DC0989FE29FB251A53E694CE7322442EFA053A38C5BDD27FDE43237072615409
B02256CEE49CF2900E8EA50E3461A584166CFF964E3DA1E503A6E624592466A7
53CB304A076EEE815DA1717D80377D27840A7CF75AA3419D2C91D00B27D5569D
D1D67C047E0804BDEDB30A7BFF907C34B76F4C0F239A4A6E0116C88F6A8D7783
3CA6B485938EAFEB0746CDDD5EE6624D80E83FFAF02977742796D70BE9FA77B0
C7EDFF4FAC0D7A17ACA4C04820A27788BC513CCF279FA56D4114D6EE65408A61
8371ADECD9F8DA8F37CEAEF15AE8592A5AD66C22C58527635504F8EE9358289F
0369820C6E08CA2368D511B76CCA17526EF4B3E47D3D4A6227E289EBD0A2EF8A
653579DA00FFE524C194F66DC86540E7C9BCF93D4B9E0C64E28EF99F8585B0C7
9026E96B4BD5D7FB6C8D4CE987B1B3AA6ADBC786FBBA1576C9FDD82205E2131C
62230E95199F613BAC1003CCB1B39A50C67C940485321E847CF779E268E09AB0
6FA60164D5EE1C6DF1C07812D365BF19910BE3A1C23E517F30F751E5159CFBBA
A85AAAD045C86286A5846E181B3678C929BF30763D33C5AA25A289F5FBC4B956
84ECA8A145D7817F3B0C4CBB808DC59D00782A363BF6DA6FD1EFE03143F49FE5
F455CDE30F173F581440DACCBF5A81CBD9EB651F797723A197266ECED80B3817
7E85B3052CEC54F13923AFC006B71A52FC3FF1C4D358AB0B36C5A6C1518DC44C
F8A788A5B50C3BC0D23EB225FB01E0A8C7E9282C13E02E19AD58E1BF3247A395
C374D9AA75719B9E60B770BB24C5F6E1CA077D5099D9F256034C7B285926784B
39678264EC88078A6C262C38848DD8BDB6424CBAD09D3DF4DA93CE8C2A78565D
B30257C9BEB18A762FC5C2454D8A84E1791383C2EF75F7754EF1DB537C9953EB
45A6FF10794DF686A0F2BF4239BE6C59343666AB9B020E3BB76F9B6CE0931B84
CABA10676DF1B62AAD06FAC77798B19187C280A1415952C8E1D424EE2E6151E3
32FA675247B69503DCC24767BC9A30D04D7AADAC7F9B36B51B5F08EF08256821
03C0FB55B56565294B46338BA83AD45625ED737593720F513CB442BA9B0B318B
1D03CF918B24CE3A85973DF610AE286F6251AB5D0BCE5C02B2C9FA11ADE983C2
CE6D45EEB7746202DAA2EF575EFBC3988FEA299F7BF1A5FBDED152D35241E559
91A4B0333F8803F0AE72D8C9478478F0498E736724B460E6625C90DD40575F76
C072047D6036430DB987A6BD00A992950512B82210FCCB7DD83B90BECCDC4CDC
BA74DB97476513FF72DE6474E52BC9A731DEAC94AF6066028FCA1CF8AACFA95D
64A8959CA6DF9A4C4509E619286D498484A562AD5E8390FAC1CC432AF2B86932
8D877A81096D9B70826F091B1155E2451B5FFFC5090247EB2C7A688B56FE83B7
955EB86988302D0939EA1A0D5A79A5BEB303CDF3FC1E7A187BAED1880B3B5DFE
1826BDCA153ABEFA794B541A79AB51188D4F6E32FBC8E0BDE2E2A4526B7D35BC
4107E933CC3D9FDD6E9C24E8927514E0AFE7D8000F2A02B7EE8D6C7B1C1C852C
BE5EDA1E47741516E26C3C90D6581A8FDD58EC7084FB2EAD0D66A5B97E40026A
F501DF7C86F570FA34F6E0B6AC34D82DC9299C96A0BD94907336B210D2EEA415
3E48B964DE14A2817AE74B7FA81712CB58F20EE6AEADA633B0DB4E385AA63404
B221BB7CB0D880FC4B56645F203AD2BD5F9070DA132B3AF526FF557DD14BF4D4
0CEEB5B228F80B4A13AB4B0F8A9955C6EEE0F3FC8C8B691C3241DEB3CD705EBF
F141CAD090831F35BBD3E02FD3FDB11503C638246D7F3565B4CCA48C44B1B558
193C2B40366715FF97128FEDE094478ECA4AB8BA87903F2AC073CE9D86D581F8
85AB9EE68AC3A027FDAEDDB0FC60843F160CE46AD78EB84BBB338EA2E5572D1F
8A64BC3D64CAE1E954C65599EC218E8C634F90F132AC3E8FC2AAE5FC87262C35
2052686D564D8B9CBCED9C90A0CC6F3EEFCD3CEBF7A86A9C72EE1AFAE06881C6
08F077207C66D0D5DEAC3BB5FE39792B302C726CF441D22C22C5336E3759933D
698D68968399FE4EFBA39052ED55EB5A621B1EA969D06FC917DF890BA0890034
878CCC2E93B13AFD2A2AA5F1798BBB0BBFAC612B3F8EA1A948C4FEA20EAAB4A6
F85EB3D73A21D053660F6164D7D4E26A19CBE3F35C2553018FA6B9F0742EA732
8662F18AE7DBF1978D5F80BEEB45FAD683ABDF8DAB858316693B7B86622A90EC
131C50A5E84AC0AEA6FD9E29417178B51E42BB2F9DF319CD4955B216A858D4F7
3714A9ABCC81B7CC15072707EED8A1F02527AB652E3FE62A631D4410F230F4E2
A6CA829536B694669A6C76807DBF652667534EDA204D3DB6B2EC88A2B26EC781
7C4949954AB3FE4825392AB7B096D74421727DA2683BCB6FD54BD16C78ADAF12
D3CD56F2F36F64A7B0C1011F9F0114B410FCD88FB873C45937F2948691A82E1D
38D28F64683C8544846CDECBBDD47A4715B360898275F26EFB47B883EC633057
A3CA3EAE73A829FE83A92554758EECEC2EE3A9A8ACA253C7C677DC1FC8D984D9
9164FAAA52E1C2B5857495C818B2B0F24D4B15BC25EEF45597EE637DDF51FFF5
70CA1E07118A925C18D9424F669EF00FD28A0FE7DB712822144896B2062C1C4E
C49F4C81AE1EA4934973715495DD4CAD6BE361D76B08348AE094AFE107CFBE27
662E7855516FBB80EA68A61E909D8BFBDAA311E35B88DDCB638D926443A6A73B
2EFE3B0EEDAD669DDC153F1422A839A7F2C91AB535A215E52393C68160207E22
0163EE16A74C9222EC1719ACDE3ADFA118EE0FCD98922E37108AF69604DF6CC1
AAD2CF371ABB106A05C92AC38F52D6116B6AD4505A7BA808B6D6C666436B6C49
561950123635ECCDEEBE575C727F1EF78F2C799AEF1D5CE40FEC2005CD813331
3C082F763B38214349F3FD1AF78F5AD1E0EDFC78E9DE26FCAEB44C7C8EA946EC
6B12EBC5206B7AA0D5D5A3A709155DAF070E8EB5617F52861F8754EDA46AB16A
B98CE40DA00256386F44D7A2DE94950D00B52076CC9A882A32FC8BA844CE21E9
DE3B01BDD129B07D46E9E6391C825BE30F6E7D5078A751146B09446B2121B397
B6FA1E70D75D268CA9776C075B3A7F49359A03937728EB057E14D5D119D1E66D
AE8EA971674D64D3983C12F76232138854F61D0D4A60E8B19285D449437386E9
BEAA3C9F569653B90FA0B8C6E7D0C2B5A405BD3FC6C404AA04EA242FEEE238CC
CC7BFAE8602321355C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 61 /slash put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 77 /M put
dup 83 /S put
dup 84 /T put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C9444F7FAB46B1A8E628A53CBDC4D4577404624C551B59B22430F1A4B9
69CE559354AEAED37503ECB297EEC5A6458604C25A48198CC839F9C0B912A303
DA01579DED7BE963C911C872F196596C93859533742F94A871EF692CB6A0980C
0B0E788184EDD791EC898092C73866EAF5C5FBEC3DB11B1804188DB17D7575D5
3766A597FD07A52B0A150270403D70D0923782C6E2A46DF487341F4DE0ACFC2C
8325E26A5E9BF28C61ACD202004F53179312558BFDBC05FD2AE4982A590FF5E0
5371CA2C82FAC65EB8DD87A03F72E82503A4B4B2EDD360553DDA78229290C588
149704EF219731D282D035BA94690AEF0C02962D1E2C5527A44C1F8BD3BED5CC
50D683B2EBA0B440FEBB9436B31D0C938BD76025B23A45D0342F0EED550665D5
55AB41958EA5062F00FE98306A026622B486FE54FA8B5668904CA39085F3D6ED
091AA98DA78CFBB5B1806D13EA48E81A57D4BA6BA21827FAE2867902745376F8
4A9E9F16C45864E6AD09641D9E1448AE85C8E2C218C94FE2D830A38AFD1F384F
909297DD7D0D1F89899A75C4D58AEF64B5B141E504E0DEDF8AF64D1C45FE695A
EE68C41CF6E6B80145A02449946A657ACF4E1D31F64AB7252400EDED31C87B54
C163C7BCCB2DEDE880A207B5B45936BC269D8DDB68FA77AEF12AEB438BFC8F8C
4F8D7E4E69A816D1163E2422C3CBCA4B5DB6D4D3A3EA6D37E684103C2AD6F3BF
199A23E255CA64D55C6CD96D8EC5B75E75375E12AA1FE14CF86F7FEECECDE6E8
ED8363AFF0A570206672D8497DFA2DC864E9AC8D7BE72D21235AC67ED80DF8F1
1336C3F90492883E28AD3DEFA9AEB10B6781AFA38D32E7082F59FF0302D6C69B
9223D974631FA30A48FAE07B2CB1ADE4C91EA5FC3D1650255C3D26EEC64AF10B
2A46DCD39EA193C77C327FB906CEC40C3FB98FAD46DE015FBA37ECBA09B2529F
D4F6268FEC90F10B6A470AE64C106BAED4E138F36600E7AAAB74798D62F07EB3
0803757E2D55EC2E683AFEA3F2D3F3FC14ACA680422D236A49E55C06A4E8A75F
8D8313F64062A8D33DE0202444FAB7B87F1C482F29D9D3A95BA87B1E055CB8C5
B795CAC701BD199547C328928494012D2CBD71264EF6620A42AF29C3E01DB177
C2EE0B1ABA9C1E405976933B1BF6E06FE9DF046A5633A884F9A25573F2B8B393
81299FA7C634684F3EA0573FFF6F650E973BBE9D44CE60B6E528A50617E333E3
2321B9AE41A89C7079FA31252A52984C9B0286BA6E793F9D234BE638178CE2C2
41BF9E37A011637345E394F6BB40B4FE29A0D0AC603C3750FCCD6795275BE0E6
43661D5024AF4A120DB914329861CA083EAC01C6B17FAD9C6DC1B53384051724
AAD36B400B2663FAE8873F571F1EA544CE0AF91F2924FB562808CB0D92E0F6EE
BF2F05CBC2D710B31FFB90587FB2C387BED13BF165C57159B89DE579468D9D18
3A1C3008654A928EE30E4EAC7B6B5B6E01B415D28B1CD9CA6B864C4C28F8DCE2
455EC6AA2D5E9C71DFC49794997E2FBD950D112610296F2C691DDE7FA4BD1077
CF78C45C1F6E3852192AD00FAAFECE1E0306496A5A5A5BD753597710C15E3909
5A7026C1EFBCC76BABEE1DB5DCB1FB799884A54E6B6C3CC21ED3AE4562DAE39E
F07A48CD90BDE84EFF689323FC1C925C6CF192A818BF6AA0B9AD93148C4ECE89
796FF3306949BEC6FCEA06C071646EFC9C54D7B890063442BED738D054630E22
90A61A1ACFE4ACA3D277996E470F07E8EE76BFE6FB7D600D349768287DC963D0
96BF0D9AA5750D1277BF33FE2041BCB7E12D57B51F20B1BE9E176F6510CBCFC2
5456507F22B8CF8A8951CB843571E8483BEC630F4485FEE39A2DAE01A689742A
1D58E2D729CD032C73B8467320370B30FF8E14AD6DF7591E915BF3D59DCA2A75
6091E6E5EB654F05C633A2EB322FF91C25BB583F5FF74A86CD4A2CAC81725A49
0682DF75E12D6E083566DCFC42AE6185796BF71743E697D61541567AA8BBAB0B
F4B78C6A70F6A745EBE18631ACF39913774DE393BB74890CA65C082D0D301B18
4B05C824C67647C3F4D6A5AD6C9845F3676718A606C9868C534E60B80599BF59
57C9A601296988E4E216F190F5E98F85D459E5E3C5A95A6D4F138616585BB206
FA778818FDF7E37E2E313079B3EB9C0192E936045C99BB4BC7C4B01CD56F62AC
BD9D6A1F8F7E583BE0B9D30C2E9827572943FB013EE00121909EED0B726BC0CA
1C4321DD0034D96B2EBE1ED78486BC4E6052474DA3BB4DF5B5C34D209840F5E7
0F3FA49BB419039515819DDF6A1DD48EDC9C3A0F6CF130C1AA70D936FE831AFE
5F75BFE2A72B61C5EA3CC8331FBF4B73E74F6F845F247DC932EBE8BD661DE493
E19051900DEA2DF3779C6C731BBEA2ADE2B1736DCDFE49C5BFE5557169BDC39E
504F1B6215BD1F3A1A9C5E2C19BB0FFC3B90CBDB63EAD5564754DF7503474900
ADA03697A39249A2352AB6C005D932E0F3BDD68F10273C080162FF24A54DFE0E
FCEC74359A0D52F54340E4EB306364B3C6609026A0DFE127DEA4E3298FF824FD
E1CF92576E5665E58457E2330AABE5104B72D3298DF69CE40F35F7A9EBDF4C90
037D7702F51C84223F06703F6914D0059BB0351CF35DBC2F985268B9E43BA459
3566B4E516CD25BABC98B81B5E85E56F72DFB5EA140AF894A0216623C2EF5137
E45CC16E07F08A10D29062071AC1BA6FF6E017F8D96F41EBC46D3F240F55A00C
DB549AA759EF77809813D746BCB66CE3EB96C75972A56E2A3221CADBDA5DBDEC
EF651C030E42C6DDCDA1B738BF02088B26B3F28CD1FABBF31A8D2BE208B1DAB1
F758716006517F4CE9871BE3CFE430FF49AEAFE2E79BF15E74181536C25F2EF8
5FAA483FBF494C0E3C91543EE704B53372C025B1DF96F24B18BD797F7AA94555
8E66D810505C759C9537E72BCBEFD10DF016C014EB0E46F17D03000DBCC091DC
7EED72FE5F4577A8C45C4DA2379D4A220A5247F0A6481E5E9A9FA48FFB469905
B6AA024B1E163E47AC28E0EA59E75E1B67447B843A5232E9B9A121920AFEE64F
30B00F74BC10D0B2D0740079A6BEAB99F928B0F9963E5BE564AD42F8CAD9352B
25218D7BBF37BC2D0889C1B40845427A1A153661C85EA066F036096C1085001E
5C19B4CC6867F0B2FAEA8724F1ABAA9BB59667CBBBC31BF4E39D8653498C6192
D48AC4A188DD10A778DC3C5CE6F72DC49EA5BCE889699244D86F391A8049EC23
6C1F43044DCAB742FB77B215D6EE0C39169499DAB164DF65890039007DFF58E5
CC038EBDCFD4445BE970F80782A0B329AF0C3CFF63335941C2276748E0CCAB47
9F259A5372B8095778698996083C3786410B6C8084EFC04EB9A03A9BAAA4208A
E92838DCD6BDC97171EB0F5E25B942C17B725A94ED5BA4090F3BD3B5EAC75D7D
1CDBC3DAD8A910ACAB30929B80F3BA0EA22D9334258E441E84323684864EDAF2
02CBFBEF5B370FA810C40930A944057B6745EA9DC0DE2FC2B4E982DD11ABF458
109B9E1F6CDACE11D1CC21DA7C400C54B088ABB5F2DC9E3D22F7FA3E5164E70C
3155241524BF51BC6ED59E31E93D70CDCEC6EAFC84F856B606C6FE9F69039FFC
616A7EBAB780893CDF7A074943E02556FDA0E51FA7C0574F2023393FEE39F5D5
9C29065FA315F0242F727E7B47A149E93F824497A1417E6D62EAA6A931397A15
35B960EDCFD1BD6C744AA66B7CD7C08C0C179B4F74B59DB16DAA0D43FA3F2F6B
EDF00D986FE4DAD245C656BE8CB02E7D70C1193D1211CC4093AADD9CAF5F8014
F01DB749F1933B116D2EBB216132FED19570C0992D13F5B1003660B8BA3D988E
72D5100E4B20ED1577E49401C77B4365A0BD09A96C938D77168521161A3AE5E0
172ECF223B8D81D3F947FF6A9239D572BC73CB5E3ED52A511E695B8811D2595E
85B509003380523B8AECFDFBEBE621BF0EA1A9BF33186B37F61C57884D3D1500
471DF634436E2BA13C86EC4039AF93E2527835CA1088C81143C2DDD6B1A1C341
8DBC7C487748FB8351AA2331A97BD034FB80276AA86CAE16C1504CCA7AA159BF
B7AACF486B468E3137EAEE1386152C050A2162DD2487528C689504578BF31638
2993DB854245119D72650C4C5EF2AB6E59F14EB14533D0A61F10C9DFACE0DD54
8ECEE9FA04A51DE35B64A020B09644E6C1C1A7BA42A64529AF57CB363AEF6F36
8E692642AF8A7C9BFAE33F89DA57274F03177786A51D7F900851AF23F59A4B75
034E927B7302EC9DA8FF9DE96DF173A7E658634F8D21228E5007D5A6DC055B7E
7578ED461335AFBA07FA2019B5B6DB2090567EE2894EF48EAD64206068BBA3D9
DD4CC93043F19E561E8DF57C993E6A36319222FE3582A8B52A0791A74EEC7C43
6379870BAFEBCC91F2CEEAA3D7696987406CCDECCC790B7584707F3F53C5543A
1EF92889C581711612B49A1AD3CCBF990AFAF68FE9AAFFB3E37BECF9C7DFD8D5
5C8EBF526D91681871DA8A6F4AC9EA5AC11EDD863AC5A959E33D2BAE1CAB0802
3D02A28182977BC41B943020E5D8525BCB5BCE544A75B9C47759A01048B0C2FB
AB0F63C58E0C72EC732265E7550D48AE6624245F1EE084AA3859BDDF0F96377D
2692A5F01B6031B047552A88FEB66A01BE0802BF8A76E02DD6458E81928538CF
22254A643DDD5A8F2633F21355B38C92FC2DA7CEDFAE029C1791362B1A3783A2
E84F31A0B828D2E15E0C8429E191D07C8871D83BADE3C1D7F1E487F463927D48
D5556797BB952F8E2E5F4F1DD630D88EBDF157840713E5C5328372ADC68AACF7
B541F53E0921904BA0F5C0F8BBC779D73FB0ABB60BE7340014F77853E6BD6D94
0A05FA1C0294EFE03C73BF0B1DDF471206F60866593F50F6EB5CA6F27A5D4F0C
3125F2C8500287059FEE343A12579140A2D39234C1A723E1ECDB5BD6B8B09E9A
1B30FF47DD593E1D8D74DF6CEF24B42E0A6AB40F3F25B6BA3CE07C191F729FBB
937F7202B09930E2B1D4AEDF76AA8FE8ED3A27B5096CA97F3273918FEF759612
7BE2585FBFC963ED21365FFD29847886E37BAEAC85F978ED3E1BA67A9263D159
9358C13E2B0CF09B29444674D31FB22E28180E387C3670CE13BAD749C82DF472
3C466382713A907F29B9A9ED94E6922CD3E669B50819CF35E48074934CF284D9
2FE61028DDEC5BDF0CF17B5DE08B347CB2CB135BFD4E90C90C86E493AFB3E1E9
0DEDBD2F496376D7275BF253CB16B5277EDBF0B7D584F0616C0BB33F075AF5E0
9D8C712AE40F3258ECFF03A1BF84E5B9FF99405F8DC1A55D0B9EC434C1E62F2F
66BED1F54711B560C2148C32E4C35653EE26DC66C84D566640E8F12FF7B09307
8E79E5C2E240B46F40CC29C06BB209F5A9267A288879BF9FF061505957252B58
F59A1F2BA0065F8491BA3FC67B63AFBFA17FFFDA27058DBE0AADAA8BB7149505
DD48F599F3D4B853906CC470EB29677269A2178D428556E368D90B187B768B61
4C05F5C52B9A23C53A9D7C7449BAD8204D7F7A721AC730B7D13B34949B704C61
E81EF16103561808CF557DDD2DABC429F17071A9DE432724D6620AFC59887372
2645AF234807B6104B3E1CB9AEC3D5C1F7DBFC4B87C3C9B7F99ED701F9E22483
0E63D11ECCDA41DE51C8D8E619E3F0494D7B70DF0C5F454B00182E697468C9DD
3211B34A053A522473FD6E1DE8041BAD35B88E45E4E81A3981746473F3760BFD
03E8BD89B9E4CD3F382036526DA1F63CFBA1CE71DD1CA9685B388C4BA32086D5
4C9AC728DD178D5D0D4CCC66DB4186335AC98269C2091690A80D9E702A6FCE11
632E04399BE89C80AC4D33789FAECE1A3F2D55510E3EE7A0A6667F34F4DC2B0D
9352FBF095EE31750CE68BE009DA47D0E777E7A21A3EFAE3A981661F9566CC79
8A54747AB699F78C3FFF6754FC23970E5F65B1AEA8218A23DB6B010B2F3AE2F3
1D390FDE91CE19D678FE3EFF2DE6284EA57875F312092FAA7E88A2BF1C9BDCA1
02ECDF25AAEDCF6A2F5AA71827FC2CE7EC2296116AB342CCB797DEE44FC565A8
8419CC9C3B5C4C1E3E2AC57A4D16F7D023BE802CA7CC1E1AADF764E55F54F35C
9EA57E096B52FB2B6F5FAE553FD91BDB30CC76B6776CBD6E8EAA48D54E12EFF9
3ADAB0B8E824BA268D9D4685EC65704B17E581A92B17C14A4B5CC4841823B785
A7B50066D500B74B1D22CA361262CBCEF358AE091725A907338C1D85F8B18E60
765607FADF0CBF511868FC0E23063CA9CC0777AAD7E35B1B00325D74D6FA07D4
70B138526F33EE3FED096FA4A8E2DEB605BBE6D2685146BF4B71868AB5E4D201
0A69208E4C4A46857EB18C384AA34BEF5E1A983EFEBBFE37433FC2E4C406DF73
E3A9C54119CDA84BDF473B96BE26E7D523D3BC46C9EDEA35206966320F97E345
60FF8A1324AE577CAC43C4FC1365294F6636251CD37B2791DE9D869F85CF6CA1
FE499FE866292A33615A06405DFE0BDF0FA629BB4FEB239B72D918ED9CD36C41
1F7AED3E8AEA000CE241A1263DA9B11B6801D268B4A62D3E1E7FE659AC84B3EB
D022CA6B43E6F3F6D1A88A02AF285B5612F0C04062332A8158ADA9B509FBBE79
833727299ADC47FFEB9816044E1617A029950CDB723306EAA97490EF1C486BC0
743BF317EA302021CFBE871BFE7274D52C44725B83CDC6AA507A8313714F1F91
5D483DA70BC2C82BB2AACD6968461D77886B602F08E9D556B4863065F73FEA95
0D0BD3737C29D6AD308BFC4D3B6423206EFEBED3B5741024AD882A70ADFE4576
6EE44A26D8100573782D34658C86884BDC40878172893AA2AF64797198861C36
682E1CE89BC50E5A718B267611F3E2BE431EC8AE63216E048362744372D39989
517887C5C849D441931A719F970A8B1F531A577ED77DD95C4731F5C3EE8C5282
473AECE66FD28A5C89742610F2DE7D60BAA19A8D2E52A10B222B4B3DD0F88646
2F40A91FD6AC626C176F249D86325BA202E059291EE55229E905EBECDBB10518
959C0AC4B00C78194D1F9D271471BF92CEF67E31B054202C5119F2ED97DC8160
B60A01D8F2D3CC67624C37A805AE9E5B079384B89808BEAFD5BE4EEB5BA5CC05
12FE996E2DB8FA3D09A3D173F1C4BA4CBBF8E0CA5D06EB9C07923807AFBCE7D7
384963163A1DBCB8998ACB154839AC557D4DD6C714DD217B5A25FE7E6EFBF15A
C7B3AF1B7C4F7212EBC70878E8DC098027ECB63CD29DE03CD3D14BA1A49E2C26
E642A6F3B190ED4FAB9E52115A35A925AAF1662762F8D72BACC7391C3B066684
145857D335316A6D98A209D821F97C4C520EC52B10840B823A3D8BAC382B54F3
81372877D086BDF1588305FF8CEA56E5F37B863CABADF07BADA99B8C110C626C
22818BC64C515E7A9B5E60E41A81430E19BD835ADA9DE6490B82940AA4C69321
4CED0854544406C3492CB7502B02A5D43502E289D8BF398976E1EFD56ED09E93
8648C8B04FF1BA7A2B50C4DBFE546477ED920DEEF6EBA01D0D5355ECEC149DF1
4D2EBD2C946BE8E6E38C8BBAED7686BC6985271376679482
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 10 /Omega put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 61 /equal put
dup 69 /E put
dup 84 /T put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7F55673AA64B
57E454CB38A7761D36BA4E82077BBEC4C5CCAB93658EE9683ECD0836916581C2
A5E6852C89AC458EE6EF9F367E612D9870AF027B89C28E34BEBA8361BA51BF85
A1F2EE44C34147FAB08BECDD512C0A52591C2F499195293D54526D2E617D60AB
2E13B1CA16B8750B2239C5E38BC023DD47AFFBEBD2CCDFBB211594510FE2EA10
5DC76533ED951EAB3FC11344AB99EFCF0621D6B5005B37DB76FAD666141E8534
1A528873514D570333A793B9354426EC046F323E43EEAC53822CB050B6F36D54
9766283AD9E2E2B920322C14BADFE5D9C922933A23EA8C29BBBDB90743324283
F540D5340DB021E236D125ECD3BD2FD8059127323A0D2630E0861E70A6BDFED3
8FEFC47AD28E867B62BC47C0679AB3CCEAE1CF46007ED4F5C73C531BBC3CAD2F
88E4D9DBB8F7F1D2DDF7FDC8E26147350BD1C15E301BB6921D0B2C9E0B61188D
6D4749AA2ABE180CD9B12B806C88AABB49A8354332A14A138158254D675D3C75
001EA3508552C1812CDAF1B79B8C18AFA5AF39F0FE52617604F453DE1387DF39
98A5CA229C4BA1CCADEC9BB323E108F663FA4396D97A76361061E1ED45E23617
0C24E4F30778E6E0B6F7B57E897C69E71344F1A2BEFAF805583E577B585576B6
FA5A9F97150C9A9AD7245B0A1AF76891541A8805EE020A1F3A86279B204CEA16
99A3A6C46B1BB2D7498EC504FFC24739CB1FD4E191DEFAE40002ADDD59E528B9
A9AFF31002A9901B9A713D319E8698CF29A1417486B148A98F5009D026128A10
374C833D05B7402CF694660A494C877BAAD74EAAA158FCB6D27E1DB6142EECB3
976AF60264E3B947AC28E49EFF234055C74CE89B15A38335916E98902E09A8E8
D7AF25BC324F7B3D6D8FCE687B42E9A824844C912893517EA366F28A8726BEA5
C1C293811868D3790FB30E8D8915CA7F1C959F825722178E259B787BA6C7E545
D8E8F9CD117A4833DB39F894ACBA7A4714FE91F7AE1FF5FA03BA62FDC71C99E2
39410E0EE392A05EEA535454CCDC000EED3146A3B5318209E272313C32216536
14A1FCA3133217F77A07B30D2A40AA61216A699490297F17DF821F7B07C60F80
CB1A4ABC0EECFF76AB8ECF4D9AFDB0A56C7252841B333898572D32FFA7495DC0
8640459367D4A0D2B6587F296E6F07D74AC474CADF31E3027C6C879138DBD781
A17A8B0BA43DD92FBDF112385A3EE518926E06E679B619F65B2024352BE460D6
10EE2332BD3BF9C9B2F696D99752CD4AE0A86D3693971614CFD7E296F38E5F3B
FE8D5C0DCF718EEB0C8EDC337F1BA9763794BADE37936AE60932FE8178FD36A9
711BA030B8151A57183863E5A07A715707A0C2A9C33490288964255CD25A8305
269B367910D7D401AB7D1BA3117D22D21D7FC8F3CAB3F8EA1EC7F2C94DEBE194
8F77146BBAD3CB1D3216D963EF42FC7DE92529B3F7052873B4B0656A4B5E9FFE
8E19D19CCE8D04D386DB2D9C1E2A72BE918CC84DF30D3500C1ED44632C79A181
FA1506E78826A97505BC05D6B516E80F5BC8257E7107E9CCB0866E35CBFE0D71
77378ABE3352F4FFA4F8C9524D768A32977768CC319995BD3E8FDED1DF44F0C2
C81CE5F6F40BEC3C2996033AC9F742B04B07AE0EBF81048031488B12667DD3A2
9A7E48340E244D410F71149D25E069F865784C6BC9475A55CB9FD920B99B1C56
D4766CBC52BE2700CAEA0796B2716F2BFE29B8BEC83756D7EE9A020AA712B1F3
043DD620863D4AA9CA952B9CF03B8D98AA6123B38353836B030B2253BAB4C4DF
F6AB35267D355A7A296E40AD05562F0A0AD5E1E94A6AB320D8EA53BF2763E7B0
54A42FB8EF5B8C4E0D932AB2F30FA5C2E18263ADA0695549E5B8F69319EC8F28
175A1A9944AAC58C6BCFBB6F49D0F731C3D934250D096260E97E04769AEE67BB
BEC38B3B5FEB8E6953E67726DA681403420DDF53E2128EA340FD9C1CE1B4A3C7
42FF6D760053BE91AF8E8AEFEF984EC6C9EADA8FE6C5720868CD05EBDE0F11E5
F145F0B6DBF0C2AA7D806B0AC18E3C6468CB54DF033FB3728EDE1DC80E6AAF3A
C3ADE643012348B697FA525882C06F76388E4950C2917CCBA44582341E07DC80
53AE19D03C1E32E7D732A62725EC268D9F5F7448BD8D65A67617FDF5358FDDD2
FDA1191400709BEFE6D9D5CD106F928D61648ED4FBB1DFA06CC93C2252D66017
4244F975CC301D4C50526F05B6D922CB3C26C7E063B35D6E485A7D49FF302D1D
201A2584E91D6665F1B6D8C65C5490CEDB5DAB5ABFE97DB2C659555E8B479B36
AA3FDDF2F0714C47B2EB09A3F3B6AD0855C9E5FE08F95F97D9AAD06CBC480A7B
DD1F958B46F48F63D94A03E66B73F47DCD3370C1A8F9B07AA9AC7042DAAE7097
94106AC7E150B0D1F8B2032C50317515C0D02D033E12F9707EF4206FEB5E1E1C
C83F997363050502D5D4F476AA1E2BE42CBF4BB13632838E0F666EA60D68A9C7
56C82D53C3441FE724782829BA251A180B854D19384BF06C6912B60DE68D2A89
756A6F2F50099CAF6E67E35B906469285B8BB7F4C5E8A59891862E7910551132
1E0D9FC4144CFF905A708257B461441D8873CB88D4DDDB2D8C0CFF47E67092CC
3903B163D3489D15F7D89CF0E37D5C4BE9B43229005BE19460D98504D20533E1
1CB88FE0DEF884A1F7643987F94D816D4C98066527F553851786919B43A0BAD0
BE8FEF0C21B2C52F011CD98A624F752D1B574445E1117F06EEC82202ACF701DA
F946DE06E1CABC9FA6BE780723B3D59B0385391174C883E6A1D0416E6ED9597F
AA04FA237A43F1D0C20A5E7618DEF95D9482FBB76DD8A39D2A9B36E791C8B2F3
4E1DB783936E48B30FFD5E2F4496E55E09644DAAC5624151F7E51218DBF270F8
33D02A3AB9A84B472EDD7EBD849C36B8B1CD0A36EBA45F1994D4C0F1A7EF81AC
ACBC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /macron put
dup 48 /zero put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 102 /f put
dup 117 /u put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2BFCDAF6
83929C834F44330D12122CCE26F058E2DC43ED8EB5BD1B9F5DCC59514B81F5D4
330CA057079F9E7B5203F56B3AD3FA4DD82AC6882403E29FC8031D79FA4AEE27
044047FA67D9F4601183AB02B56194D1F7E632468BB01C4C895D6B1279AE2C35
623E7B2FBB18D1A0D7BCE2003500306BC0C6EDBC19741A9BAED6185CB08A6E59
FD3A4FB8D49D290358155BF91393EC94E0069C6D2785F1B230E154913B0AA587
96AF44BF09C7B41EF5408E5B55E14151ED2B47B3848CEAA64A27B0556D14ADA9
F7E914564D88CDC0D83C1D280EFDEB75BFC21D2AB37C4BF411FF8CA8B688A8B1
5547ED1AD5A7B750DEC54F7C8683609E7212CEE4E7D6AFDF44E5CE0576C4290B
BFF1F4888DA80E81CC3B4B8C8FCC4592DF9B2F663870C185275E20F68C52BBC0
1A271CF6A7172F222C265C4B37394554FF29F760D0B188BC0FF18E409D6AB97B
5BD9E8EC5150F5EE9EC5E569EFD04C868E3EBD16A7DBA1F66073CA3B1722D958
9EFD78123CD3A26B7EE7E421ED3CF86CDE40B738425C81CB38E84AC1DD3D7DD6
9FEAE90060F5AA64B4276AC1F640C1A899C7484D377B83FAE3582DA50E62C6F7
06BD57B0FA351112470E112509D7CCA4E7EE37CDFC69CC8692E78A6DD77493A1
0298379159532DB97DC114BDBACC0C982E05E3051590B5754499E12726587112
671D63FB767DC9B1C03691D61DA854326C79782C415FDD9191EF90D0479922AE
9DDDB688F218303B0BD629FD4757DCD7838B2EFBE9C21C7EAD0B6CD5220C5A4C
150753BDC3875851AE7795BF5DFE0CC72829C700FD0C6DEDE0D510435F9A7681
64ABAFA01F2E77E639C0B3A1B3D2D45D735A056934B77F21CE2194C444DA1DAC
B6B17ABBC2155FF1AB4C2F5659F5F17ED36E9B44AA25BEE49C493E1A44E56204
FE5D9A44BE33CC50D6C5BA50CA43B395EC2BF8A96A3DEC338091140552766FF7
D4C59F8B97AEE20F65D6CAE055CF4FB212AA43F52F62330A0894360B60BE83CB
042F5FA9E20D469D6665592F097085B1A6D0BC87700878B2E4666C3EE2FB5D9F
6D018CF122DF4B4AD29C6200F229187BEC76DAC750753D0F097F493347E9E832
6365249A221BDA4D3FCA130363C26A3FA6B4191DA0D8AEDEBF64A9E4F2045A74
EB58F170F1277ED2CBDBC33CB73CE741758EBFCE74107408BC7AA955B14A758B
4B56312A96B102E365676A8F193532BB8629C2889124583BA3EBA1620BB9C1F5
A8FC5233BB8C8F307FBE242FC8C6C1902A3A1C3605A073D9B50D9F7BF72EE263
65BB12AA85993DD4855E5C145FD0F7338BF4BDC4D2FB0FE52798D4BCB998ECC5
D4B6C5F4595F7A4E90053FFAF4E5AEC3BA6458CA8B54298FF52EE037DFC69E21
5FF2599F4E18E02E442A0BD735D6CB1465A4D2005F29B349646259D052329EB6
DE2069870819D6A0B7394AE65D01ADF149B5A712AA64546CAFA44D32D6AB6E09
1663F043B03504AC7FDC425A18DD79F2B1E99B1A35E4878D7F456AEB4DA0E5F6
4B9A7C7586D8AE995D3952882E29B61C379A0F99F27D8ADC5EC5527949E4FA22
F2757D7B55C37503A56213F26E895CCBCDF36ACA42079949A95610AD7BE41923
4606F3B08EAB8F83CC5D65250C4B0D082B43654478ED88555906DC2098746437
E785C494586236B6635F6A39EA6587937A43395A16DFAF7B36D927A475F1A35F
BAC96960C15C414F24EFA8ADA7AB399CCA6C6544549BECDE3A2E6453D5ECD74F
0A536E729E22CF0D92C7E399E80AF83894307024F2C3F99D3CEE0154ABE3B93F
A224AA7098E686F16B881F6F2B9AABF0A5480DE10F54B6295CC1919C3A3B7F7A
DA39D4CBB0DC903405D15887087EF0EE793FA54FEBCFCF6D1F9E9F5A001C809A
6D3D642EB0DFD54D54F41C951569C4B6AD89147E6CDA6568D1598806CA1B630F
D78DDF0251EA804AA772A36EBADFE180CA401F11E34E09BC5A05B3881490321E
824640DE90B816D322EB57176448E1B274739A9B61E2A150E58776E92F2CECA8
563328FA9FA5EFD54B5A4595CE44F30B9D1A5E8374DB4588BB48C832F5651E54
96B649B5F1AA9B26A2BFC1EE3C1CD8EE1FAB7221BD11BCF77E0589D079077D7B
8050933F5A29C8241685442E286287AE99609B7572654BC79A01F8A630B66BEF
0981341783A54345EE073015BF10CAE7E0C789BD4D435286C4F189F769F4470C
36BDE4AD2065929CFC4A468A077A630B3F4E130F4F770BEF2F95812E84AFC128
C58211F594640804C8C225A0FD81BDCD4D45148E2189180184E1019B6B3040DE
6419AEA1C5A0C8CA3D39341A57890AE435B284B5C0CB2C4DFEF477909437198C
811C87D62C5300B1891548513674423671DBE02D3E292F61E216738E53023165
C6E967D170530547C3360478077A8994E07456905FDD7E31672933C890FD1708
3C9F99BD078C6A7FFF89B1B5F8F31B7EA84659F254972B529FAE3627DEA1DEA7
095E0FBBA001DA49D0322CA1DC5A9EFB511FC737541943013482ED31609DFD88
29A4B4A36E3F358E2E7548873F74EB326EC3B955747C2664F13257747CF0AA40
59DE55D9E1E498A55420DBC100B8B2F6FF730117AC2645648EE1E96B315F9DC1
94F98932162576E4E87B6A2393845F1D06C324C8CC3E4F74C3900E246727718B
D59E67C1651E03585FE1990BFC71A02EB86BB3DCA076136EE1D6781C0618E29F
E6A3D1C66EA85D8626261558EF61E9E2BC0D93BBBB08BC3ED4BA6D7F8AFB07B1
13E3B8CA13294CD52648D695FFC2BBBA415653EB85A825101AFD1F03E8DC16A6
00A3331F13D43F666F3B6381F5DD8BDD567B2C95E3F75F9329D84DAE0660034B
1D195B6844F7787F901C30A634CB8D61DDB7F5B92B3DF2119B09D103D42F942D
F84A20C127548C34CF891E7243949F9EBE2E59548A810E73EAC39824B77548FE
141804A8B8611337CBF45A4A65A7625217C9D9B916805870BDBC2CBC555C88D6
0BC65F70F2E8059A991C5677259C004090A651A0D5706ABFB06CC0F4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 17 /eta put
dup 20 /kappa put
dup 21 /lambda put
dup 22 /mu put
dup 23 /nu put
dup 30 /phi put
dup 58 /period put
dup 59 /comma put
dup 64 /partialdiff put
dup 69 /E put
dup 70 /F put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0A265B570BA294792DD2FC75CE2C83DCC225B902551DBD11E687EAC6E85D2B
02C28359A40AE66A6A6A8862CB17815B41E280313F0EFAA9981755611F7F683D
35603984D60BB0C772054355A97A5E03C689E23B04DA79080CE4579CC90EF38B
1A64CDD92B907AE83192C3C46C5FC40BB412F6656DC6349E6D29B5936DCE94CB
98E3B465FFF7574095F57BB3750F1A55F20456933FCA64CC1B060E260782BEF6
721D38BF65DF1F1DA5439DBC802B4A9D803BD635C05B9ACA4D26C28195A1F4C4
CC623B30B076D4861E89B93930F6CDBEC9FC999DB2518ABCD8FC642A0550D89A
2A4AC05395464CB25AE01FFE68E34547E710103B047C40E0F9D4979350BBDED1
6FBF087E7B19716A3B21E869A77F334E66BA81164918688A7AAC857F875A51E9
BBED3C9E9AB2A8A79B5A871AE31E057BCDDDC054CB3867AF0B7E340E3981CC10
BA07639009103DE0E095F7129DC64B4012AC9CE863CE8B7113E323C2C363E3D4
99F3DC7411DCE3D20E2E9F670040E0BCE974AEA2DC5B3509DB8EFDD8B92ADB5C
85FC86B7E717F3ED85E49FBF0428125639D0F9FE44C80AC957458FB78C6ECB64
60A281A80F502523BC02292E1924E82C6D4D3640CA3A1CB631AFA51A23677CF0
68D2C6DE37E623426B8ACF222C196AED0DDFA568EAF54992B3D6E82E049F4EDC
7D7F5B4F3B5F633645BCB0CF498C4B87E6795001F0A64B37B8EDAD4DDF40C386
DEA9E282359D114C1015DECDE764D6A2B3B5DF5C4DBF6B4B657DE23503184AC5
C0E91046F1B4E859D84D5AB504CA0DF6D98F37F7561AE0AAF625BA4F3E743DD8
DCA42149633DF4B08A853130FDAE4FC365E2355FFC1CDDDDB2BE9FF2AAC046E3
0F75E8935FD09ED89613923F255A4C54A8F9208245F768E17208AE8943A31962
1DD36546EF56B46DB857F381018CFDE16CAE3866B89CDD96193CED432A46ABD5
B1BDB9E96305AF008D3B2DC8F573BBA80092B2A70D4A5FF6F981F4E5DF503E22
84BCD2407C3047DC79DE16A9711B886A186DB61E3F985EEFDAD748E35BA03252
C23A32E2A69EF02B185942FB1D837A50C8F3F035E43C7A15A8B11E2E15105043
92311E08423DB129670B9C1CE5CDE4850389E5927DEC9B8A936EC8DDB0043166
5A5084E061F9FE2A8B8BCCE02564BB66C224B657B43B6617F56B06636F189F88
2118C80896F016AC5EE22DE54A92B8E2125087D744D2B27917645130DE32FF37
A385DEF5C6AC3D7182FB967084D12BBCA45D8F3BAE1017CA418121E1DB3A9286
59FC9A733230323FFB08EB4AAB7439B38188EE20EFBFDB2AA66DA0C8A54245FE
0142B801CDA437CBAA2D563B9BBB89C6FF825148FAF27A78C165F4A646FDD839
F700EB0DE5A4FF8014228B2F3A6DD951BEC0A63957219FB9CA2517A50C8FB295
721B3281D6661ABE6079D1DAC40B84C175C00CB810F0A7B66FE14E5DED155EC9
E147D49B93FC154418DF3F151CD5D0A287C289FAEF175687FB5CB3AE6A586000
672DBB38C9011D939B07CC4E3FCD85E2B67238A617BCD7859DDDD82874D74241
A438262EB1EAF6931EEA883BF31A806405436338CF83907D2A7275CE7049AF7A
824DB46E1E2BEB3854888A6D65BB875B149C9E090F489541E4F1FBA18C14FA8F
08E6B7782C490DF5413BDD745A0BCA46810108F79C282C1E735DC50C21AB9739
2288E83FB500C7A1F20C4F41EB5FF1908062A5AAC0FDB4FC9E7C92D90692673B
86F03CB5BFB9714BBC7B4585B83225F5A305C8E3C699DE40B7877F43C1DB2B84
6234D72001BF5D8B23BBA35798F2842E3B5B3A341C8B5F093E15CC757C2FA829
B8040CF87D9741F0FC245F8CC7AA0DC66BB5C425DA7C9886DC8B80EBF52F140E
F7069B2CC69AC7C1AB6F327784A02293CC6212B602BADBDA609ED763ED5442B8
14B5E54C425AE05A005130F6E77048E71890EBD29E8ECC13B96CC8D0453045DE
C54AA4D772DC78FC4879CCCCDD389C53CE2887FFB3CA5DA747A9C0CB8B1D7297
6FE8274934DFC0F635163F00A2605887A9DED94945BE9495CADFB8AA39A7D71B
8E268E49D0A56370FBD6D080F48C6775C35DE27F5596C774A862BDD38BCD1FED
DB534381E7B85B34B0F9F17A0849E3C6459DF308E6BBC54F71CD91E0D0FBBEBE
31A9D357B631C0CE66D695FCA59C5A502D03364DD11DBB14569FF2A3073C0EFD
9A7645E2FA3EA1412483D43853D626BA1067451CFB03304538D98E2F9D978C85
19BD1C5A74BF20201D44360BFD8E802E2CC2E6C65DCA46C64038BBD922BD7D6A
90294844FF5D3F5D250F8C8F4FEE705C2B6BBB42A47B4FF2267F31A13A8B33F4
D80A8CBDCC3ED833A95AF257AD0C64325E785D28EC2349EBE2ADEFEEDB3510F6
117EFCF1752DF6643248E48C0E7C5EDF2738885751B62424A4038F5BEEBBC01F
6538FE849DBF69F986A52B7CB627E4E0A3B25616F87A43FF8EF4E1800D10B758
4EA562BAACCBA2039574F46D3692D36F8BF2B655F8ED571EB686B66CD136E134
8075EB52A290589813FF1AF13AF3A844083C8B6FAAADBC398851772800F26616
849FB7FBAA5A1779194B0518B7E5AB46143F8A17581D79D4741A8AF04EF4D864
6607576224BE475FB935477E7021155B138C26D44C2F6FB7987FD000460257C3
DC4639C9040B73B1A57B769CE0D4FE19DD7F47AFEE2CCC4010A26BF445F5BB1B
9B8CEBB50802C68618DD216415F7B9612410624AF074FE25AA3E25321D9E0E6E
6E513A8DC65BF39456E4621C46B594FA7F95B653F1A5605DCC4470069743E203
DCA90314B09532B593322728D145450A93C40728B4AC04B10405784C0CBA6F2A
E79163FCF32FF723B0A3B4ACB90562915A115326C7A3C13B169E83BBFC08C940
75411DDE0E22AC9B1256B49A015F6DC07325484743A881502457E1610E7847B3
4DA1614758EA30EEAEAFA792CE37A37B648427C9DF08596FE65AEB4A559A8CCD
509CA37962DADE6C29E3A6F9FDB92914BBB39C46BB1412780951D9FF69991A9F
EFC0A3F81CEF41BDA69BD7A998DA71F60F3ABA72E7526FAB6C943DFF18523534
4620B9BEEAB6A4E238E5DA4BBB4E74959EFE69C5A2EE9D2ECB17FA9CB5A895C6
9A1CAB420CF71E2E09C2F990266F1C4CBB9ED30C9910281FD9A479E068BBA888
FC18B5C924054C810D23DD8D91A25455165BF752E8D41AAA4788DE46F0879B3D
3632C121FD188EC1DFA0D8E30221FECCE4CDE486CB84229270045A3D416E5DBA
6044BA1858ECC79CA14D39AD52286FF2B9211296ADF2D9F7DDDD414CD3C746DD
D5507FB223D4CBE01B52A60380B0A0C1AA592BA2591AE8C2B7C3DA26033AA6AF
A3049A68689B4D58CAF6911450C8BF1C94F2D0F6CF26BE778A5A44A0B7DCBB93
C56594D2893C640DACED80912A860C4D191D9DBC6F93F24E6FC217E39EE622BE
FB35BCF0662B939C24C3F77621820046BAE0FF10D1341598DE33254DC7FBE9A4
9B5AFD817FD0E367FAF77743A2A0006C18BE697DD8104BA957D48DEA285D9703
4830C2CD3C995BE4EF664FD94E781A6431197F3C979FEE9E7C98936777789DAA
C786B38E24C3E4B6E883837688525E13E2C385BC4327E62EA05272AED98ED2B4
8A8B436C0801023EB1246FCDBE004A85FD86E5AE1A2F773997F073CFE4471442
6788B347C99AC0D2D800DBC708FEC951DF2AE8B06284450375FA5BD2BF0C70C8
70A23F1BE3DF28B1CDBF0882C8FAD14C947AEC8353E57EA638C14201062C8B4D
D1F03F73FB04E99304FCAE63FA43AD824483ABA8FBA712772D9D43CDA9DE6975
CBC492911D28F021494B1163CEC6B46BF19AC7014C4F177655FA822CF6608D45
E6D0B2F39076BF8F6EBBF5665D7B2469AD51BBEA2675DAA8F4AACCB9BF83BD7B
E1C5D5ED8A19FDD2AAEE551547DDDAF92C1D44901C5D2F7C2C0EBD6FBD68E378
EC1F12C9AA1A16CD70EAD4FE5DF8EC50D7ABB4C8375F76A00AD02F0171EC8B5F
AD5B9EA67F67ECB06013CBAF8E97C5B7B696554696AEB73FB02FE6227EA97AB2
78D14D03771CE9AAA2846C6A9573C3D83639696677DDFE98AC16FC8A3F45FF81
154CF786B64B1C6D7B8999E321F4CB86E847202830C30A867CB87F13FD07DF8D
64D4CFE9DFB246486A35626BF42040E6587DF0C98EDE2EAE1CC8F76A79648292
1AF112002E91951DCD738D6B0FCA1DFD3D67CDDDE68EC66B767C800CF505B837
0FF028FCCF94103AC30E0C121F25968FCB20DDA443CCD9D8BB56EF54FFE23AEC
8E7A948FCD35C8101BB5256C18C2F31364000ECD1E53DCE315964DF646B5E8F3
E8DC206B3CA1B24856EC7D5559D679C748F35A2A8231322120D6CABBD275E5C2
B110AEA95D6C963D1C55288153FD89B713C71CDCB18BF336A237F4D8F4A3F44C
564DCFAB1F2711CED7E04DDA2DCF3024CC825983F821DB7815E2A84602F10C41
FED3E544DB13E2A0D881A31C8ED2E4E2339152D539806FEE950D656D21F4CCE8
F11789FD246BAF9BE37904AF218ED57A69ED4051C00795CC1A55DBD9A000ABEE
1C5DF28968DC1FDF3369563EF2FADA31EE8BFFBEE1BD7339E5BF7CB3C7AEF8EB
E805794D4B94B62EC4723CBE678E75B8F0F19E7CF1C905103CDB2E36A774A663
4F79387E3E3D981419F6DBA2E778588649F3403541AB2715A18C8F26C4A8137D
06D1B703EC9029E2FDDEF3D892D593D0BBF0759FF5AE027DEFF78EE6807BA37E
967FC9DC4E5C38B79D82E7EA3F1B4B2B2356C6FBA8AD94750800AD9834D48E13
5ADA15214DD7618E973E79FAB79299405EEB5ABCBE2F6D4278F8CF5E565AF3EA
D370B3820EBF61830577D7783BDAB20F6D9ECCC4C2943905152F9B8A106CB846
4D8167014FD940C05E752FCB584AF500BBBB2B70088B8CEA1FC3E19846180F9F
C5C2C50C7F1C74766FC97B9D0AB262844277457D964C4F5DDB9C1DF43417AB08
C803BD0612356393759913ED190C76CF606E0B156291B9E2D336C0DF4F4D320F
F68BADFD4912B0524150426359128A48FEBC2BF1EFA9C89ED660A48381FF8E4F
B22A933FCDC9213B22C1E35E7469901EE93413A61C9C1B590B28C2273A529B1E
65D690821424A53232E7C67A424C564342B286816DF7BF2648A3606383A5FD13
594320F506E034412B83AC71756CD1E22D3793731C08A777CA6F5162A4DAF100
A97C655580B74F60A04EF263441A47BC22CD95D29D9B8712095DBDA08316F183
7E45695F53B400024B16C7848E2D8031546C71D6F800926238689A0D6F7794F3
1A639877F5A2456A877719DEBC830787CAD01D99CA276DB9DA4959466B2EC581
3CBE9D43E1604E373D1E5E94813F4A5F1DA6B4F41F4D987A7AC39F0459A2F046
27B4094E1898D19357BF97563DF59454D97246B4B91790D1573ED23E06D666FC
B900EB53E15C834DE6604D33F1D2DCC3C2A726C9738BA933DB69430D65627751
53C165AB725A4DF9AB547FED06368ACD5E3CBA7E1D5373C2EB44362642D5F8EC
5933449184A8EF9A4AE8152CDB0464C33E0B04F4E771FA293941734E09869E35
C3790C60176BC48B569C8BFCD2603EACE0E5B77EE0450432B3E1B7CD66F92CA8
2D7757A1F39D545671327587752C2706C81ABDA0F268F85F65F94AEFC900E033
232D333ABD48CF1C695519C3654B6943ACC39EF5F7F9FF5ECABEC2F920E51191
CF238DCD61AF5E7675DAA59F7722FA764BAFF74810C08BCB6E5CB1C0D441913F
8909B9E4BC4EF1A140885CEADAAC78D3EBD89DF077D9926323FDDC8B2F8E6A6A
18057A257B359BF084E83FECED0675AB5BE3304BEA7BB2CF1FD54D82311B645A
B8840AC8ADC245E9754CDD1109D05D726DB96F0DB8B00B294DDC4C317ECE6E86
50DCFC277AF3965114EF7F537673B02BF2EE542C5DE11FE35784D5C7E667699A
C5717ACF89BB3588829FD35A3ACEE1C3AA0018D1501BD91BD9BAE5069F623D7F
61E8F8806C661C6D6F6E4843DB39681AFFB3572E364B5D1CA2C4DE45AF6013BD
1F2B6AA8BC3C50DADC7043C47E8160536E7F040A2D3307AFDEA0AB247E50B480
C8DDFA5141D876E358E75444DB5BA2D5712E0AEAE426DBEDF55DCC08D5C2A13B
F1460661D0184AEBDD3AB447294978F38113A5FAC26F355650C721AADEA93141
01653BAA4317E721CDA98F9F12DDF0880B72DFD778226925141AB4CC55B358D2
F9861E55CA57392DA6B21AC39D7D8B0BD55687187FE3E2492DB434C7D9EEC0FB
4DFC8CBDC5D068EFA27CD6C648D2D4DB380D71D23C55F95D3DA3A62B96E5F922
F0D94D9E0354F6E20656D34DED4FE846728F0133E417AE1F51BCC6A238F9F421
F9D9DA58C4101219702F0BF6865C8F64124245BE4EBAF03249C5D5B0C1660405
49796FF5D9A52EE351AE1F1CA7088F22546E81CF4F274085E08F6FE797317394
F88C51D5B46D0BCD15B09D2E20DFD7A74045881C1EB0870EB7C2FCCAF89CB685
E352B079B441E3937999CB2CBBBFFFAF0F860F0ED9B239783ADE42BBFE0A84E0
9D5EDE218B477891E407F4092CAC9D6EC5F7DFE49010EDE9FAF4CD4AA844C3CF
BEF9C789212675F199D3104052A5CD3F323332564625BF7745651B41A88C195A
E1B03E33467EF598ABE140FDAF1A85ECB9F7225AE68B054AC70BF4BE0C030F3C
F0DD8A3B45C3DB5EF9060E71C2A0E54FC80CC0A86C1C16A41A5B8564BCB0EE2C
59830444ACAEBB83E7DFF6E40CE20F3A4F5F53F1C6049568A1F8FC7CD50CF51A
4A84D355302A656C332961726040147E5047360AD3C08A6EAA15C6534FDE38A1
1FF83F087DFB67B140D68545AFACD538F8C48C7123162568B3E4A019586DFD85
94895FCACF705A59B890C8534DC077048239EC019D7AB98B338801F341AF43A9
486E6EB9ED79D808DCA8FB1A5657E4B37CDA9E5C7759A46739CC915E50CC79CB
B8935857EC44BC4ECB6C590D78C786C970333E031349C999F99703284C8211B5
0BF629D23A2E37FDB8F1977CDDA6B8C19EAF654E67569C89876A31D708FDA149
E0994286C9FC65588F9B07A497CE924D32912449E4774405914F1157AC0F8952
E884FB7BE3A0FDF6579FCC72E9939B1B4C5C07A25F1E6F0031514201CEE9D123
1F53A19B5F8398D3BE175C0A11F3D0C8B3F3204409B4734BC77DDDC1066D79A0
D6957A124B7B156B3591AB4AA9050DC64320CC04D51028C9DCDE449F3CBF033F
F09D489D7411D43991D471FBEBECCA9D3796B9D7C0010A2792565C281B122456
966815ED2F93C4E9D6A5AC9F5A70F70973FD60B4D59245A10CAABCDA74B36E8A
8D84512F38EE81DDD15D7B4E3BEA8D2F2E3F33DFAD71166ADBD659280CE1C421
BE7FC507266071712D4BF8222C422A9E9569D4A8F0345C6903A8B8ECE43EB0A4
38C886C82E61438CE378AB2B179DEFE677F6483973EAED7CF3DF232FBEF45700
34AD71A9ACC561BE9ED98A13483C70EA34E58BF6AABB6C65CE7B39B1B3AC61A5
1D1EE605B53E378DC50B1266E5A57D2FEDE7811B316CDE879F5293B75FB977A9
23A77EDD4D33BF148B5226BA5BABCBBA03ABCEA607C447277A248A4249448172
43425AFF29ABB8C76EC6AEA01F120BB78A13A4780EA9912ADA41726F90EFF322
30299DECEFBC28FA4E3078BA472F773281868ACF6D7C16A757EB126674AA1FBA
AE7A6A0A65C06D2D56B9F4F8DDDF27D2A0E76683344A57070DCAA59361D6D494
346B850BC339CAD5B2C849AA10570804D29809FDD3F0D74D0CED4C64403A3C8B
781BE5FF3FF15BCAB8D234927EE2FD76A89671693930B66A7B65364A27A8D790
58B8CE422DB6B8FE3ABFCE09BE88847EBC25450704C20C1739F3666CB8C8BA4D
16755A43BD350503820F17FA61716EC5CADE32CAE2E557C3A3C5942E7F87A262
9858653824C5145CB3DF7FBA661CE64B2C498AB9DB9FE978CEF65280A14A3236
E9BBF156F933E648E53B411064D5870AF4EA1EE97AFF5237DF3C0D5D64262371
70B327EF33DC1F5646ADEBF1F9050F7614D08C8DA6F05E16FDC3BB6CBA9521D0
634FAE0B3F49D215985F8827D6D0C7451BC642C11876AD7D30723741AE43A4B6
AB5590E1C89A469173D32495724FD4D7D02B6730A428BD5667318D682D1254CF
8BF9802F6B16C88F8A2796FB0ACF28284F98139D042976C0A1303FA237F78B53
6B48C7FF8DD51BE28E379E790E6D155AB29A3485CC13FD329C5CF6753C17E1DD
78BC20F52C732C770A2EEB6666C2245084DA8A3097C08798B51BD9B3A12B5A67
D4ED415DBAED203B0E5C96F7415BDA6A46B3096B0D55E0F0BE86785197C74BC7
805050E3BCD0C87D7BC602D0804521CA30EBF524EEDDC71DEDD2E7CE5094D5AE
095EE9054C72FCCA0A761B8FE79DB9097615FFF14F15CB74B22CC46D200D19D6
E688FA1AD6B11680CA4F9565AF81712EE1CF3B4E4C02A9338CEF77EE609DACF0
568D84A7BBE31F2D551B055E1BD376E4732C0D68B75500E0A773836BA7375845
5C93CC12AAE00A9EF28C980DD33A60A918F980991A69F300D48A7353521685AC
E8DFD6B5AED27D0213ADBB48E7A84A7F13DE6F4454D4CD9B3B17B2D5F74D55CE
BE356F1444CE836924091CFBCBFC9E378336A01522D8222523B0E7FA8159F0C1
68F9EE2CE7A06458116975048F0C00670DC5C9FDE242788D7DA3FC10A01DD63F
D8671B771872E6AA4C8B593AF07075CCCB8843EFE5FAD92D0FF1BD31F72257D7
19CA043F70FB556C4F62B8351EA22200777AE30CDAABA300AF4DD310B317D916
3C90BBBD2B24A0CCFFF4EABB02DFB35BB034FEADCA17AB060168C5F593BE30D4
78C35D7EFB7550281D80C7E358879C48F1A03688B7628F5CD3F8630FD2A8DB74
9B179ACF5D972D99603EA82440EAF19F3B402E25D4E55C35CD400158BA7795EF
475D87A39633217D925A82D03530385837B1E081E94AFC27DF4134B8B6F730D1
E2889D74A50713699F22EF73826BBD297E620791571FD80C89FA879768993F88
A849B2843098A42001EC18B21828664368F1C52AB07845D28D849DD7ABFA4B55
DE8730715AC112C3E237AA26E80662B0CFFD0844CB64D1F6355AF6A7A5C4637E
E6F5A7276940C53568F947417A96997CF911306FBCF90D6998F34057A4FBD4CE
5DB9DD9810EB94AD675A010EC05F774CDD2246A17DAF4ABB4381D87CB943D3B7
644E48276F2A4FDA79FD7F7D02FE55348D2102CF94F064326C4AC8866396953B
7D84909BDF8A76A53677A1674C14A832A2AC658DB0832B174F5F8112F1FAD6EF
ECC94EDE71D4DC841906BF9D0F4990A3FED14396D78C00E8C4937F87C3A0F7E2
43D62DA8DF6DB2AC4DD3BC8DF739E293CA5E3EF1C65E701C49151159553C46AE
4DB2E737AE8751F70275E40198A138EA489BCE5C48A85847243B86E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /Gamma put
dup 10 /Omega put
dup 22 /macron put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 57 /nine put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 103 /g put
dup 105 /i put
dup 114 /r put
dup 116 /t put
dup 126 /tilde put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD88DBFBAC1D
2C0969A0D6D489525BDABC9BA402D9EDF6A203D11AFA40888AA065999C4047E2
84F8BBA7E025B1B1A1786E5A6A9C012B0B777C9C8FFDAA37DCF98C967D9FB30D
B0289DE27A4870F478E8CEA79F1268D2D4E19F6E6DB95B6B9172CE17FD9EC7E9
9ADAD585908078979638CFF29BB3564ABF5DA97804D07995FF3689214097E89B
09D972E3A18513BCFF70E1160FA37D3177EEFF84D522A9D42582FF5D42F78F5B
46B13D8EB2661A274A7E32E4CB49BD9C5E7C6CF421EEDF4167455CAACD65FAC1
7A790A19610EC2D0FE75B8AB8B8EB25BD1C9AF2BEE86484B7F465EE364F91882
3647FCD76674D75DAAE271B280B00ABADE673435C083A81216DDE397FF1A35CE
0BBA54B08A0C55672879262B8048AF93A2D5A85752BE3249FE8E1B95098375D5
7BC93E5CF07E5C782DC4AB99297DC06A336194BB184D2AFFECA8C1522490B058
A87963440504D25AEB906DB38C2E42D4D05B8AF0F0267EDEC532EAB7A919F1DC
8F24BDFCECFB50292324698981ED4F93E634FE857E3F4E99517800691C5C6252
CC8F796F51C01A539A8A36E252219CA2D9FE34D067DB89DD8E8B29877F4954CC
FBCC7A391023845BD62E70299E72BEE79F371CB4E63858EECBC064F5C3188303
231A309DBFBE9B84A0ECD4A9651122CB5507C3C5D86E87BBA93A9A23C4F04430
F9E902122166BAAB186B6BD57E5C026C2B98DB98C01A8AF20E98C991001FA9D4
95CD43716B99FC3DAA9356F39EE312FD9E1965003BF7664B5F8FF82FE2F1AFB8
818DF3CAA7690FB439CED900448CDC4A81D1012F986493597F17335F068F0A5A
A3B6F5281FCF7720CA8604E24C555BBA87F12A868F23D21A33C4A4CA4454F934
1AC64E6C54B239D87409AEFC635BD561273AEFFEEA31B26A34C4A58D393D875B
880E788A0D9DEED06D47F690DC1736423213C8E93142C8A9CE65A414963CA1D5
06244DA740DE4D55C5F6BE8C01DDC1C6F03979629720D2ECF246E83D56216D7F
BFC05F279D490D0414AF27BFC84FD5AA372406F721A8132012392D0EA50AFE28
E8E4BF48DA70D907125E14168A68C2806AEF233FBF6340D0B59B760727F3411D
7F69C2732AA0C808F4C5163E6D1785DB50AF3F8BCFCF56ACD8D4C31D3554615B
5343D7264504C8DAE7AD1EB83FF7D51B4878B7FB88C35D2DE401BD9B9EF57568
7E857709EF586343551CEB929F7884FBC1CA65C5330549CD72EE673D940B86EC
97989FF56212177E730C92AA207A413EC38B2441F270A2CE82297733F2196872
60949A05FB17AEF88C8FCA28986FEBF61865AE4E0809FB2EA9E57B088B3A07E5
2EBCB2088284D4122BEF48C8E1801B799161DA5BB3D6212A83B53E38ADC09869
4FC9F31E538DDC7A7E257D9F934B8AD03D859EDF7C23F237DA4693117CAE5B3A
B9B419E14BF1906E4B0E82BAF02AE338994594BC31139ED4E4C4339CE014BB16
2F9E60C4A8852848A3DABC4496E9C6C7512F527F9EF44A63C6791838A5A73DE0
9C609C139331850A2D017B43B3933CCAE643D2F834F2F9F0DDF616AC7CBF6E38
8752BC34E87302766AF2AED1C28FFB96651C5797C67435C44200105A081CD11F
D25A4E0D7FAF7E14FC1F44158D23C4A21FBE73D9ADA4152486DB64657A8AB813
0E1CFE39620C34E50676E7453943E3A4D2F23CFDE921402E096FD6BB21AE1AED
2F3C7661387AF7D0F6E97E4AB8B9C113ED8E59B89650E58DA34ED7F36F76318A
B3FFA2891325DF8AECABBFD1FFD895499ACB1D6C650297BD60CEF6132B098FFA
99CF1831CF627387FB1C6D8C1724AD132A945299CB124E7B7D5D6982157ED3C6
BDC37AA5506CB7F95F3635E4F7611D7B99A441D49A0E8C87A18725DCB16F90F3
26A0407A0827D705F7FE9302454FC939FEE49B462B9BD144A5E64191F096D9AB
758D44BE9DFB37B1B052AAB88EC3643BEC54753F7C0AC292961F48A8A3B92D63
AB19DD3BDFB74901572D61B5D511AC87E3C4B009EC72DF8FB464F766098D7973
A25D2CA229DFDBBA578A1F576A1F84B0335FCDD48A1B406C201006C9922F637B
3DEDCD67D13E7E0FC0A2CB746E11C1D95C7E0805F54D77119C0DBD29119A337A
A7139BC52730F08278B036D0B1C3E0AA6BBC1E2CBD16DADB8DFBFD9C06D8C212
AFC41940A99D44FE2693CD45C2F1E3F088D655C120DDD257380D9CAA590F8CDB
B1E32B9F691612B28D4DC7CD44761F6BBE269E4FD479168B461A9CD31D0232B1
B76F49A859D5EDB739ADDFD69A8F038C466200DD01B9BF8EF53C3D61351CACD1
11D1A70A22F9A179621D472B80FC929D89295113A1CFC7E29E73E04999D52328
D27C0A61F59C44951180578938D3464625727676B68AD8B137471D51B7019EFD
3D4F2DD70E19FC3594D618AFCF2CC6E307A784FA0579DDA5E0CD91CE45351E2C
A21BBAE9875D645BB1245467FDFFFE9AC85DF273CCE79DB85767BF3077E73DCD
5235ED5143BD3A4A8ED6C228302D0F28175383E6932AB9DB37E958938F3CBBBE
BF228CCAE0EB47697882AF76F64C9BDCC46675E0A316009D80A3ECF19E0BE642
3378C10216877FBAF382F13927DACDCCEB0A64C87F38D21D9698D11BC2A95678
D322F5FDAF3A7890D519E72DCE5CB167BC013AE1D57D352052C05F441D1D7871
99C1D418A47503508E818141BD6AEBFAEE4A90DAC119F58814247177FD518EEB
FEC6D53DF6867F17876377F16590D77CC620CC5751AECE848D95761B525F24C2
C64D6BAE363C9742074A81D4A417F2B499C9F3432B2B93A7600605F005030883
E333523BA18969E5F309B853F910D4C2100584A0DA04F44631C5F5ABE6C60B84
53045D7C400F4AEC52F6CFC48D0ADAA8B7E762CDAD6D104E84C1FCD92CF7CC1D
9645DFD2C738486AD592206C198277D482B10E5D63ECC965EA9A6F94AFAD36B3
093CDE8ABF317067B06B0000059563F60439807CCBB51DAA2E4C3C4D5AFD049E
E093F22272022D1147EF0D093BD933CDBBBC4260D4EDD43FBE4FED773AC4E386
DAAEE84D5CCAFA13653E7DF4E33AFDD1D49AF57477746184A990A882DAC714C2
90C9EB5E3029E910A2A8A538E825A4EF9638263B0C0B8A79148E72B5F9D74BB5
D737339E4E8654AA2021E0836ACA6261ED72BC2858A8BC8BB5A1DFE7417E7C24
EDF213BD02437084D5D0A7CAA7FD2FC81DA1C34E8F6A594B4B2B3438B8EBE178
FB747FE028D202C178B1B1EADDA4C7252C2747CFC83425148E5F98DBCFD7CB15
CD4E443F5C81DD2E3F68D12E26CED26EB17B8C5256823955771B70C9C7C92542
267EFF2484896135FDABFC81E0F1FBDBC673ED7ED9BE5E54E76CDE025B2337A9
796698719B3448F8BA9920B870A8C2AF43BB5B2E978DEFED36D271429D00C948
F3B11B1D5B7D9ECD22B8BDB8FD7206DD0339D0F21DA78C602EFE6997464BA074
D5AE627B5A8885F08E0EFBF5B6DFC1D0EE37C786F8A94584AD0C2A6249FA490C
4B50B9860628B42257F422BB6F4127F2292DF1F08996CEE0B327B90080DBDF08
378CE4852B8453A0AD72092F4C618B55569E6A9C5256962615EE886DAE643B27
F7AFB81F3C81B023F4E788C30B03BBA0C5B0FCC60F043DEBC9C3B3466D000A58
6B6CBD348DA24E64B91845FF37134F811D84D4DDEA807D306C2EB25825361408
78BF7C8F1925492C465DEE3BCDDAF10B567E7CC889687FB91F2678009331FD98
9D70A6AB9CBD89FBD98CDA4FB20BE7291B3360C884783B4193AF63FBF2F4445A
82EC7E89C82AFA11A989FDFC36D9E679E9A7A848F6DCB3957A92888B4A8107EF
C4D5463D8EC15304CEC5E583E83B659DA83CA67FC9A7E4390691F343D47B60B4
2394795C256FAA8EBF80E91982F278388323356355AA4BE86934824A7D11D651
4A9C9E98CC1F082CC341E228118EC051681AFA601A5D9671E8FB0A77BD528E85
2DF9FB4D888E89DE4783A44C0ADC66806A87CBF3B91D9E6A567F117D1FBE7807
311F78AD04AD942BBBF030E37A1B4DA588E2007A104E1BDF4B9C979D735D7904
CBEE39816FBCCAC76A9E4E8FDDA033D9E58BB56B89E876712887965532A0EAF5
EBFB9DF7881C427F2179766B6C09B24DE6AF8DEF8030380BECF5ED6AAE29BA1B
CEB5A56808608161FF496E1FB6C016D9A312AC5058ABDC7E18CB0CB97D26F2B5
A54EE8F75E45A75EEFE97C8345264659B18061324B37E81FEF05480402D5774C
1D56A62A2F9B2DAFAD14D7C4A5615FD4533DE2A69EF0149DDF96D2B9223ABA85
82813D1917D4D2BC60F7598E02A9FDB05432803017AEE2EE92615632FD2752AC
F6FA2DA795B1F813401BC99C0F4B4CDFA44D5B444119523F1382D9A865F3B6BB
05AAA90D49E85C11CBACDFB3C55611582851F5E73FB3B8FA2F4F02AFA026619E
1ED4D995375F53AFF3CD0B1A662089A703588731DA376939F155D7BF526F765C
94E67B116D2012F90DC74E13E17CEE00388418000BAD0A33A0BA1D21996C2737
0F2B9516E17CEBE082E39EB5DC652C89AC66CAABD19FC5BFB85D2EDCAD2F12F9
D9ECA5BFF172D433F39B1B382C69ECB8EB11E84A97F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 6 /plusminus put
dup 15 /bullet put
dup 20 /lessequal put
dup 33 /arrowright put
dup 41 /arrowdblright put
dup 54 /negationslash put
dup 102 /braceleft put
dup 103 /braceright put
dup 112 /radical put
dup 114 /nabla put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034F27CF0B9E4BF1164D21A8A3D9366
48317F1579A4E4772661250F737F41ADCF2ABEE72716CBDEC756B66AD35FDFB6
E37BDDACA68370E604401BE303246CF0F7A46394A52B5E9D34B1E181AE500C2A
F3CF1A8DD52495B2BE7A1691A75E7199240341A3C9C27D8308719E04FD5DCA3A
22BD4072C8B52A0C67EECC30DA959DD3F758B52AE0CCF4ACDF9BF5E8BA78DD8D
EC8ECBF8B66575438ADCC9B3368DFB970DEAF658C06231105F8764DD6148CB11
1CF298102FBAE64C2B685F7E78C5C5845816F06B4D6E7FB5846F75125D56219B
314F654C716DFBFB63C66ADAF79C6F5BDBD195A414E3B378E75EFA49B00F94EE
E0DCD05B161D28722EFF1ED840049DF5D632A5CDF8558863390301BDDEFA4C20
C58DE5E1B58F1880CD92880EFABCB71A48B591620A5518E8ED9CF6AD4687EED0
6AB454A26540EE3A3024F8D2F80DA87E78BF3581AF223578AE7693DA8860B34E
99E383B87006B4F6669C0096CC707580B512073A2C776389D59C064770CD51B2
55E68C528ECF3C131C4E72D2FE29E764BB86B2C52D087A6D52ECFEDD1439DB39
3042759D59069D78F079C2C3424AD891054D4346CB2DCBAFBFA001FD968ECA81
ABC926D80937F6CB550931A925F4D6FABAFA5D7F6D9CB5978FE71F0E149CD8FE
450FE722BE6B3D85B19790E92E030610FBEAD9A91F07D4B6C604A12A44DA8594
F27FB9B8EB20026703EF1F53054AC2B11F5639664FBA1239134219F09280A3DE
387EF8387093B719F5A13298E42F76F3354B5BF29601F0BA6A21FC543ED7F7F6
866BBDD15CD8140367A9B15EE01DD4FA7D10D98F7140FE51298476C62844B835
FCED24E377C22BB541E2496110B884DF0BA04FEA589FFD18E9AB976D4AF590C5
95D06B77ECBE8FE6B9AB5B946715103B5F7C12062DDA48A869E60CDAE6ACB585
FEC213B6B9BE344A3B18674B263C138C738A36FEC817ACC4D550B6909BA59698
36D68911FC52DD802C16D0A36B6B58AEFCD787DE3E05F0955ECEA68DCE39752A
AFD22DF73530FBEA9F24DCF40872EFC0B9AF58DD38E34567A1C5D0B22DC566B8
6913E9EF5C1CBDCD519CDE4E985F0905C36C3C50EB28BB4C6333291F083133EE
05E243F4476F59D838B4D85BC9706A4F3347373B753EB40CC9E69F23A0F232BA
057F36C30DD8482D00489E73794C9D386FB0B6CC95CA4CFADD55AE712529F057
3E2FC021D52286142EEDFBA50EA2173BD55F0546DBEFE653B3FBA381DE1BD00E
FE825123A23E1E33BED9DAFBD2D94B6EE5BB31F508DB8D1036CF9D1EDEAC99B4
9291353C7A628EC890E1022C5837041C95DBC29536F5A910A723561BA153B225
620B675B79150885092AC6932A7332B2C573F33981E704FD9B1516A349D9B76B
C1AEEFF02344E7913E937975B11169FEACCC83FE87620ADA736FB1FB32E1F2F2
86D5EDADBA498D329B5060407F1996FF4A9696EE4EF345853CA1DEAF1E6A7F8F
40E0E3D0B3E6653B62AB136BB3282B9D8C8E72FC5A8910A1A9777EE600E98F65
5D204B442614B93BE228E70C7B6A567FC353065AC39BB4EDA924A378E63645E4
E82BF1EC61581A416F8491FECB91401E683307B415C2A019B3A13BB38DA14262
4F10FD67ED24605D4C668D24C3646A6DFAB0918CC71AEAE1140753F057F2C08A
F1C779D53E8A2B7DDEE8D88EBCEAA3B2327A5420AFCE402FA8B53AB371F8CF67
4608057728BC17694566628766F82607746B730C388539B1C3CCF32D128485C0
83A43737A7272F38A087909F361AB058A74A0006259C3D74F5581771F9286B4F
CE9D5A028C9C45322C70942A4560DADB2CABFA5B7B85881CEF6A9743E5BD7B18
15064BF9699D87D75B9E34109DBDAF86C3FF73C4F2FB3365C1B64B494F376CBA
5096EFAA6801447E0C6E73E4624538C304BD15E27241BE13909544C315994F40
ABDAF7C9518C024EF0309BFB10C1BEB44DFFAE448EFCD3D73F613775E4B712C7
18F3404ACA0FF23492DA5894CF97DBEBD2759CA06F4510C1D0A93B21FAC20D4E
39937E9A9F664213DBC2C7E5EE51E3E5522F7CDF94B3586647CCBEE37B246827
3EAD70A0AA40D39D6C20F524CE60AFD62F8175382E0157451E8FAE61B8287D9A
803ADCA100C6E7FB01F0416F13EABDE17398E51D85ED0C1F2CD01CB60945D893
C14F3CEDE06C0B8C4D3FD8BF2149F268C292596C83815EEC17A1AF626E2FBE09
86BD063E761972A703CF52894616D9AB8AEF272D22D3657EBE9DFFE1C3709845
3E65EE82722F7028F4A99B9FAA6A1BC3FFCF861E63B21C28AEF971A1876DA7B2
47DED47D6CE90000644D02A3535D9D0B119BF388437D8524A9C12175837803AD
FE8AF3D63BB186AAC7C565756681FABB152A3EC0FFFB9770280A55C656E483BA
C6E90975780EB6A693B7F65CFD267159EAABC407DF419A775F1BD0A4E3318F9B
4ECC71B06FCE3A94DB1EFFCF0F17185A204604BAD22B2CF2A145172C992CA822
0BEB77BD7A11C71B669C488FBA36E1814A0825137B17FEC2C97483BE1FBB15F6
B1640A17E7B9DA2C999BDA71586B5C82EC8DDAE50B64EB6417A7B00F4A6C5473
F74ADC6D3BF315346BBB1F3DE68C2989224E973C1AD34C6F6A0631F3A7D8D387
2973BB1C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 2074 600 600 (elpre_talk.dvi)
@start /Fa 138[130 71 1[83 3[130 190 4[130 130 1[119
130 119 1[119 13[142 154 16[154 8[119 3[119 7[59 44[{
TeXBase1Encoding ReEncodeFont}17 213.513 /Helvetica-Bold
rf /Fb 228[142 11[100 15[{}2 206.625 /CMMIB10 rf /Fc
255[99{}1 103.313 /CMSY6 rf /Fd 172[78 5[120 87 2[57
1[98 80 93 103 91 1[95 65[{}10 103.313 /CMMI6 rf /Fe
134[107 107 3[59 107 71 2[119 119 178 47 1[47 47 2[59
119 119 107 119 119 13[142 2[142 166 2[119 6[142 23[71
45[{TeXBase1Encoding ReEncodeFont}23 213.513 /Helvetica-Oblique
rf /Ff 255[124{}1 154.969 /CMSY9 rf /Fg 154[84 101[{}1
154.969 /CMBX9 rf /Fh 205[63 63 49[{}2 103.313 /CMR6
rf /Fi 165[115 264 298 7[218 24[138 138 138 138 138 138
8[166 166 4[121 121 12[109 109 2[123 123 14[95 95{}20
206.625 /CMEX10 rf /Fj 134[78 90 2[92 1[74 2[80 1[96
1[48 83 65 55 3[74 16[93 97 5[154 3[70 1[125 102 117
131 1[121 119 84 2[80 2[44 58[{}24 154.969 /CMMI9 rf
/Fk 145[88 133 3[44 3[71 16[115 14[108 7[124 7[80 1[80
80 80 38[115 10[{}12 154.969 /CMR9 rf /Fl 138[129 14[71
18[129 1[175 159 3[140 182 1[87 3[153 178 168 165 17[116
25[116 22[{}14 206.625 /CMBX12 rf /Fm 134[99 115 1[98
115 73 95 4[121 2[105 84 69 116 2[94 105 87 18[130 155
1[196 6[131 150 4[107 4[56 56 27[120 6[100 122 118 116
2[100 17[{}28 206.625 /CMMI12 rf /Fn 129[101 9[79 1[79
8[56 1[101 2[112 2[101 3[56 1[56 29[157 3[101 3[101 101
1[101 101 101 4[157 1[79 79 17[101 11[146 9[126{}22 206.625
/CMR12 rf /Fo 105[39 28[35 3[39 20 1[24 1[39 1[39 4[16
1[39 1[39 2[39 39 13[47 5[59 3[20 2[43 47 1[51 1[47 7[39
39 39 39 39 39 39 39 39 39 20 20 1[20 44[{TeXBase1Encoding ReEncodeFont}
32 70.5976 /Helvetica rf /Fp 141[172 1[172 8[103 103
47[0 12[207 7[207 12[161 4[103 8[161 3[161 57 161{}13
206.625 /CMSY10 rf /Fq 22[119 110[107 107 107 154 107
119 59 107 71 119 119 119 119 178 47 107 47 47 119 119
59 119 119 107 119 119 47 6[142 142 202 1[154 1[142 154
1[142 166 154 178 119 142 107 59 154 166 130 142 154
154 142 142 6[59 119 119 119 119 119 119 119 119 119
119 59 59 71 59 2[71 71 47 35[107 107 2[{TeXBase1Encoding ReEncodeFont}
70 213.513 /Helvetica rf /Fr 22[153 111[153 153 1[153
168 92 153 107 168 168 168 168 245 77 2[77 168 168 92
153 168 153 168 153 11[199 168 184 199 1[184 2[229 168
2[77 1[214 168 184 1[199 199 199 6[92 7[153 153 3[92
3[92 92 40[{TeXBase1Encoding ReEncodeFont}43 275.5 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -600 6000 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseOutlines  /DOCVIEW
pdfmark end
 -600 6000 a -600 6000
a
SDict begin [ /CropBox [10 40 594 800] /PAGES pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ {Catalog} << /ViewerPreferences<</FitWindow true/CenterWindow
true>>>> /PUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin H.S end
 -600
6000 a -600 6000 a
SDict begin 12 H.A end
 -600 6000 a -600 6000 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark
end
 -600 6000
a 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450 a
SDict begin [ /Rotate 90 /PAGES pdfmark end
 5001 3450 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Title () /Subject () /Creator (LaTeX with hyperref package)
/Author () /Producer (dvips + Distiller) /Keywords () /DOCINFO pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 1/View [ /XYZ null null null ] /Title () /OUT pdfmark
end
 5001 3450 a BlueViolet Black
7573 1294 a
 0 setgray
 7573 1294 a 4780 1882 a
 0. setgray
 4780 1882 a Black
Black 4977 1725 a
 0. setgray
 4977 1725 a BlueViolet Black BlueViolet
5190 1593 a
 0. setgray
 5190 1593 a BlueViolet 102 w Fr(Element-based)77
b(preconditioner)l(s)h(f)-6 b(or)5796 1893 y(pr)g(ob)m(lems)78
b(in)f(g)s(eomec)m(hanics)p BlueViolet 9338 1893 a
 0. setgray
 9338
1893 a Black 9338 1893 a
 0. setgray
 9338 1893 a Black Black 5517
2732 a
 0. setgray
 5517 2732 a 102 w Fq(Alison)60 b(Ramage)5364 2979
y(Dept)f(of)h(Mathematics)5196 3223 y(Univ)-5 b(ersity)59
b(of)g(Str)n(athclyde)5461 3467 y(Glasgo)m(w)-13 b(,)59
b(Scotland)p Black Black 7997 3566 a
 0. setgray
 7997 3566 a 8098
3566 a
 currentpoint currentpoint translate 0.8 0.8 scale neg exch neg exch
translate
 8098 3566 a @beginspecial 0 @llx 0 @lly 109 @urx
75 @ury 1090 @rwi @setspecial
%%BeginDocument: logo_global.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: LOGO_INTERNATIONAL_WHITETEXT.eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0
%AI9_PrintingDataBegin
%%For: David Buchanan
%%CreationDate: 30/6/05
%%BoundingBox: 0 0 109 75
%%HiResBoundingBox: 0 0 108.5582 74.8609
%%CropBox: 0 0 108.5582 74.8609
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources:
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts:
%%DocumentNeededFonts:
%%DocumentNeededFeatures:
%%DocumentSuppliedFeatures:
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors:
%%CMYKCustomColor:
%%RGBCustomColor:
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 88 8
%%BeginData: 11500 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD55FFA827F827F827F8272727F8272727F8272727F8272727F827
%2727F8272727F827F8A8FD5EFF2752FD05FFA8FD18FF7D27FD5EFFF8FFFF
%FF7C76FD17517DFFFFA827A8FD5CFF7D27FFA82650749E747A747A747A74
%7A747A747A747A747A747A747A747A4A27A8FF277DFD5CFF527DFF267AFD
%089E7A9E9E7A507A7A9E7AFD079E7AC67427FF7D27FD5CFFF8FF51747A7B
%5151757B749E7A9E7A7420502050749E7A9E74757B7C517C509E4A7CA827
%A8FD5AFF7D52FF516EA1FFFF7DFFA87674A49E9E50265026267A9E9E7A75
%A1FFA8A8FFFF6F9E27FF277DFD5AFF277DA826989AFFA87DFFFF70747A9E
%4A262050264AF87A9E9E68CAFFFF7DFFCB939850A87D27FD5AFFF8FF5250
%6EC3FFFF7DFFFF9A6E7A4A262626504A262626747493A1FFA8A8FFFF6F9E
%4A7CFF27A8FD58FF5227FF51506E9AFFA87DFFFF766E507A50262050264A
%267A74746ECAFFFF7DFFCB93507426FF277DFD58FF277DA826C66EA1FFFF
%7DFFFF9A74A49E9E26264A4A264A9EA47A93A1FFA8A8FFFF6F9E9E51A87D
%27FD57FFA8F8FF51507A759AA852527DA870747A9E747420502050509E7A
%9E6FA17D7D527D7D93749E4A7CA827A8FD56FF7D52FF517AA47476519F7A
%9F517674A49EA49E9E507A9EA49EA49E99517B7A9E7A7C6F9E9E9E4BFF27
%7DFD56FF277DA8F8514A514A744A744A744A754A744A7574745075505050
%7550505075507450514A514A27A87D27FD56FFF8FF527DA8A87D4C69B0FD
%058DB0B06F44B0442706272707062F06290629062852A8A8FF527DFF27A8
%FD54FF5252FF4BA8FFFFFFA87D69B08CB0B0B068938C5068744B274A0727
%28FD040706287DFD05FF27FF277DFD54FF527DCA27FD06FFA84BFD04B0B5
%4A757475747550752751062F07290653A8FD06FF27A87D27FD53FFA8F8FF
%52694BA8FD06FF526FFCB08D935074749E747A505006070707287DFD06FF
%A82E0053A827A8FD52FF5252FF4BB0B06F7DFD06FF7D768DB0B075507450
%745050272F072928FD07FF532E072927FF277DFD52FF277DA844B0B0B068
%76A8FD05FFA87669B06E504A504A502627062853FD06FFA8280606070705
%A87D27FD52FFF8FF528DB0B08D948D6F7DFD06FFA86F6F2674507A504A27
%53A8FD06FF7E2829282F072F067DFF27A8FD50FF5252FF4B8CB08D7D7D7D
%698D52FD07FF4B264A4A2627F87DFD06FFA852012F7DA82807070727FF27
%7DFD50FF277DFF45B08D93A8A8A89AB08D4BA8FD06FF7D70682728A8FD06
%FF7D2E060753FFA87D06290728A87D27FD4FFFA8F8FF526976A86993A876
%8C76768D457DFFFFCBFFFFFFA85252FD07FF5228067D530652A806295253
%0053A827A8FD4EFF5252FF6F6FA8A8A89AFF9A6FA8FF76B08D76A8FD0CFF
%A82829067DFFFF53A8A82F2EFFA82827FF277DFD4EFF277DA844B57D7D76
%FFA8FFA8A8A87C8CB08C6F7DFD0AFF7D0607070753A853A8A8FFA8FFA8A8
%2805A87D27FD4DFFA8F8FF7C69B09A93B076A8A8A169A193FD04B06F7DFD
%07FFA8520629072F072F522928A8A8A82E59532F05A8A827FD4DFF5227FF
%7D68B08C936FA8A8A8769368B0B0B08C6F76FD09FF532806070607070706
%53A8A8A828060707067DFF277DFD4CFF277DFFA84BB0B57DFFA8936FFFA8
%A18DB08D767DFD0BFFA853062F07292EA8A87E067EFFA8282905A8FF7D27
%FD4CFFF8A8FFFF278DFCA1A8A8939AA8A876B06976A8FD06FF7D7DFD06FF
%7D2707072F7DA87D067DFF7D2F0127FFFFA8F8FD4CFF7DF8A8FFFF20B093
%9A769393A176936FA8FD06FFA876442753FD06FFA82E2907535359067D53
%5306277DFF7D2752FD4DFFA8F852FFA8208D8CB0FCB08C8D4BA8FD06FF7D
%6F8C69000728A8FD06FF532806070607060701277DFF27F87DFD50FF2727
%A8FF276FB0B0B06F7DFD07FF7693B09AA1530629287DFD06FFA853062F07
%29002EFFFFF852FD53FF52F87DFF524B6876A8FD06FF7D4BB0FC937DA8A8
%5206290652A8FD06FF7D28060053FF7DF87DFD07FFA8FFFFFFA8FD09FFA8
%527DFD19FFA8527DFD17FF522752FD07FFA82727FFA8277DFD05FFA87669
%B06F7D9394A87D0753282F07287DFD06FF52F8FFFF27F8A8FD06FFA8F827
%A8FF7DF827FD08FF7DF8F8FD19FF7DF8F8FFA8527DFD12FF27F8F827A8FD
%08FF52F8A8FF5227FFFFFF7D6F8CB06FA8A89A6FFF2E067DFF5207070628
%A8FFFFA8272EFF7DF852FD08FFA8F8F8FFFFA8F827FD08FFA8527DFD19FF
%A8527DFF52F87DFD12FF27F8FD0CFFA8F852FFA127A87693B0B0B0937DA8
%7DFFFFFFA8FFA87D072F072928847D277DFF5227A8FD09FFA8F8F8A8FF7D
%F8F8FF7D527D5227A8FFFF527D7D277DFFA85252FF7D27277DFFFF7D527D
%277DFF5227277DA8FF527DA827F82752A8277DFFFF7D527DFFFFFF522727
%A8FF7DF8F8277DFD0CFF2727A8FF2045FCB08CB08D766F937DA8A87E2EA8
%2EFD0407290027A9FFF827A8FD0AFFA8F8F8FFFFA8F827FF52FD05F8FFA8
%F8277DF852FFA8F8527DF8F827F852FF52F8F8F8A827F82727F8FFA8F827
%FFF8F8F87D7DF8F8FFFF27F8A8FFFFFD05F8FF7DF8F8277DFD0DFF7D277D
%FF764B8DFD05B08DA1A8FF52280607072F0707007DFF7DF87DFD0CFFA8F8
%F8A8FF7DF8F8FF52F827FFF8F8A8A8F827A8F8F8FF27F87D52F87DFF27F8
%FF52F827FFA8F8F87DFFFFFFA8F827FF7DF87DFFFFF8F8A8A8F827FFFF52
%F827FF52F827FFF8F8FD10FFA82727FFA82768B08CB076A8A87027A8A87D
%0607070600FFA827F8A8FD0DFFA8F8F8FFFFA8F827FF52F8A8FF27F8FFA8
%F827FF52F87D27F8FFF8F8F827F8F8A87DF8A8FFFF27F8F82752FFA8F827
%FF7DF87DFFFF7DF8A87DF852FFFF52F87DFFA8F852FF27F8FD12FF52F8A8
%FF5244B0B0A1A8FF454CA8FF7D29062852FF7D2752FD0FFFA8F8F8FFFFA8
%F8F8FF52F87DFFF8F8A8A8F827FFA8F827F852FFF8F8FD0452FF52F87DFF
%FFFF7D52F8F852A8F827FF7DF87DFFFFA8F82727F8A8FFFF27F852FF7DF8
%27FFF8F8A8FD12FFA8F852FF7D208D6F7D7D4B277D522F01057DFF27F87D
%FD10FFA8F8F87DA852F827FF52F87DFF27F8FFA8F827FFFF27F8F8A8FF27
%F87DFFFFA8FF52F87DFFFF7DFFFF7DF852A8F827FF52F87DFFFFFF27F8F8
%52FFFFFF7DF852FF7DF852FF27F8FD15FF2727A8FF27698DB06828070700
%2EFFA8F852FD13FF52FD05F87DFF27F87DFFF8F8A8A8F827FFFF52F8F8FF
%FFA8FD05F8FF27F852FF7DFD05F8A8A8F827FF7DF8F8F8FFFF7DF8F87DFF
%FFFFA827F8F8F827A8FFF8F8A8FD15FF52F852FF764B44440006007DFF7D
%F87DFD15FF7D52527DA8FFFFA852A8FF7D52FFA87D7DFFFFFF52A8FD04FF
%525252A8FFA852A8FFFFA8522752A8FFA87D7DFFFF7D527DFFFFA8F8F8FD
%06FF7D277DA8FFFF7D7DFD17FFA82727FFFFA8767D7DFFFF2727FD4AFFA8
%7DF852FD27FF52F87DFD04FF7DF852FD4BFF52F827A8FD28FFA8F852FFFF
%2727A8FD4CFFA87DA8FD2BFF2727F852A8FD1CFFA87D527D7DFD5BFF7DA8
%FD1CFF7DFD07F82752FD2AFFA82752277DFD15FFA8275227A8FD17FFA827
%5227A8FD10FF52FD0BF8FD29FF7DF8F8F852FD15FF7DF8F8F852FD17FF7D
%F8F8F852FD0FFF7DFD05F827FD05F852FFFF7D2727277DFD1AFF52272727
%FD04FFA8F8F8F852FD15FF7DF8F8F87DFD17FF7DF8F8F87DFD0FFFFD04F8
%27FFFFFFA87DF827FFFFFF7DF8F8F8A8FD1AFF27F8F827FD04FFA8F8F8F8
%52FD15FF7DF8F8F852FD17FF7DF8F8F852FD0EFFA8FD04F8A8FD06FFA8FF
%FFFF52F8F8F87DFFA8FFFFFFA8A8FFFFA8A8A8FD04FFA87DA8A8FD05FFA8
%27F8F8F8FFA8FFFFA8F8F8F852FFFF7D7D7DFD09FF7D7D7DA8FFFFFF7DF8
%F8F87DFD04FFA8FD07FFA8FFA8FD05FFA8A8FFA8F8F8F87DFD06FFA8A87D
%A8FD04FFA8FD04F87DFD09FF27FD04F827F8F87DFF2727F8A87D27F8F8A8
%FF7D27FD05F852FFFFA827FD05F82727FFA8F8F8F8277DFD05F87DFD05FF
%7DFD05F8277DFF7DF8F8F852FF7D27F8F852FD05FF52F8F827A8FFFF7D27
%F8F82727F8F8F852FD04FFA827FD04F8277DFFFFA8FD05F852A8A8FD06FF
%FD08F8FFA8FD07F8277DFD09F852FFA8FD07F827FFA8FD0BF8A8FFFFFF52
%FD07F827FF7DF8F8F87DFFA8F8F8F827FD04FFA8FD04F8FFFF52FD09F87D
%FFFFFF7DFD08F87DFFFF27FD06F827277DFD04FF7D27F8F8F852527DFFFF
%FD07F87DA8FD04F82727FD04F8FFA852F8F8F8275252A8FF7DFD06F827FD
%04F852FFFFA8FD04F82752F8F8A8FF7DF8F8F852FFFF27F8F8F8FD04FFA8
%F8F8F87DFF7DFD05F827FD04F852FFFFA8F8F8F827527DFD04F8A8FFA8FD
%09F8277DFFFFFF52F8F8F87DFD04FF27F8F8F852A8A8A8FF27F852FFFFFF
%27F8F8F87DFFFF27F8F827FD04FFA8FD04F852FFFF7DF8F8F852FFFF27F8
%F8F852FFFFA87DFFFF7DF8F8F87DFFFF52F8F8F87DFFFFFF27F8F8F8A8FF
%FD04F87DFFA852F8F8F87DFFFF27F8F8F87DFFFF7DF8F8F87DFFFFA8FD0A
%F87DFFFF7DF8F8F8A8FD04FF27F8F8F8FD0BFF7DF8F8F8A8FFFF27F8F827
%FD04FFA8F8F8F852FFFFFFA8F8F8F852FFA8FD04F8FD07FF7DF8F8F852FF
%FFA8F8F8F852FFFFFFF8F8F827FF7DF8F8F827FFFFFFA8F8F8F852FFFFFD
%04F8FD04FF27F8F827FD04FF7D52FD07F827A8FF52F8F8F87DFD04FF27F8
%F8F8FD07FF7D522752FD04F87DFFA827F8F8F8FD04FFA8F8F8F852FFFFFF
%A8F8F8F852FF7DF8F8F827FD07FF7DF8F8F87DFFFFFF27F8F8F8FFFF7DF8
%F8F87DFF52F8F8F852FFFFFFA8F8F8F87DFFA8F8F8F827FD0452F8F8F827
%FD07FFA852FD05F8A8FF7DF8F8F8A8FD04FF27F8F827FD05FF7DFD09F8A8
%FFFF27F8F827FD04FFA8F8F8F852FFFFFFA8F8F8F852FF52F8F8F827FD07
%FF7DF8F8F852FFFFFF52F8F8F87DFF52F8F827A8FF27F8F8F852FFFFFF7D
%F8F8F852FF7DFD0CF8FD09FF7DFD04F852FF52F8F8F87DFD04FF27F8F8F8
%FD04FF7DFD05F827FD04F87DFFFF27F8F8F8FD04FFA8F8F8F852FFFFFFA8
%F8F8F852FF7DF8F8F827FD07FF7DF8F8F87DFFFFFFA8F8F8F852FF27F8F8
%27FFFF27F8F8F87DFFFFFFA8F8F8F87DFFA8FD0CF8FD0AFFFD04F87DFF7D
%F8F8F8A8FD04FF27F8F827FD04FF27F8F8F852FFFF7DF8F8F8A8FFFF27F8
%F827FD04FF7DF8F8F852FFFFFFA8F8F8F852FF7DF8F8F827FD07FF7DF8F8
%F852FD04FF27F8F827A8F8F8F87DFFFF52F8F8F852FFFFFFA8F8F8F852FF
%A8FD04F8FD08A8FFA8A8FD06FFA8FD04F87DFF52F8F8F87DFFFFFFA827F8
%F8F8FFFFFFA8FD04F8FFFFFF52F8F8F87DFFFF27F8F8F8FD04FFA8F8F8F8
%52FFFFFFA8F8F8F852FFA8F8F8F827FD07FF7DF8F8F87DFD04FF52F8F827
%27F8F8F8A8FFFF7DF8F8F852FFFFFFA8F8F8F87DFFFFFD04F8A8FD08FFF8
%2752A8FFFFFFA8FD04F827FFFF7DF8F8F8A8FD04FF27F8F827FD04FFFD04
%F8A8FFFF52F8F8F8A8FFFF27F8F827FD04FF7DF8F8F852FFFFFFA827F8F8
%52FFFF27F8F8F87DFFFFA852A8FF7DF8F8F852FD04FFA8FD06F852FFFFFF
%A8FD04F87DFFFF52F8F8F852FFFF52F8F8F87DFD04FF7D52FF27FD0CF8A8
%FFFF52FD04F87D52A8FF27F8F8F8FD04FF27F8F8F8277D52FD04F827FFFF
%27F8F8F8527D7DFFA8F8F8F852FFFFFFA8F8F8F852FFFF52FD04F82727F8
%F827A8A8F8F8F8277DFD04FF27FD05F8A8FD04FF27FD0AF87DFFFFA8FD04
%F8275252F8F8F87D27FD0BF87DFFFFFFA8FD06F87DFFFD04F8A8FFFFFF7D
%FD0BF87DFF7DFD06F8FFA8F8F8F852FFFFFFA8F8F8F852FFFFFF27FD08F8
%A8FF27FD04F8A8FFFFFF52FD04F827FD06FFFD0AF827FFFFFF7DFD09F852
%A87D2727FD05F82752A8FD05FFA8FD05F87DFF52F82727FD05FF52FD05F8
%277DF8F852FFFFFF52FD04F827A8A8F827F87DFFFFFFA82727F87DFD04FF
%5227FD04F827A8FFFF7D27F8F8F87DFFFFFFA827F8F8F852FD07FF27FD04
%F8525227F852FD04FFA852FD05F8277DFD06FF7DA87DFD0BFFA8A8A8FD0D
%FFA8A87D7DA8FFFFFF7DFD06FFA8A8FD17FFA8A8A8FD06FFA8A8FD06FFA8
%F8F8F8A8FD08FFA8A8A8FD0DFFA8A8A8FD60FFF8F8F827FD7AFFA827F8F8
%F87DFD78FFA827FD04F827FD7AFF27F8F8F852FD26FFA8A8A8FFFFFFA852
%7DFD4CFFA8F8527DFD26FF52FD04F852FF7DF852FD75FF27F8F87D52F827
%FF7DF852FD74FFA8F8F8A8FD05FF7DF852FFFFA8522752A8FFFFA8272752
%A8FFFF5252277D7D27FFFF522752FFFF7D52FFFF7D7DFFA87D7DFD4DFF7D
%F827FD06FF7DF852FF7DFD04F827FF7DF8F827F827FF27FD06F87DFD05F8
%A8F8F8A8A8F8F8A87DF852FD4DFF52F827FF52272727A8A8F852FFFF52FF
%FF27F8FF52F827FFFFFFA8F8F8FFA8F8F8FF52F827FF52F8527DF8A852F8
%F8A852F87DFD4DFF52F827FF7DF8F8F8A87DF827FFFF7D2727F8F8A87DF8
%F8F852A8A8F8F87D7DF8F8FF27F87DFF7DF8277DF85227F8F82727F8FD4E
%FF7DF8F8FFFFFFF8F8A8A8F852FF7DF8275227F8FFFFA82727F827FF7DF8
%F8F827A8FF27F87DFF7DF827FFF827F87D2727F852FD4FFFF8F852FFFFF8
%F8A87DF852FF27F87DFFF8F8A8FFA8FFA8F8F8A827F8277D7DFFFF52F852
%FF52F852FF27F8F8A852F8F852FD4FFFA8F8F8F827F8F8A8A8F8F87D7DF8
%2727F8F87D27F82727F827FF52FD04F827FFA8F8F827F8F8A8FF52F8F8FF
%7DF8F8A8FD50FFA8272727527DFFFF52F87DA852F82752277DA82727F852
%A8FF527DFFFF27F852FFA852F8527DFFFFA8277DFFFF5252A8FD68FF7DF8
%27FFA827F87DFD79FF27FD04F827A8FD7AFFA87D7DA8FDDEFFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2
	ps_level 2 ge
def
/level3
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height {
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
   <<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space
		version cvr 2012 lt
		level2 and
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
		userdict/Adobe_AGM_OnHost_Seps known
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[
									/Separation Name
									CSA map_csa
									dup /MappedCSA xdf
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq
						{
							dup length array copy
							dup dup 1 get [
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq
		currentdict/Components known and
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc {
					1 exch sub setseparationgray
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{
	dup /AliasedColorants known {false}{true}ifelse
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false
		Intent
		AGMCORE_CRD_cache {
			exch pop
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  }
  {
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict
	begin
		  /.notdef 0 def
		  currentdict
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		
		 /GlyphDirectory
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and
		Name () ne and
		Name (All) ne and
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys
								}{
								currentoverprint not
									{
 									gsave
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint
					MappedCSA 0 get /DeviceCMYK eq and
					Name inRip_spot_has_ink not and
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx
					} if
					/put cvx
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys
							}{
							currentoverprint not
								{
	 							gsave
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor
			/AGMIMG_k xdf
			/AGMIMG_y xdf
			/AGMIMG_m xdf
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						]
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for
			put	setcolorspace
		} if
		currentdict
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ]
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4
			/Components [ AGMIMG_colorAry aload pop pop ]
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get
			255 exch sub
			2 index
			3 1 roll
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf
					Adobe_AGM_Image/AGMIMG_y xddf
					Adobe_AGM_Image/AGMIMG_m xddf
					Adobe_AGM_Image/AGMIMG_c xddf
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf
				Adobe_AGM_Image/AGMIMG_y xddf
				Adobe_AGM_Image/AGMIMG_m xddf
				Adobe_AGM_Image/AGMIMG_c xddf
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: LOGO_INTERNATIONAL_WHITETEXT.eps 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2005-06-30T09:24:09Z</xap:CreateDate>
  <xap:ModifyDate>2005-06-30T09:24:53Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>180</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8LuPLXl780Pza81y+aYfr3lLyfbw6ZZwSTSwwC8as1&#xA;1PyieP4o6NG+/SlemyrEdQ0f/nGkzPH5e8h3vmGNCR9etrieCzYjY+nNdXcJkFf2o1ZfA5gajtTT&#xA;4TU5gHu5/c2wwTluAgxoH5Pggv8AlJc8e/DVuTfQGukH45ijt/SfzvsP6mz8pk7lT9Bfkl/5aXUv&#xA;+4jF/wB5DJfy9o/5/wDsZfqR+Uyd33O/QX5Jf+Wl1L/uIxf95DH+XtH/AD/9jL9S/lMnd9zv0F+S&#xA;X/lpdS/7iMX/AHkMf5e0f8//AGMv1L+Uyd33O/QX5Jf+Wl1L/uIxf95DH+XtH/P/ANjL9S/lMnd9&#xA;yvZaP/zjYtykev8AkC+0C2kIUajc3Es9qhJoPWktbycxCv7TLx8SMv0/amnzS4YTBPxH30xngnEW&#xA;QzC28s+Xvyu/NvytJ5Yh+oeU/N9tPpl3bxyyzQfXVpNbTFpXk+KSqxpv406muwaXueKuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKvNfmC18ueWdU1673t9MtZbp16FvSQsE&#xA;HuxFBir5tuheaT+VflzQLx2N95xkvPNXm0xn4prb4ZfTatCBO0kKsO9GHSua7tTPLHiqJqcyIj3l&#xA;ydJh8TIIstPkLW/8FWnmKK9tLb60lpJBYejJMoiuzGiBpRJBQr6oJAQjaneo1GL2YxkXOciT3UP1&#xA;uTm1coTMaHpNfJR88+WNQ8nNpjXNzFqNvqU4tRLFG1u6SFS28TNMCu3XnX2zD7Q9no4sZnCRoDkf&#xA;1j9TfpMssvFsPSL+0D9LGPMWrxaZprymZIbiWsVpz35TFSVAHfZSc0Gk05yzqrA3Pubck+EPNoPN&#xA;fmFvqF2L2QTXMt2XUktFXgoX92TxonVR4/TnRy0OEcUeEUBH38+/zcIZZbG+96douq22q6ZDewSL&#xA;IrikhT7IkXZ13/lYEZzOpwSxTMSK/V0c6ExIWynyF5OvvOehXOrQ6hHpqCSW3to2gM7c0UFXc+pE&#xA;OPxbqP8Ags6vSezeIxuciT5bNOvnPBPg25RP+mAl+lQ8w+T77SPy5j82z3sN7G1rbz3lgYDGCLtk&#xA;Xij+pJsolpRlNfHtk8/s3iAuEpRI+P6mGiyzz5Rj29THGjvr38rvM3lmCUnUfIk1r5k8qyuTyitU&#xA;ZpOAPVhbtHOq+AKDtm17I1h1GASP1DY+8fscDUY+CddH0f5W1+18w+W9L121/wB59TtYbuNa14iV&#xA;A/E+6k0ObNoTTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXk/5/TS6tbeW&#xA;fIFszCbzdqkUd3w+0thZMs9y4/1T6Z+VcVeafmDONd85+Z9Ttbh7ex0eL9BWMUQi4PFYoWnU80ei&#xA;/WZJE+Aj7Ocv2xqx+Zx4qBog9diT5H73bdmY/UJf0g9Zu9X0q0/KfQLa6vIYLiSx0mRIZJFVykbQ&#xA;Mz8Sa8QFO/TOmh9IcHWf30/60vvST8+r6y1PRvLM2n3ayxPqvBbm3ZH4sImBpUOvJT2YfMZg9qGt&#xA;PI89j9xc7sn/ACn/AAv/AH8HjXnLyuTapqAuLq9u0kij4yMpU8pkCkRxqiArVgOK/tGucb2frfVw&#xA;VGMaP3HqbO/6GWbFte5LBLJWa10dVFWaW6AA7khM3uQ1LJ7o/pcSPIfFn3knyv6GiwXsd5d2d1eI&#xA;ryKjIUC0+ECOVJE3+1Wldzvmg7S1vFlMTGMoxPn94IPk5eDFUbsi3tX5E61pel/l6WvrlYTJfXHp&#xA;oatI4RIy5RFBZuI3ag2G52zvdN9Ce3v8YH/C8f8A0zipeedX029/IC5t7adXubbTtNWe3NUlT97A&#xA;tWRgrcSQaNSh7ZPN9Ja+w/8AHMfv/QWD+UJJNC/MTQ7y7u5b2w1j1NA1FLgQhfTvRyg2ijiB/wBI&#xA;jRN/5ts5P2c1g45Y+ERsXtfT3k/gNetxmgbt6J+QE0+l6f5i8hXTs1x5P1SWC2aSnJrC7Zp7WQ0/&#xA;mPqU9gM7B1z1bFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXhOr+ZbdvzR8&#xA;6+ergLLpn5baOdP02OQEJJqVypkk4P8AzEn6u3zGKpTpX5K/mtD5bSzmTSGlmhdrrle3KztNPV5i&#xA;T9UdA7O7eIr45z+fsLxM/jcfqu+Xdy6udh1pxgADkwS+1vXtFuZNF1jRGhvIAhms7y8dtkQRRuF9&#xA;AxOBGnBHSo4igNBkdVo9TI75jEf0Y1/vrei7M7E/OxM8csZl/ECTxD3jh+7ZAXfme6urmG4lsTzg&#xA;eORQb+RlJiFEBDwNsq1AA6AmmR/L5zjOOWXiiRW8N/nxffbtcfshqYEmMsYsUd5ctj/N8kavn/Un&#xA;KCLSI5S9eIjumY7KW6CDfp2zUz7ChEWclD+r/wAecPV9iZdPjGSUocBNWDI/H6eXuShvMtrazDUB&#xA;5at/QFEjmW4rAkgIk+BfQCq5HFiwHYZsdN2JLPI4vHqQHEbHTlz4uX7XRdrYxopgERyXX0GxvuOY&#xA;HPY/EI+T8zryKRo5dHWORNmRrkgg0rQj0dj4g5bpfYmWfH4kM0eC9jwnf3b8nWZe2BjlwmJtLrHz&#xA;vDZwPAmkepHIKSrJeMyuASy8k9EIeJY022ze5vZTXTFePGI7oxI/Tf2tGTt3HOXFKJlKgOnICh9i&#xA;aaRqOsecbpdB0Xy21xNIDyjt7sxxRK9OUkhMPpRj4B8TDegAqaZin2f1WlG+oEv6JBP6f0ht03as&#xA;TMThAxlHrs9H8w/k5+bN3o1zHEujC4RRPbGG8uvVWeBhLCU52iryEiLSpA9xmt0ns/4GWOQT3j5f&#xA;tbsms4okEJno3mO2i/NXyf51gCQ6Z+ZmiraXyqSQmpWqLLHzbpyUfuAPGv0dG4T3TFXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlnmfXrTy95d1PXbw/6NplrLdSjoSIkL8R7tSgx&#xA;V8w67dX+g/k15Z0+WQDzB561N/M+ryUWZWjR1u1YrIGWjSfVjxYEfa65Xlnwi3b9h9m/ndTHEb4d&#xA;ySOgH7aD1j8tPz20zXmh0jzJ6ema2xCQ3FeNpdMdgELE+lIT/utjv+ySTQDHlEve3ds+z+fQyuXq&#xA;xnlIfp7j+ASznzl5F8ueb9O+pazb8ylTa3cZCXEDMPtRSUNOgqDVT+0DlhiCKLqNPqcmGYnjJjId&#xA;Q+aPzB/KrzJ5Lke4nH1/Qi1ItWhWgQHoLlN/SNduX2DtuCeOYWTTkbh9N7D9sMeaseoqGT+d/Cf+&#xA;JP2e7kxDTzawXUJp6bi4hniaNCzMUmVpY+CAl+UfJh4EV7tXTa+EuEkciCD3ctj5b/jk43tPovy5&#xA;8TH6YZTUgOXEDxfbV/A95T9U0r6lDEYJfSTUG1GvpniIxOwQ068QpVeNK9qZpOPKJkgizj4Of9Hd&#xA;46REqvff7uX2MK117SW7k4pWVpnurp5UKOJZmaRE4sAVVI3X5nc9s9G9ltLLJjGTIbhj9EBdxFDe&#xA;XdZPV53tTNwnhjzlvLv8gzz8sPyN8xeczFqN4W0ry41GF6y/vrha7i2jbsR/uxvh3qA+4zeaztUR&#xA;9OPc9/6nEwaInefyfU3lPyd5d8p6UumaFZpa24o0rj4pZXpT1JZD8Tt7np0FBtmhlIyNncuzAAFB&#xA;5v8Aml/zkLpHl0zaR5a9PVddQmOa4rytLVhseTL/AHsgO3BTQftMCOJy9LoZ5jttHvaM+pjj97yn&#xA;y1qOo67+SeuQ2z8/MPkDWIvMumLGqxKIpJGuTsgVQoc3DFVFBQdNsr1mDwshj0ZYMvHG31ToGs2e&#xA;uaHp+s2RraalbRXcBPXhMgda+9G3zGbkfirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vdiryn/nIGe41LSdB8h2bsl35x1OG1mZACyWVs6z3Mu/ZKJX2JxV45+buqjWvzTu9P0+ItaaHFDo&#xA;WlWsILcniT1rgRxrU1DNw27R5iaiyQA+gex/g6bFPU5pCAJEIk/M139Pki/Kf5deXvMHlmbULnWG&#xA;juPjWZY1j9CyANFe+9Uj908fOTkCq/BxDcyFxxYYkX1Xt72k1UNQccYx8LoCOIZIkfbE+XzTX8uP&#xA;z01by08WkeZXbVNHHwRXCMZbq3VaKShYK1xCvXccwOldkyUM3Q/N13aHs8JRjkwVHJKPEcJPrHX0&#xA;jmR5c/ufRem6no+uaXHe2E8N/pt2h4yoQ8bqdmU/qZT06HMl5EgjYvE/zR/5xzNyDq3kR0tbqJzM&#xA;2iSf3DniwIt2LJ6dQx/dseHgUAocfNpozBHe7KPamWWIYMkicQkCOpjsRty2o8r+Twv09el11fLc&#xA;Hl2OTW3Pp/UQLsTK1a0eFm5LRfiPI8Qu5NM1+DscyJMshFd4H2UGWuEcUYmBjkE/5t7f1geT3v8A&#xA;K/8A5xxtdPddc88mLU9XkIlGlJ8VnCwVVHqg8vWcBen92DWgbY5uMF4sXhRPou3UyiJS4yPU9i13&#xA;X9F8v6XNqmsXcdjp9uPjmkNB7KqirMx/ZVQSewwgXsEkvmr8wvz01vzhc/ofQZm0DyxLMltcajJz&#xA;WaQOeszxBmii41PBKsVBrsSubPDoxEEz3kBfB1+P6nDnnJoR5fzkh/MT8qtK8raJaalpurC6jkKp&#xA;xn4Ri6V+RWew9MuJIvT9N2ozAc/tVBXMnRdoTlPhIHD5dP2NOo0sRHiB3+9Q/InWrfTPzMttPv1D&#xA;aZ5ltp9GvYnJCFpB6kPIeLMjRj/XwdrREhHJE30XQkgmJ973X/nHq6uLLy5q/kq9ctfeTtTuNPFR&#xA;QtayOZreUD+VuTBfZc0bsnq2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvFn1SH&#xA;VPzm80+a5VE2lflto7WtsPi3vZ42uLl0PiIg0TfIfSq8p/KjzvD5ck1PWtQLNreqILk3aQrM7SzP&#xA;JLcRrydBG0jzhuZqvwAMDtmLDMATb3PaXs3qJYNOMIMvR6hfKUvVe586vyFvSvJsHkXVfJ2rPa6N&#xA;NYrrguYby3+O9Y3MBSSC3tpgI6cfWDxqVDM3f4DW3HwyFjq6HtQ6rTaiOPJO54RHhI6DmKSfUNf/&#xA;AC40jyl5g8m6c81xHbzXPFtTgWaSe9Yekktu8PBE9Ipxq6KQPiWp6x44RBHc5f5DtDVZseoIJOUi&#xA;px6VtZr6a82A+TPPHmPydqBu9GnpDKwa90+Xe3uAKD41/Zeg2kX4vGo+HMbHmMfc97237MYdYOOP&#xA;ozd/f/W/Xz9/J9Tfl/55sPOnl5NZs7ae0HNoZoZ0IAlj2f05KBJUr0dPkaMCBng2LfItRhOKZgau&#xA;JrY2PmE+FjZLeNfC3iF68Yhe6CL6pjU8ghenLiCa0rhaWH/mj+amk+QNNhlubeW81C95rp9ogKI7&#xA;IAWMkxBRFFR4t4Kd6W4cMskhGPNhkyCAsvkvzn568zectU/SGu3XqlK/VrSMFLaBT1EMZLUr3Yks&#xA;e56Z0+k0EMIvnLv/AFOmz6mU/IM/i8//AJezeR9D8pajazSac/om/hskEM1rcR8Y5LkzSGQTO/Fn&#xA;oF3WQgkFVzTjSZ4ZJTH8Nm+92Hj45RET16M3/MTyp+WL6ZZ3WrG5sbTypDLafVdPjpOYIbpIre3l&#xA;9Uv8U3JmjYleYLPXjU5i4MuSzGPOezdkhCgT/C81/PHzxoGq32k+Y/LrWn6Ysj9fe6t4pI5Va2dJ&#xA;LUXDNQeqvpU4jlxAqHIcUycGlmIZOIEAD7Ru05M0eKNbm3r7XUWgfn9pepRfu9L/ADE0n0n5GnK/&#xA;09RJEx7f7zngPEtmscx7BirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVaNabde2KvDv&#xA;yJ1TRYrPXvJHmgvY+etTv7681vT7wGM3P1smr2jsf3sZjFRTf7RpT4sVeOwaM3kvztF5e8ywiVdH&#xA;uImcSIWS709XHpzqg+2skYoy1+1VTmFKHDOzyfS9J2jLW9lSw4yfzGOIFDmQCOXvGx8/ezvzt550&#xA;9bPRbfybrn6GgSWaS+tdHjntooyxj4SyFobYznZvhKUpQcT1Nk8oFUXRdm9h55jN4+GZl4ZMSbB4&#xA;+ld/28kP+aPmPyLq6x23lvTbd9Vur55pLqyt5BNK7lhxA9KNpPXeUMFHJuYavUEjMRIVHct/s7hz&#xA;6PN4upM8OGET9VgH+iB158VeTJfy4/5x8klMWq+dV4xgh4NCRutNwbt1O/8AxiQ0/mJ3XJYsAG55&#xA;tPbntXl1V48V48X+yl7+4eQ+JL3KWXTNJ00ySNDYabZR7sxWGGGJB/sVRVGZDyDzCD/nJX8vn81H&#xA;RpfXt9OZV9DXJV42zuW4nkp/eJH0pIw8agKOROMGd8O/DzcnVaPLp4wOUcPifTfN6Rq2kaF5j0d7&#xA;HUreHUtKvEDFHo8bqfiR0YdD3VlNR1BxBpxnzZ+Zv/OOms6G0uqeVBLqukbvJYfbvLcdfgAH79B7&#xA;fGNtm3bNzpO1SPTk5d/63X59EDvD5Mb/ACl1nyFYyXq+ZrWzkuGeCSxur6KWVIwnPnQRpL0bgStF&#xA;5Dbl0GWdpRyTIOOzEjow0hjEESoSvqyrSvzI0rUfNXm2DzdrZ1zyhc8v0fpt0rCKYJcpJC8CGNRG&#xA;8UafCCUq2533zDy6SQhAxjLi3vn8Pc5EM8TKQMhw9Hnuv6VZeefzDfQvJdiltBqjpBHFbK/owwqq&#xA;x3N1R1RlhFGcclUmoFORpmUc0sWmMZn1yvY865NAxiea4/SHuH5867pcsvlzyz5ZMmo+f9K1K1v9&#xA;J02zAleIW+7C7ev7mJkI5ct+hI475o3ZPZL7WNJ08oL+9t7QyVMYnlSMsB1pzIrSuKqt5fWVlCZ7&#xA;y4jtoAQDLM6xpU9ByYgYqutrq2uoEuLaVJ4JN0liYOjAGmzLUHFVXFUg8w+ffJvlzULDTtc1e20+&#xA;91NuFjBM/FnNaV/yVrtyagrtiqf4q7FXYq7FXYq7FUg8xeffJvlu+sbHXdXttOu9SbhZQzvxZzWl&#xA;f8la7cmoK7Yqn+KuxV2KuxV2KpT5m82eXPK2ltqvmDUIdNsFYJ68zU5OQSERRVmYgH4VBOKoLyf+&#xA;YnkrzlHcSeWdWh1MWhUXKx8lePnXiWSQIwDcTQ07Yqh/P35a+WPO9hHDqsLRX1qeenatbH07u1kB&#xA;qGikHuKlTVT4Yq8b842l1YRW3ln85YXvtLjdo/Ln5maepWa3d6BEvAA5RmGzcuStQVDfaUEA827B&#xA;qJ4ZicCYyHUME1r8v/Megaxpthf3VnPo+syLHpHm5ZBHpkquCyGeQcxC7KKhakN+wTmLLTb7cnv9&#xA;N7dVgPiQvMOVfSfM93wu/J9I/l1+Unl7yZGLlf8Achrrpxn1WZQGAP2lgjqwhQ+AJJ/aY7ZkQgIj&#xA;Z4rtHtPPrMnHllfcOg9w/HmjfPn5meWfJlqG1CUz6jKvK00uCjXEvbkR0jSo3d6DwqdsMpCIstWi&#xA;0ObU5PDxRMpfjn3PnLzf5v8APPn6K81S8hlHl/THQvZ24b6lbtIwWP1HNPWm+IbtuK1CoDmLOcpC&#xA;x9L3XZ/Z+i7PzDHkkMmsP0ivRGX8I95PU+RoK3nfyn+WsXka11vTLmWG7mWmnXkzl5ryRGQT20lq&#xA;Phi9FjIXcfCv7ujSciBtuyzKMx4Qu+fueF9oNTnzTl+bJ447e7yAH4KW+RPzO89/lxLbwT2002g3&#xA;SC4TSr1ZIkeKX4hNZyMPg5E1qoKNU1Fdxs82kxZyTiI4h0/H9joseeeOuMel9QeR/wAwvK/nTTvr&#xA;miXXOSMKbqxlolzAW6CWOp8DRhVT2JzS5McoGpCi7CMxIWGJ/mh+RPlvzcs2p2BTR/MJ+NrxF/cT&#xA;kb/6TGOpP+/F+Lx5AUy/TaueE+nl3NebBHIN3zj5W/LDzL5m1K+htpray0LSpJI9V81SSK+nRrET&#xA;za3lBVZzQV2IUftFc2mbtgcPoHq+79bhY9B6vUdnpvk2wnvIbjyx+TFu1hpbMIvMP5m36Fprhl+2&#xA;loDwZyOg48VXenA0dtHOZkbJsuyjEAUHs/kH8tfLHkixkh0qJpb+7Pqalq1yfUu7qUmpeWQ+5J4i&#xA;ijwrXIpfOv8AznF/x1fKP/GC9/4nDir0v/nLz/yTdz/zHWn/ABI4qkHk/wDN3Tfyy/5x28mane6d&#xA;caj9dE9vbpAyIgkE8z0kdzVagGnFW6YqqSf85o+QxrMNvHo+oHR3k9OTVX4KVApV1gBYsByqRyDU&#xA;7dsVQf8AzkxF+Wj+fvJ58x6dqF9qdyI4ojZ3EUFvJbfWKCOcukr0DyMf3dCQSK9CFXoXk/8APXSv&#xA;MX5mar5Ak0ufTdR0wXAE1w6ETPbSBGVFSvVDzU1+yMVUbX/nILy9c/mTq3kuOxmWDQ0uZdV1x5EF&#xA;tBHZx8p3Zd2osn7v54qwy6/5zK8vJcyXFp5W1O68uwzCB9YBRPiIrtGQUqRuqtKDTwxVm/n3/nID&#xA;yv5W8j6P5wtLSfWtN11uFg0BSNQ3EsVmZzyQjiykBTQgg4qlflv/AJye8oa7c+Y7iKwubby15cs/&#xA;rk2tSkD1SZFiSJIKVDSOxCVbem9MVY1b/wDOYdnNG2oDyTqreX0l9J9UjZXAO1ARwEQfcfD6v04q&#xA;hP8AnJM/lxeecPJZ8zaXqk2pXscaxQ280VvH6Ekw/c3IdZWDK7mvp07ivQhVi355/mb5ii/P3RII&#xA;bfVk0zQZ7Jv0LE8gTUJLe7eb1oIR8D+qKRhuJ+zTtir1bXv+clLPy9/hj9OeWNQ01fMqiUNcMifV&#xA;o/rJgf1ARyLolJStOjLvvsqyb84fzl0T8sdO0661C0lv5tTmeK3tYGVG4xKGkkJbspZB9OKp3rf5&#xA;gaN5d8jL5v8AMavptr9WinltGo86yzKCtuqinKTk3Hw77DfFXj2l/wDOZ3lOfUYV1Ly9f6do1xIY&#xA;otVLJKBxIqzRqF+zyBYIzEeBxVhX/OaPmgajf+V9Mto5Tp8dvLfw3672t0LoRhPSYbM0SpU07OMV&#xA;e6fkdLoFzoF/eaL5Ll8lwSXIiktLiP0pZ2iiWknEhTxAagPc171xV6TiqHv7Cx1Czmsb+3jurO4Q&#xA;xz28yh43RtirK1QQcVeL65+XHmbyDFeTeTbUeZ/Il4HOr+QL4+rwRviZrF3D1/4xmp/1tuKqTaX5&#xA;m802vk+7u/yi1Ftb0GBAk/lrUFM2t6Gw2KWySEmZFUMqxScqFfg57rgN1s3acYzkHiEiF71zryeO&#xA;/pJtTll1GW5e8ubly1xdTMzyu42PqFviqOlD06Zrchlfqfb+xsOkhgH5avDPXqf63W/fyZvo/wCZ&#xA;D6b5Nj8uR6eLxOcy3NtO9LSWGZ3kZmWIJN6paZhs4A4o+7ChvjnAjTxvaHspklrJZROOPFI8Qle4&#xA;lzr5/Zvz2eqeYrDyzffl/bvqnlqZvLunWx1eOwhcRxQ2xsGlrHcxiKTn6z8XBblXk5HCmZ+KZiRw&#xA;nhfPc/qJ4vUb99vI/wAyfzS0jzX5T0zTLK1msntpUk+oERvb28cURiVIpgqySChHHZePxA8qqRud&#xA;DoZwy8RrhHV1mp1MZQocy8603XNS0LUINU0u7lsdRhYC3ngJ9QsTsgUV5huhQghuhBzZ6zHilD95&#xA;y73E085iXoe9635i8x33lWy1D847z9BaHKlIPJ2mB49U1qToFulD840IIBhRlHJvjK/CuclKr25O&#xA;8F1unGi/l35o/MGO0n86Ww8s+RbQJ+iPINkfS5om6NfPHwoOlI1AP+pvyil7NYWFjp9nDY2FvHa2&#xA;dugjgt4VCRoi7BVVaAAYqiMVfJf/ADnGrfpPyi1DxMN6A3YkPDUfjirNP+cr/Nnli/8AydjSx1W1&#xA;un1G8tpLFIZUkaVF5MzqFJPFR1PQdOuKvLPzMjdP+cVfy4V1Kk3sjAEUNG+tMp38QajFUf8A85M2&#xA;1vb/AJU/lWkESRJ9SLcUUKKva2zMaD+ZjU4qj/8AnJz/AJT78tP+MFv/ANRMeKon/nINLj8uPzw8&#xA;t/mbYQlra/FL5F25ywJ6E6+3qW0ige4JxVivkXylq8//ADj/APmT57lBfVdcKxRTEEMbWC6jmvpF&#xA;I/ZkLMG/1MVUvyr8i/nD5w/Ki+0zy55l0a08nTzypqel3oUSrIvCRmlkFnM61Coyn1enhiqK/Nny&#xA;hqPlP/nHTynpF7qFnqgGtS3FreadK09q0E8Msi+nIyR13JOwpir6BvPK3lvWv+ce7LQdVu4NE0m8&#xA;0aw9S+bhFFBKVhkjlbkUX+/Ck1Ir44q8C1O2/Pj8hNDtri01qx1DyfcXXp28KFLi3d5VaQAxyoky&#xA;CRUYn0np771xVFfn/wCYR5k8zflRr4i9D9K2VrdtD14NNcRuy170JpXFWQ/ndIkf/OVv5ds7BV9H&#xA;TBU7CrajcgfeTirL/wDnL7yf+mvyxXWoU5Xfl25W45Ddvq05EMyj/ZGNz7Lirx7TdauPzq/NX8vd&#xA;LuOU1loum2x1nkKq0lsPWvHb2mZEj+kYq9N/5zXS/P5e6M0VfqS6qv1kCv2zby+kT7faxVin5yXf&#xA;l9/+cU/IcdnJAz101USLiSLhLKT61sOjCQtz9zv1xVhv55x3Uf5Qfk4t0GWX9G3pAfr6bC0Mf0cC&#xA;tPbFX3JirsVdirsVec+fPygg1fU/8U+VL0+WfPEIJj1W3H7q5pT93eRD4ZFNAOVK+PIDjiryLzBo&#xA;+n+atdfS/MlrF5D/ADYYARXLV/Q+t02VuQ2LMfhDD4xUD4j8AhPGJDd2fZna2fRT4sR26jofePwU&#xA;l8p63deQPN91YeadMks9SNuYvQeGO4Vl9RXE0JMkHrRN6fGqSD/K6cTjwHhk3yer7UzjtvHj8AVm&#xA;hxXAkDY1uLq+X66V5fzJ0S3/ADrk82ST6hLYGxaOJZFVmeRoBCyywiVU9IvybiG2NKDM/SYpZuIQ&#xA;35PLdsaPJoceOOcCMvVyo7bc6+KU+btW1b81PPMFp5U0n17mO3SFY441hSKPkzmW6kBdURC/AMxq&#xA;9BRQW4jb4Mg0kDxfWejzOWPjyHD9I6sp8saHo/kzWU0fylZx+ffzYKkXOof9KnRq1DEN0QqfhJrz&#xA;bcVX+7Orz6meU3IubixRgKD13yH+UEGkan/inzXenzN54mAMmq3A/dW1a/u7OI/DGoqRypXw4g8c&#xA;obHo2KuxV2KsW/ML8tfKfn/Rl0rzHbNNFE/q2txE5jmhkI48o3Fe3UMCp7jFXlWmf84Yflja36XF&#xA;3f6pf26Ny+pyywojgH7LtFEjkf6pXFXon5i/k55S89+XNN8u6g1zp2maTIkllFprRQ8BHEYkjpJF&#xA;MoRUbYAYqgfPn5D+UPOugaBoeq3moQ2nlyL0LF7WSFJHX044qymSGRSeMQ+yBiqp56/I7yn501fQ&#xA;9V1S7v4bjQERLNLWSFEYI4kHqiSGQndf2SMVTb8zPyx8ufmL5fj0TXXuIreG4S6hntGRJkkRWTZp&#xA;ElWhVyCOOKpl5Z8m6H5d8pWflSyh9XSLO3Nr6dwFcyo1fUMoCqjGQsxf4QCSdsVeR6l/zhz+Wlzq&#xA;E1xZ6hqum2dw3KXT7eaIxAVrxQyRO9PDkWxVlnmP/nHzyFrnkbSfJRe+sNF0aY3NoLSZDKZHD8y7&#xA;zxz15GVmNAN+m22Ksh1/8s/LGv8AkaDyVqgnm0e3hggjZZWjm/0VQsTs0fFWYcQaFeNe2KvLrD/n&#xA;Db8uILyGS71TVr+xgcsmnzTRLGQTXizRxI1D34cTirNvO/5E+S/N+qaDqF5LeWP+HI44dNtbB4Yo&#xA;BHE6uiMjxSmi8AKKRtiqz81fyH8n/mPe2epanPd2Gq2MYhhvrJ0VjEHLqjiRXBCszFSKEE4ql3nC&#xA;byB+U/5Pv5d166v9R0i7hurCBZv311cyXQkkeP1ljEaE82Ks9Ke9MVYH/wA4Z/l9cafpOqedL2Bo&#xA;n1WlnpXMEMbWNucsg2FVkkCgH/IxV9A+Z/LGh+aNDutD1y1W8028XjNC1R0NVZWFCrKRVWG4OKvH&#xA;9K/5w6/K2y1VLy4udS1C0ik9SPTbiaL0Ce6yGOKN2Gw6MPeuKsz/ADS/JDyj+ZEWkRazcXtlFoqz&#xA;LZx6c8MS8bgRBgwkhmFFEC8eNMVehYq7FXYq7FXYqkXnLyR5Z846O+k+YLJLu1b4om+zLDJSgkhk&#xA;HxI48R8jUYq8Y8z6Tqnk6yTRfzIsG88/lokg+peYuLHU9KB2H1gxlZOK9PURht9CYsoyMTYNEKz/&#xA;AJF/kQ2jr5vk8wXreXBHyFw2oL9X4Vpw9Th63Ll8PHnz5fD12yWKZx3wHhvubtXqsuprxpGfDy4t&#xA;1LyxpWq+crD9CflzYN5E/LEv/pevBCmp6qF+Fjbl+T8WpT1ZCTTud0wE2472byb5I8s+TtHTSfL9&#xA;klpar8UrfalmkpQyTSH4nc+J+QoMCp7irsVdirsVYz5//MXyp5D0NtY8xXXowklbe3jAeeeQCvCG&#xA;Oo5HxNQB3IxV8465/wA5vao07roPlmCKAbRy307yOw23KRCML8uZ+eKquh/85v3QmVdd8ro0Jpzm&#xA;sbgqy+JEcqsG/wCDGKvoH8u/zT8mfmDp0l75bvDK9vw+uWcymO4gMleIkQ1G/E0ZSVNOuKsuxV2K&#xA;uxV2KuxV2KuxV2KuxVKvM1noVxo9xJrmnw6lYWSm8a2uIY5xygUuGVJQV5inwnFXj+h/85ffljqe&#xA;q6fo9npesxS3s8Npb84LRY1aVxGnLjcsQoLdhir3XFXYq7FXYq7FXmX5o/8AOQHk/wDLfWrXSNds&#xA;dSuJ7u2F3FLZR28kfAyPHxJlnhbkDH/LTcb4qnv5X/mhoH5j6Bca5odvd21pbXb2TpepGkhkSOOU&#xA;kCKSZePGYd/HbFWYYq7FVrokiNHIodHBV0YVBB2IIOKvMx/zjp+WQ179J/VZ/qAm+tf4c9X/AHE/&#xA;WacfV+q8etP2eXDtxptir0xESNFjjUIiAKiKKAAbAADFXmv5pfn/AOTvy21i00rXLPUbm4vLf61E&#xA;9jHBIgTm0dGMs0J5VQ9sVTz8r/zQ0D8x9AuNc0O3u7a0trt7J0vUjSQyJHHKSBFJMvHjMO/jtirM&#xA;MVdirsVfBX/OVHmu91z83dSspJWaw0NY7Gyh3CqfTV5mp/M0rGp7gDwxVnP/ADjT/wA4/eSPOHlS&#xA;XzR5pWTURJcyW1rpySyQxosQHJpGiKSFmZtgGAA8a7Ks985f84cfl5qVrI3lme50G/AJhVpGurUn&#xA;wdJSZfpEm3gcVZx+W/kryz+Tn5cenqN3DD6VLnXtXaoR55CE605emlQibe9Kk4q+MfzA/MrzXc+f&#xA;PMlxpPmfUW0qbVL19PMF5cLF9Xa4cw+mocAJwpxFOmKvszyT+cv5Y3WmaDo0Xma2udXmgtLRIGd3&#xA;mkuGRY+LEjdy/Unviqd+afza/Lbyq0keu+YbO1uIqiS0WT1rgEdjBD6ko/4HFVvmj83fy48rWFnf&#xA;a3rsFtDqMS3Fiqh5pZoXXksiRRK8nBgftcaYqmflvzv5V8yeXR5j0fUEn0Q+p/p0ivboPSJWQsJ1&#xA;jZQpHUjFWKar/wA5Gfkppd0ba68027yqSCbWK4u02/4sto5U/HFU78n/AJs/lz5ylMHlzXbe+uQC&#xA;31Q84bgherCGdY5CB3IXFWJ/85I+e9L8v/lzq+mprH6N8x31ujaXFHI8dw4WeMOY2ShHw1rvir5l&#xA;/IX8ztRsvzR0m882earyPQ4EuTcfXbueSAs1tIkYdWZgfjYEbdcVfXjfmF5L82+WfMSeW9Xg1RrO&#xA;wma6EBY+mJInCcqgfa4mnyxV8Bfl7/yn3lr/ALatj/1Epir7u8z/APOQn5QeW717HUPMMMt5GxWS&#xA;GzSW74EdQ7wK6KQdiC1cVTvyT+afkHzusn+GdYhvpoV5zWtHhnRa05GGVUfjXbkBT3xVleKsA83f&#xA;nx+VHlO9ew1jX4RqEZ4y2lskl1IjA0KyegsgRh4MQcVX+Tvzy/KzzfeLY6Jr0L6g5pHZXCyW0rnw&#xA;jWdY/UPeiE4q+cf+c2f+U/0L/tlD/qJlxV6J/wA4b31nYflBrd7ezx21nbazdS3FxKwSOONLK1Zn&#xA;dmoAABUk4q9Ntvzw/Ke71e00e08zWlzqN9MlvaQwF5Q8sjBUUOisg5MwG5xVnOKsU8yfmr+XflnU&#xA;v0Zr2vWun3/BZTbTMQ/B68TsD1piqbeWvNPl7zNpv6T0G+j1Cw5tELmGpTmlOQ3A6VxVIPMf5z/l&#xA;b5cvmsNY8yWdvexnjLbIzTyI3hIsKyFD7NTFXyt/zlr5o8t+Z/NGgat5f1O31OxbTjCZLdw5R0nd&#xA;isi/aQ0cbMK4q9d/5wq/8lZqv/bcuP8AqEtMVe463r2iaDp0mpa1fQadYRUD3NzIsaAnoKsRUnsO&#xA;pxV56P8AnJv8jTcegPM6c+XGptb0JX/jIYOFPetMVehaJr2i67p8epaNfQajYS/YubaRZUJHUVUm&#xA;jDuDuMVfGv8Azlx+XOqaP59m83Q27vomuiMvcKKpFdxxiN43P7PMRh1r1qadMVeW+SfzP89+SJXf&#xA;yzq81hHKwee2ossEjAUq0MgdCabcqV98Ve4eTf8AnNbXoJ4oPN+jQXlpssl5p3KGcD+YxSM8bn2D&#xA;Jir6C1u28u/m7+V91aaPqoGla7EipfxJ6jRmOVZCrRsUIdSnFlJBGKvz7836GmgebNa0FJjcJpN/&#xA;dWKzleJkFtM0QcrU05cK0rir67/Jv/nGDRvLOt6J51l1mTUZY7cXMFi9usaJLcQ0DcxI9eHM0267&#xA;4q8C/wCcodPhsvzu8wiEBUuPqtwVApRpLWIuf9k9W+nFUT+X/wDzjz+ZX5laGnmOK7trbTygttPu&#xA;NRmlLTJaj0FSMRpMVjj9P096UpQA4qz386vyM8+af5M8kaT5da71WztYI9P1HRbQs9uuoPyme7WM&#xA;cRxkkeTk7j4aCp3xVLdA/wCcK/PF5p4uNZ1iy0m6deS2aq90yn+WR0KID/qFhirw+4j1zyd5unhi&#xA;nNrregX0kP1iBvsXFpKUJRu45J9IxV9W/wDOTf5fx+a/INr+Yk18bW40fTIXGnpGGSQ3UkZP7wsC&#xA;vH1PA4q+bPyi8gQ+fvPVl5YmvW09LuOdzdJGJSvoxNJTgWSteNOuKvsvyP8Ak/pf5Y/lz5l060vG&#xA;1G4v4bm4uL2SMRMVW3Kxx8Qz/CnxHr+0cVfBFja3d3e29rZo0l5cSpFbRp9ppHYKir7ljtir3uH/&#xA;AJw188L5YuNUv9Vs7XVIYHnTSUVpqlFLem06kKGNKfCGHvirzD8mtcu9F/NPytfW0jRk6lbW8/Hq&#xA;0FxIIZl7VrG5xV9Yf85V/mpqPk3yja6Pos5ttZ8wNJH9aQkSQ2sQHrMhH2XcuqKfDkRuKhV8wfkv&#xA;+Teq/mhrt1ZwXi6dp+nxrLqGoMhmK+oSI0SMMnJnKt1YCgJ9iq9c0T/nDXWrD8wtP+vapHfeUYD9&#xA;auL6Ktvcs0TArb+lydlZz+2rGig7hqAqpT/zmyKeftCH/apH/UTLir0P/nDmxtb/APJ3XbC7jEtr&#xA;d6vdwXER6NHJZWqOp+anFXyj5g0rU/Jfne907mU1DQb9khmpQlreWsUo9m4hhir9IfLGu23mDy5p&#xA;euWv+8+p2sN3GPATIH4n3WtDir88PzY81P5x/MvXdbgJmivLto7Dj8RaCKkNvQD+aNFNB3xV75+b&#xA;vmm//KH8nfLH5daHMbTXtQtC+p3cLUkhUnncmNhuGlnkZVbsoPehxV4p+UX5LeZvzOvr2PTJobKy&#xA;09Va8v7nkVDy14RoqglmbiT4AdT0qqg/zW/KbzF+W2uQ6XrEsFzHdxmayu7ZiUkjDcTVWCujA9QR&#xA;8icVfT3/ADhV/wCSs1X/ALblx/1CWmKvnP8APX81dR/MDzrdzidv0BYSPBo1qGPpiJDx9bj05y05&#xA;E+FB0GKvTo/+cMNXbyP+kn1nj5pNv9ZGk+j+5D8eQtjLy5c+3LjTltSm+KvPP+cc/wAydR8m/mNp&#xA;0HrsNF1ueOx1S2J/d/vm4RTU6BonYHl/LyHfFX31e2Nlf2ktnfW8d1aTrwmt50WSN1PVWRgVYfPF&#xA;XkPmr/nE78otcLy2dpcaFcvU89PlIj5HxhmEqAeyBcVfKn50/k5qn5Y69bWVxdrqGnahG8un3yr6&#xA;ZYRsA6OhLcXTktaEihHyCr1f/nCPzDfLr3mHy4XLWE1qmopGa8UmikWFmXsC6yivjxHhirw/82P/&#xA;ACafnL/tual/1FyYq/RPyn/yiujf8wNt/wAmVxV8Qf8AOV//AJO3WP8AjBZ/9Q0eKvqD/nFz/wAk&#xA;T5Z/6Pv+6hcYqx//AJyI/wCciJvy/ni8u+XYYrjzHcRCee4nHOG1ickJ8AI5StSoB2AoTWuKvn3T&#xA;fzF/5yW87zyTaLqOtagI24ytpkbRQxs3RWNuiRr8jirzHXl1hNc1Fdb9Q6yt1MNT9c8pfrQkb1vU&#xA;O9X9SvL3xV9y/nL/AOs0ah/2yrD/AJOQYq+av+cUP/J26P8A8YLz/qGkxV9v+bP+UV1n/mBuf+TL&#xA;Yq/OH8vf+U+8tf8AbVsf+olMVfpTq3/HKvf+MEv/ABA4q/Nb8vf+U+8tf9tWx/6iUxV7L/zmvNOf&#xA;zI0aE19BNGjdOtOb3VwH9uiLirOP+cII0HlrzPIB8bXsCs3chYmIH/DHFX0vir41/wCc2f8AlP8A&#xA;Qv8AtlD/AKiZcVelf84Vf+Ss1X/tuXH/AFCWmKvLP+cyvJ/6L/MCy8xwpxt9ftQJmHe6s+Mb/fE0&#xA;X44qyb8tPzXOm/8AOK3mAetx1PQjNpdnvV/9yDVgcf6hnensmKvKf+cbPJf+Kfza0mOVOdjpJOqX&#xA;gIqONsQYwQdiGmZAR4YqyH/nMW4nl/N5Y5ARHBplskFa0KlpHJFf8p2xV69/zhRbxL+WmsXAH72T&#xA;WZY3bxWO1tyo+gyHFWCf85vf8pV5a/5gZv8Ak9irLv8AnE+SaL8ifNMsJImTUb9oyBUhhp9sRQfP&#xA;FXx/EZBKhir6gYFKbnlXamKvXf8AHf8AzlH/AL/8x/8ASJN/1SxVglt5F/MK2uYriPy1qvqQusiV&#xA;sbn7Smo6IPDFXvPmD/nMPzDpX5jaumn2ltq3lCCf6taW7fupGWH4HmiuEDf3rAsOSttTbFWX2v8A&#xA;zmx+XTWwa70XWIrmnxRRJayoD7O08R/4TFXz7+en5y3P5neYbW7S0NhpOmxtFp9q7B5P3hBkkkYb&#xA;cnKrsNgAOvXFXun/ADhr+XWo6XpOpec9ShaD9MIltpSOKM1sjc5JqfyyPxC/6tehGKvm7834JoPz&#xA;W84pMhRzrV/IFOx4yXLuh/2SsCMVfZH5bf8AOQf5X6vpXlnQ4tUMev3kNvZfo1oJwyXCxqjIZOHp&#xA;U5D4Ty3xV80f85X/APk7dY/4wWf/AFDR4q+oP+cXP/JE+Wf+j7/uoXGKvl7/AJyusry3/O7WprhW&#xA;WK8hsprQmtGiFrHCSvt6sTj54q9T/wCcevz6/LHyp+VcWi69eHT9U02W4eSFYZZGuhNK0qOhjVl5&#xA;UYR0Yj7Phir5n85a5Dr/AJv1zXYY2hh1bULq+ihcgsi3M7yqrEbVAehxV9j+c/MWm+cP+cVtQv8A&#xA;Q5BdKml2yXMSmrwy2rQtcRyDs0YUk+242IxV8v8A5D+dNH8m/mjpGu6y7RaXCJ4ruZVZzGs0Dxh+&#xA;CAsaMwrQVpir7VtfzO8keePLPmlPK+pDURpllILxxFLGFM8MpSnqqnKvptuMVfBX5e/8p95a/wC2&#xA;rY/9RKYq/SnVv+OVe/8AGCX/AIgcVfmt+Xv/ACn3lr/tq2P/AFEpir6Z/wCc0vI17e6Xo/nGziaR&#xA;NN52WplRUpDKwaGQ+CrJyU+7DFXmH/ONf526T+XOpanZa+kzaLqwif14F9RoJ4eQDFKglXV6NSp2&#xA;G3XFXret/wDOZ/lSHzLptpo+nTXWgmYLq+pzqY5BEwpytoQSx4khjzpUAqBvyCrA/wDnM947vzV5&#xA;X1a1YTabfaTys7pDWOQes0lVYdRwlQ/TirKP+cNfzB8r2ei3fkm7uvQ16/1KW8sIGV+MyG1iDBXA&#xA;KBl+rMaMRXtir0L/AJyq8n/4h/KW9u4U53mgyJqUNOvppVJxXwETs5/1cVfDltruoW+h32ixPxsd&#xA;Rntrm6Xuz2iyrH9H+kMfuxV9d/8AOGPks6d5M1LzVcIRPrlx6NqSP+PW0qvJf9aZnB/1RirGP+c1&#xA;fI94b7RvOttEXtPR/Rmouo2jZHaWBnp/P6jrU+AHcYqwf/nHf8/dO/LWPU9L1uxuLvR9QkW4jks+&#xA;DTRTqvBvgkaNWV1C/tClO9cVSf8A5yC/ODTfzM8yWN5pdjNZafpsDW8LXJX1peb8yzIhZU8AOTfP&#xA;tir33/nCwwyflbrEDUc/pqcyRkVHF7S2G4PY8Tir5c/M/wAi6n5B89ahoU6uiW0pl024P+7bZmLQ&#xA;SqfHjs3gwI7Yq+rfJv8Azl5+Wt75et5PMs8+la3HEq3lv9XlmjklUAM0Lwq44t1AfjTp4EqobQ/+&#xA;cvfLOtfmLp+g2+nyWvl29Jthq10Qk31mQgQn01LKsRb4TVq/ED8NCCqyzzp/zjL+UvmmZ7ptNbR7&#xA;6Spe50thb8id6tCVeCtep4VPjirzyf8A5wf8vG4DQeabuO3rvG9tE70r/OHQdP8AJxVmHk3/AJxN&#xA;/Kvy9cx3l7FceYLuMhlGoMptww7+hGqKw9pOQxV7OiIiKiKFRQAqgUAA6ADFXl/5o/8AOOvkL8wb&#xA;5tWvBPpuuMoSTULNlBlCDinrRurK/EbVFGpQVoBirGfJv/OIfkny7r9jrcur6jfXWm3Ed1aR1ihj&#xA;EsLh0L8VZjRl7MMVZJ58/wCcbvy987+ZrjzFrMt+uoXKxpILedEjpEgjWitG56L44qzbyP5N0jyZ&#xA;5WsvLWkNK2nWHq+gbhg8n76Z5m5MqoD8chpt0xVIvzT/ACb8n/mRYQw61HJBfWtRZ6nbFVnjDblD&#xA;yDK6E/ssPlTFXjUX/ODuli75y+bp2s+8K2SLL1/34ZmX/hMVZL5p/wCcPvy/1HQdOsNCuZtHv7D4&#xA;ZdRcC5e6VmBc3C1jBf8AlK8QOlKdFXrvlfyT5b8teVYPK+mWiDSIYmheGQB/WEgPqtNX7ZkqeVf1&#xA;Yq8d8xf84Z/l3qOoSXWlahfaPFKxY2aFJ4Ur2j9QeoB/rOcVZn+Wn5A+UfINhqttp93e3c2tW/1X&#xA;UJ7h0AMdGA9NERVWnM9anFUi0j/nEn8rNK1Wy1S2m1M3NhPFcwB7iMrzhcOvICIVFV3xV7NcQpPB&#xA;JA9eEqsjU60YUNMVeM6R/wA4k/lZpWq2WqW02pm5sJ4rmAPcRlecLh15ARCoqu+KvZLyztL20ms7&#xA;yCO5tLhDHPbyqHjdGFGVlaoII7HFXhHmX/nDb8t9TvnutJvb7RVkarWkTJPAtf5BKPUX6XIxVHeT&#xA;P+cR/wAsfL99Hf6g1z5guImDRw3xQWoI3BMEarz+TsynwxV6D+Y35XeUvzA0NNI163YJA3Oyu7ci&#xA;Oe3YihMTEMKEChUqVPhsMVea+TP+cSPK/lfzVp3mGDX9Rmm0y4W5t4QsMYZkNQkjcWqjD4WAAqPD&#xA;FXtOu/on9CX41l449Ja3lXUHmYLEIGQiTmx2C8Sa4q/NfU9O0vVPOcumeUIp5NPvL0Wuix3DBp5F&#xA;dxHEXIC0ZyQaU2rTFX6PeTvLVp5Y8q6V5ftKehplrHbhhtzZFAdz7u1WPzxVHatpOmavptxpmqWs&#xA;d5p92hjuLaZQ6Op7EH7xirwTWv8AnCz8v7u+efS9Vv8ATLdySLP93cInsjOA/H/WZj74qmdn/wA4&#xA;eflPFo62Nw+oXF36iyyan66pMeKsvpqoQxrGeVfs8th8WKs//LL8pvLP5c2d9Z6BNdyW9/Ik0yXc&#xA;iScXRStU4pHSo6/LFUV5/wDyy8mefdNWx8yWC3Ho1NrdofTuIC3UxSjcVpupqp7g4q8VuP8AnCHy&#xA;o1zytvMt/HbVP7qSGGSSn7Pxr6Y27/Bir0T8uv8AnHT8tfI13HqNnayalrERrFqOoMsrxnxiRVSN&#xA;D4Nx5e+KvTyQoJJoBuSegGKscX8yvy5a8FkvmrR2vC3pi2F/amXn048PU5V9qYqi/NXnHyx5U0sa&#xA;r5i1GLTrBpBCk8taNIyswRQoZmYqjGgHbFUXomtabrekWesaXN9Y06/iS4tJ+LpzjkFVbi4VxUdi&#xA;K4qjsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5U/5yi8o/nNrHm+3sdGOp615V1O&#xA;JZLfTbNGNvbzRUWRLj0gqfao6PMf2qA7YqnX/OO//ONOoeV9Vi83ecljXVoFP6M0pGWQW7sKGWZ1&#xA;qhkANFVSQOta0oq+kcVdirsVdirsVdirsVdir5i/5zD/ADB1y3udI8gaPNJB+lIRd6j6RZWmSWRo&#xA;IIOQI+AtG5de/wAOKp9bf84a/lx/hqKyurq9/TvpD1tWilovrU3KwMOHp8uin4qftV3xVLf+clPK&#xA;Vh5T/wCce9G8u2Ustxb6bqNrHHPcOZJGPpTlmJPSpY0UbAbDbFWZeXPzF0L8v/8AnH/ynr+sx3E1&#xA;qNOs4UitY/UdpHiqoJJVEB4/aZgPpxVh1l/zmbpg1O2TWfKN7pej3bD0dSM3qMUJAMnomGMMq8qn&#xA;jIcVZz+b3/OQmg/l5d2OlxafNrmuahEtxBZQOI0ETsUjLycZDWRgeKqh6dtqqrPyx/Pe984eZJ/L&#xA;mr+T9R8talBbvdyG5JaJIUIUtI0sds61LAD4DirFtW/5y90k6leQeVvKuoeYtP0+putSjYxIEWv7&#xA;0Ksc5EZ47F+OKo/yf/zlJZ+a9dsrXTvKuox6Mef6Z1qSjQWQWMuHkMYZBGKVZndaDscVSbVP+czd&#xA;Ej1O5TRfK97q2i2bUudV9UQ0QtxWQRelJRXb7PN1PsDtirIPNP8AzlP5U0nyponmfS9MuNX07WXn&#xA;gIEiQPbXFvwMkE6n1OL8ZOQpUEb1oa4qmn5r/wDORPlr8u9Q0uyuLGfVH1O1F6jWzovCBm4xsQ/X&#xA;nxanyxVE+e/z40byt5u8v+V4dOm1e+8xR28tm9vIiKFu5jDCTy3+IgnFXqGKuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KvkD/nL/AE670j80PLXmsws9jJbQqG7GeyuGkdPaqSp+OKsg&#xA;/wCcnfIHlTzL5Sn/ADc03VvVaKzsoLWCHg0NwJLoJzL15chHP9n/ACfnirz+9/8AWP7D/wACRv8A&#xA;iMuKvTPNf5mN5J/5xq8km2sLXUrzVrO0t4Y76MT28foxCUytEfhdkdF4A9G37UKryD87W/Ny88p+&#xA;Udc8+a3aalZ6wkt3o1nbRwo8EckcTkyGGGEHkrLtyamKvaPzi/JS887eYND13ylr9nYecdP0+0kO&#xA;nTSmKUxROzQ3cbx85EZXqoPChp9oEbqpT+V35q/mgPzPl/Kf8yZEvXu4prR50WL14mNsZ0IltwFd&#xA;Xi8RUVFSKHFXlP5YeePN3kzX/MPlryBeaTqlpqfwjU9T4WkRjg5ok8bXMtsqtSX7D8gfA4q9K8n/&#xA;AJW635O/5x7/ADBvhqVrf3+t2il4dPnW5ght7QP6o9WI8WkaOV+XEkUA98VXf84+3WgR/wDONnn4&#xA;TPCs6DUjqAcrzKPYIsNR9rixqqeLVpvirzPyb5Tvdb/5x487XgUvFo2p2d/Zin7cUbR3VD7QTqx+&#xA;QxVLPqerfmZDrmsPy4+T/LFkIj1/3gWCKQN/roLiTFWbfkC15+YH51aDqV4C9t5T0a3Wr9/qVutr&#xA;FvvuZ5ef0VxV9p4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkXnPyT5b856FNof&#xA;mG0F3YykOBUq8ci/Zkjcbqwr1HyO2KvFx/zhT+W/1nmdY1f6vWvo+pbcqeHP0P4Yq9C1D8ifIF1+&#xA;XB/L+K3mtNFWQXEMscpa4S4DcvWDyhwWNSCCKUNABirH4P8AnGTyn/yriTyNfarf31qLz9IWV67R&#xA;iW1m4CMiAcSojYV5Iag1J2O+KsZg/wCcMPKbWVxFqHmLUb269L0dOnIREtgG5L+7PPmO3HkBue9C&#xA;FWQebP8AnFfyVrslhd2+q6rp2p6fbW9nFeLceuWjtYxEhYSglW4r/utlX/JxVF+RP+cetA8gS6j5&#xA;h0qebXPOL284sL3U2Xgkzo1OKqBQyE8XcsTStKVNVXzr5b80/kfcvrsn5q+UZbXzObt24aULyBan&#xA;aRTCbtUjkWTlUcQuKsz/AOcOdM1SfzN5pu7e2mTyRc2zQCG5+OOSZpgYUYkBJHSD1A9B336jFWca&#xA;t/zht+Xd3qslzYalqWl2FwSZ9NgeN0AqGCRvKjsFBFfj5Yq9W0b8uPKejeSJfJenWno6FPbzW1xH&#xA;XlJILhSsru7V5O3Lr/DbFUg/Lv8AIfyT5E0vXNN0yS8vLfzBGsGoG+eKRjEqOnBfTihABEzVqDiq&#xA;p+VX5IeUPyzfUZNCnvbqXUxEs8t9JFIyrDyKrH6UUNAS+9a9sVehYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWN+YP+VdfXo/8Q/of6/VPS/SH1X1uX7HH1vi&#xA;r4UxVPbL6l9Ui+o+n9U4/ufQ4+nx/wAnj8NPliqvirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdir//Z</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                <?xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -74.8609 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 74.8609 li
108.559 74.8609 li
108.559 0 li
clp
[1 0 0 1 0 0 ] concat
1.3593 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
65.063 25.7559 mo
86.4976 41.3472 li
86.4908 41.3433 li
86.5054 41.3453 li
107.874 25.8228 li
107.879 25.8072 li
99.7164 0.688965 li
73.4498 0.683594 li
73.3003 0.679688 li
65.0699 25.73 li
65.063 25.7559 li
true sop
/0
[/DeviceCMYK] add_csa
0 0 0 1 cmyk
@
99.7164 0.688965 mo
73.4498 0.683594 li
73.3003 0.679688 li
65.0699 25.73 li
65.063 25.7559 li
86.4976 41.3472 li
86.4908 41.3433 li
86.5054 41.3453 li
107.874 25.8228 li
107.879 25.8072 li
99.7164 0.688965 li
false sop
0 0 0 0 cmyk
f
0.2771 lw
0 lc
0 lj
99.7164 0.688965 mo
73.4498 0.683594 li
73.3003 0.679688 li
65.0699 25.73 li
65.063 25.7559 li
86.4976 41.3472 li
86.4908 41.3433 li
86.5054 41.3453 li
107.874 25.8228 li
107.879 25.8072 li
99.7164 0.688965 li
cp
true sop
0 0 0 1 cmyk
@
101.7 11.9966 mo
104.891 21.9205 li
104.955 22.0372 li
106.027 25.3023 102.786 27.5684 102.786 27.5684 cv
89.9126 37 li
89.7378 37.1089 li
88.6031 37.9376 87.3326 38.2105 86.4439 38.2105 cv
86.4439 11.9805 li
101.7 11.9966 li
false sop
1 0.6 0 0.06 cmyk
f
71.2964 11.9966 mo
73.4009 5.44874 li
73.4009 5.44874 73.9576 2.21827 78.0835 2.21827 cv
78.3599 2.2212 li
95.4449 2.25489 li
95.4449 2.25489 98.4742 1.88331 99.6871 5.68458 cv
99.7291 5.85108 li
101.7 11.9947 li
71.2964 11.9966 li
0 0.185 1 0.275 cmyk
f
71.2964 11.9966 mo
68.1011 21.9205 li
68.0386 22.0372 li
66.9673 25.3023 70.2105 27.5684 70.2105 27.5684 cv
83.0835 37 li
83.2584 37.1089 li
84.3941 37.9376 85.6646 38.2105 86.5533 38.2105 cv
86.5533 11.9805 li
71.2964 11.9966 li
0 1 0.65 0 cmyk
f
0.4423 lw
86.4908 12.0406 mo
86.4908 38.1968 li
true sop
0 0 0 1 cmyk
@
86.3707 25.73 mo
95.9634 32.3785 li
99.5679 29.8106 li
89.9507 23.25 li
102.438 14.3321 li
101.646 11.9859 li
98.6363 11.9522 li
86.4146 20.5347 li
74.1109 11.9522 li
71.3101 11.9859 li
70.5865 14.3321 li
82.5757 23.1168 li
73.2115 29.7759 li
76.7837 32.3785 li
86.3707 25.73 li
false sop
0 0 0 0 cmyk
f
0.3463 lw
86.3707 25.73 mo
95.9634 32.3785 li
99.5679 29.8106 li
89.9507 23.25 li
102.438 14.3321 li
101.646 11.9859 li
98.6363 11.9522 li
86.4146 20.5347 li
74.1109 11.9522 li
71.3101 11.9859 li
70.5865 14.3321 li
82.5757 23.1168 li
73.2115 29.7759 li
76.7837 32.3785 li
86.3707 25.73 li
cp
true sop
0 0 0 1 cmyk
@
72.5259 21.1148 mo
72.6978 20.9576 73.4156 20.417 72.6666 20.0469 cv
71.1587 19.3067 72.3658 18.375 72.9781 18.2437 cv
73.5923 18.1094 73.6119 17.7256 73.6119 17.7256 cv
73.6119 17.7256 73.5923 18.1094 74.188 18.3067 cv
74.7857 18.5035 75.8873 19.5528 74.3111 20.1319 cv
73.5259 20.4214 74.2886 21.272 74.4976 21.3829 cv
74.7037 21.4932 75.5162 21.8545 75.6089 21.0206 cv
75.7896 19.3521 77.0738 20.1675 77.4107 20.6993 cv
77.7466 21.2295 78.1138 21.1177 78.1138 21.1177 cv
78.1138 21.1177 77.7466 21.2295 77.7662 21.8575 cv
77.7818 22.4839 77.1626 24.0142 76.0787 22.733 cv
75.5376 22.0928 75.1285 22.8638 75.0933 23.0958 cv
75.063 23.3277 74.9371 24.3492 75.7515 24.15 cv
77.3814 23.75 77.0523 25.2378 76.6714 25.7344 cv
76.2847 26.232 76.5181 26.5372 76.5181 26.5372 cv
76.5181 26.5372 76.2847 26.232 75.7027 26.4615 cv
75.1197 26.6954 73.6011 26.6006 74.4322 25.1446 cv
74.8482 24.4166 73.8843 24.3462 73.6519 24.315 cv
73.5152 24.3086 li
73.2867 24.356 72.5347 24.4952 73.0005 25.19 cv
73.9341 26.5855 72.4146 26.6236 71.816 26.4288 cv
71.2183 26.2408 70.814 26.4546 70.814 26.4546 cv
70.814 26.4546 71.022 26.1343 70.8003 25.7725 cv
70.4742 25.2344 69.9517 23.8423 71.607 24.1285 cv
72.4341 24.2681 72.3658 23.2066 72.3169 22.9756 cv
72.271 22.7818 li
72.149 22.5845 71.6812 21.7046 71.188 22.3809 cv
70.1939 23.7354 69.4898 22.3863 69.4664 21.7598 cv
69.4419 21.1319 69.066 21.044 69.066 21.044 cv
69.066 21.044 69.4419 21.1319 69.7388 20.5782 cv
70.0357 20.0254 71.2603 19.1221 71.5582 20.7735 cv
71.7066 21.5982 72.2681 21.3189 72.4664 21.1949 cv
72.5259 21.1148 li
false sop
0 0 0 0 cmyk
f
0.2341 lw
72.5259 21.1148 mo
72.6978 20.9576 73.4156 20.417 72.6666 20.0469 cv
71.1587 19.3067 72.3658 18.375 72.9781 18.2437 cv
73.5923 18.1094 73.6119 17.7256 73.6119 17.7256 cv
73.6119 17.7256 73.5923 18.1094 74.188 18.3067 cv
74.7857 18.5035 75.8873 19.5528 74.3111 20.1319 cv
73.5259 20.4214 74.2886 21.272 74.4976 21.3829 cv
74.7037 21.4932 75.5162 21.8545 75.6089 21.0206 cv
75.7896 19.3521 77.0738 20.1675 77.4107 20.6993 cv
77.7466 21.2295 78.1138 21.1177 78.1138 21.1177 cv
78.1138 21.1177 77.7466 21.2295 77.7662 21.8575 cv
77.7818 22.4839 77.1626 24.0142 76.0787 22.733 cv
75.5376 22.0928 75.1285 22.8638 75.0933 23.0958 cv
75.063 23.3277 74.9371 24.3492 75.7515 24.15 cv
77.3814 23.75 77.0523 25.2378 76.6714 25.7344 cv
76.2847 26.232 76.5181 26.5372 76.5181 26.5372 cv
76.5181 26.5372 76.2847 26.232 75.7027 26.4615 cv
75.1197 26.6954 73.6011 26.6006 74.4322 25.1446 cv
74.8482 24.4166 73.8843 24.3462 73.6519 24.315 cv
73.5152 24.3086 li
73.2867 24.356 72.5347 24.4952 73.0005 25.19 cv
73.9341 26.5855 72.4146 26.6236 71.816 26.4288 cv
71.2183 26.2408 70.814 26.4546 70.814 26.4546 cv
70.814 26.4546 71.022 26.1343 70.8003 25.7725 cv
70.4742 25.2344 69.9517 23.8423 71.607 24.1285 cv
72.4341 24.2681 72.3658 23.2066 72.3169 22.9756 cv
72.271 22.7818 li
72.149 22.5845 71.6812 21.7046 71.188 22.3809 cv
70.1939 23.7354 69.4898 22.3863 69.4664 21.7598 cv
69.4419 21.1319 69.066 21.044 69.066 21.044 cv
69.066 21.044 69.4419 21.1319 69.7388 20.5782 cv
70.0357 20.0254 71.2603 19.1221 71.5582 20.7735 cv
71.7066 21.5982 72.2681 21.3189 72.4664 21.1949 cv
72.5259 21.1148 li
cp
true sop
0 0 0 1 cmyk
@
73.7027 23.3834 mo
74.1304 23.4068 74.4996 23.0411 74.523 22.5684 cv
74.5484 22.0962 74.2212 21.6954 73.7925 21.6734 cv
73.3609 21.6514 72.9927 22.0162 72.9693 22.4878 cv
72.9439 22.96 73.273 23.3614 73.7027 23.3834 cv
false sop
0 0 0 0 cmyk
f
0.234001 lw
73.7027 23.3834 mo
74.1304 23.4068 74.4996 23.0411 74.523 22.5684 cv
74.5484 22.0962 74.2212 21.6954 73.7925 21.6734 cv
73.3609 21.6514 72.9927 22.0162 72.9693 22.4878 cv
72.9439 22.96 73.273 23.3614 73.7027 23.3834 cv
cp
0 0 0 1 cmyk
@
73.5523 19.6675 mo
73.8404 19.6832 74.0894 19.4595 74.1041 19.1709 cv
74.1197 18.8809 73.896 18.6319 73.607 18.6177 cv
73.3179 18.6031 73.0689 18.8262 73.0542 19.1143 cv
73.0396 19.4053 73.2623 19.6519 73.5523 19.6675 cv
0 0 0 0 cmyk
f
73.5523 19.6675 mo
73.8404 19.6832 74.0894 19.4595 74.1041 19.1709 cv
74.1197 18.8809 73.896 18.6319 73.607 18.6177 cv
73.3179 18.6031 73.0689 18.8262 73.0542 19.1143 cv
73.0396 19.4053 73.2623 19.6519 73.5523 19.6675 cv
cp
0 0 0 1 cmyk
@
70.5054 22.0445 mo
70.7935 22.0586 71.0416 21.8365 71.0582 21.5474 cv
71.0728 21.2554 70.8511 21.0088 70.5611 20.9947 cv
70.2701 20.9795 70.022 21.2022 70.0064 21.4913 cv
69.9937 21.7818 70.2154 22.0298 70.5054 22.0445 cv
0 0 0 0 cmyk
f
70.5054 22.0445 mo
70.7935 22.0586 71.0416 21.8365 71.0582 21.5474 cv
71.0728 21.2554 70.8511 21.0088 70.5611 20.9947 cv
70.2701 20.9795 70.022 21.2022 70.0064 21.4913 cv
69.9937 21.7818 70.2154 22.0298 70.5054 22.0445 cv
cp
0 0 0 1 cmyk
@
76.7837 22.2071 mo
77.0718 22.2222 77.3199 21.9996 77.3335 21.71 cv
77.3511 21.4209 77.1265 21.1744 76.8374 21.1578 cv
76.5464 21.1441 76.3003 21.3633 76.2847 21.6548 cv
76.2701 21.9449 76.4918 22.1919 76.7837 22.2071 cv
0 0 0 0 cmyk
f
76.7837 22.2071 mo
77.0718 22.2222 77.3199 21.9996 77.3335 21.71 cv
77.3511 21.4209 77.1265 21.1744 76.8374 21.1578 cv
76.5464 21.1441 76.3003 21.3633 76.2847 21.6548 cv
76.2701 21.9449 76.4918 22.1919 76.7837 22.2071 cv
cp
0 0 0 1 cmyk
@
75.5367 26.0025 mo
75.8277 26.0171 76.0738 25.7945 76.0894 25.5044 cv
76.1041 25.2154 75.8824 24.9673 75.5904 24.9527 cv
75.3023 24.9366 75.0542 25.1592 75.0386 25.4502 cv
75.023 25.7393 75.2457 25.9878 75.5367 26.0025 cv
0 0 0 0 cmyk
f
75.5367 26.0025 mo
75.8277 26.0171 76.0738 25.7945 76.0894 25.5044 cv
76.1041 25.2154 75.8824 24.9673 75.5904 24.9527 cv
75.3023 24.9366 75.0542 25.1592 75.0386 25.4502 cv
75.023 25.7393 75.2457 25.9878 75.5367 26.0025 cv
cp
0 0 0 1 cmyk
@
71.7154 25.8023 mo
72.0064 25.8165 72.2515 25.5933 72.2642 25.3033 cv
72.2828 25.0137 72.0582 24.7686 71.7701 24.7515 cv
71.48 24.7374 71.233 24.9585 71.2183 25.2491 cv
71.2007 25.5381 71.4263 25.7852 71.7154 25.8023 cv
0 0 0 0 cmyk
f
71.7154 25.8023 mo
72.0064 25.8165 72.2515 25.5933 72.2642 25.3033 cv
72.2828 25.0137 72.0582 24.7686 71.7701 24.7515 cv
71.48 24.7374 71.233 24.9585 71.2183 25.2491 cv
71.2007 25.5381 71.4263 25.7852 71.7154 25.8023 cv
cp
0 0 0 1 cmyk
@
70.5103 21.7032 mo
70.7701 21.7154 70.9918 21.5142 71.0074 21.2544 cv
71.0201 20.9942 70.8199 20.7706 70.5591 20.7574 cv
70.2974 20.7442 70.0767 20.9444 70.0621 21.2046 cv
70.0484 21.4664 70.2486 21.6871 70.5103 21.7032 cv
0 0 0 0 cmyk
f
76.7867 21.8677 mo
77.0484 21.8794 77.2691 21.6797 77.2818 21.4175 cv
77.2984 21.1578 77.0982 20.9346 76.8355 20.9224 cv
76.5757 20.9087 76.3531 21.107 76.3384 21.3668 cv
76.3267 21.6294 76.525 21.8531 76.7867 21.8677 cv
f
75.524 25.7149 mo
75.7837 25.73 76.0084 25.5293 76.021 25.2681 cv
76.0347 25.0084 75.8345 24.7857 75.5728 24.771 cv
75.3111 24.7579 75.0884 24.9585 75.0757 25.2203 cv
75.063 25.4795 75.2632 25.7032 75.524 25.7149 cv
f
71.7193 25.5416 mo
71.9791 25.5547 72.2007 25.3536 72.2144 25.0943 cv
72.23 24.8331 72.0279 24.6099 71.7662 24.5953 cv
71.5084 24.5821 71.2857 24.7833 71.273 25.043 cv
71.2584 25.3033 71.4595 25.5269 71.7193 25.5416 cv
f
73.7222 23.0162 mo
74.1373 23.0396 74.4888 22.7203 74.5103 22.3062 cv
74.5328 21.8941 74.2144 21.542 73.8023 21.5191 cv
73.3882 21.4966 73.0337 21.814 73.0142 22.2281 cv
72.9927 22.6407 73.3091 22.9947 73.7222 23.0162 cv
f
83.6089 17.9556 mo
83.6089 18.4092 84.9 18.7793 86.4908 18.7793 cv
88.0845 18.7793 89.3736 18.4092 89.3736 17.9556 cv
0 0.185 1 0.275 cmyk
f
0.2447 lw
83.6089 17.9556 mo
83.6089 18.4092 84.9 18.7793 86.4908 18.7793 cv
88.0845 18.7793 89.3736 18.4092 89.3736 17.9556 cv
true sop
0 0 0 1 cmyk
@
83.6089 17.9556 mo
83.6089 16.9732 li
83.6158 16.8267 li
83.6158 15.0035 81.6509 13.5152 81.6509 13.5152 cv
84.6353 13.9156 84.3443 16.4278 84.3443 16.4278 cv
84.3443 14.2437 83.689 12.5323 83.689 12.5323 cv
85.7642 12.896 85.5816 16.0997 85.5816 16.0997 cv
85.4009 13.4053 86.4546 12.3511 86.4546 12.3511 cv
86.4546 12.3511 87.5093 13.4053 87.3287 16.0997 cv
87.3287 16.0997 87.149 12.896 89.2222 12.5323 cv
89.2222 12.5323 88.5669 14.2437 88.5669 16.4278 cv
88.5669 16.4278 88.2759 13.9156 91.2593 13.5152 cv
91.2593 13.5152 89.1841 15.0074 89.2925 16.8267 cv
89.3736 16.9732 li
89.3736 17.9556 li
false sop
0 0.185 1 0.275 cmyk
f
83.6089 17.9556 mo
83.6089 16.9732 li
83.6158 16.8267 li
83.6158 15.0035 81.6509 13.5152 81.6509 13.5152 cv
84.6353 13.9156 84.3443 16.4278 84.3443 16.4278 cv
84.3443 14.2437 83.689 12.5323 83.689 12.5323 cv
85.7642 12.896 85.5816 16.0997 85.5816 16.0997 cv
85.4009 13.4053 86.4546 12.3511 86.4546 12.3511 cv
86.4546 12.3511 87.5093 13.4053 87.3287 16.0997 cv
87.3287 16.0997 87.149 12.896 89.2222 12.5323 cv
89.2222 12.5323 88.5669 14.2437 88.5669 16.4278 cv
88.5669 16.4278 88.2759 13.9156 91.2593 13.5152 cv
91.2593 13.5152 89.1841 15.0074 89.2925 16.8267 cv
89.3736 16.9732 li
89.3736 17.9556 li
true sop
0 0 0 1 cmyk
@
83.6089 17.9004 mo
83.6089 16.918 li
83.6089 16.462 84.9 16.0938 86.4908 16.0938 cv
88.0845 16.0938 89.3736 16.462 89.3736 16.918 cv
89.3736 17.9004 li
@
86.4908 18.7793 mo
88.0845 18.7793 89.3736 18.4092 89.3736 17.9556 cv
89.3736 17.501 88.0845 17.1314 86.4908 17.1314 cv
84.9 17.1314 83.6089 17.501 83.6089 17.9556 cv
83.6089 18.4092 84.9 18.7793 86.4908 18.7793 cv
cp
@
86.4361 18.5821 mo
87.4302 18.5821 88.6939 18.3873 88.6939 18.1036 cv
88.6939 17.8189 87.4302 17.5513 86.4361 17.5513 cv
85.4429 17.5513 84.2164 17.8189 84.2164 18.1036 cv
84.2164 18.3873 85.4429 18.5821 86.4361 18.5821 cv
cp
@
0.115 lw
86.5308 16.8834 mo
86.7437 16.8834 86.9156 16.7564 86.9156 16.5987 cv
86.9156 16.4434 86.7437 16.315 86.5308 16.315 cv
86.316 16.315 86.1441 16.4434 86.1441 16.5987 cv
86.1441 16.7564 86.316 16.8834 86.5308 16.8834 cv
cp
@
87.9839 17.0206 mo
88.1714 17.0206 88.3208 16.9039 88.3208 16.7647 cv
88.3208 16.6211 88.1714 16.5054 87.9839 16.5054 cv
87.7974 16.5054 87.649 16.6211 87.649 16.7647 cv
87.649 16.9039 87.7974 17.0206 87.9839 17.0206 cv
cp
@
89.0962 17.4092 mo
89.2105 17.4092 89.2984 17.2837 89.2984 17.127 cv
89.2984 16.9698 89.2105 16.8438 89.0962 16.8438 cv
88.98 16.8438 88.8882 16.9698 88.8882 17.127 cv
88.8882 17.2837 88.98 17.4092 89.0962 17.4092 cv
cp
@
85.0845 16.9849 mo
84.9 16.9849 84.7505 16.8682 84.7505 16.7291 cv
84.7505 16.5835 84.9 16.4688 85.0845 16.4688 cv
85.2691 16.4688 85.4195 16.5835 85.4195 16.7291 cv
85.4195 16.8682 85.2691 16.9849 85.0845 16.9849 cv
cp
@
83.9742 17.375 mo
83.8599 17.375 83.7681 17.2466 83.7681 17.0904 cv
83.7681 16.9341 83.8599 16.8067 83.9742 16.8067 cv
84.0884 16.8067 84.1783 16.9341 84.1783 17.0904 cv
84.1783 17.2466 84.0884 17.375 83.9742 17.375 cv
cp
@
0.3027 lw
72.7261 7.78956 mo
82.1382 7.77002 li
82.1382 7.77002 82.5367 7.73292 82.5914 7.61963 cv
82.649 7.50733 82.858 7.18458 82.858 7.18458 cv
82.858 7.18458 82.9781 6.83301 83.1412 7.43067 cv
83.2554 7.9209 li
83.2554 7.9209 83.3482 8.41407 83.482 7.58204 cv
83.6138 6.74756 83.689 6.40772 83.689 6.40772 cv
83.689 6.40772 83.9742 5.84082 83.9918 6.46534 cv
83.9918 9.16944 li
83.9918 9.16944 84.0103 9.87061 84.1421 9.87061 cv
84.2759 9.87061 84.4654 10.0025 84.4654 9.45411 cv
84.4654 5.02784 li
84.4654 5.02784 84.3902 4.53565 84.7505 4.49903 cv
84.7505 4.49903 84.9771 4.49903 84.9771 4.93213 cv
84.9771 5.36817 84.9771 10.211 84.9771 10.211 cv
84.9771 10.211 84.9371 10.4927 85.315 10.4927 cv
85.315 10.4927 85.4478 10.5318 85.4869 10.1348 cv
85.4664 4.3086 li
85.4664 4.3086 85.6187 3.59083 86.0357 4.21436 cv
86.0357 10.5709 li
86.0357 10.5709 85.9966 11.0816 86.3394 11.0816 cv
@
100.165 7.78956 mo
90.5357 7.77002 li
90.5357 7.77002 90.1382 7.73292 90.0835 7.61963 cv
90.0259 7.50733 89.8189 7.18458 89.8189 7.18458 cv
89.8189 7.18458 89.6978 6.83301 89.5357 7.43067 cv
89.4214 7.9209 li
89.4214 7.9209 89.3257 8.41407 89.1929 7.58204 cv
89.0611 6.74756 88.9859 6.40772 88.9859 6.40772 cv
88.9859 6.40772 88.7027 5.84082 88.6832 6.46534 cv
88.6832 9.16944 li
88.6832 9.16944 88.6636 9.87061 88.5318 9.87061 cv
88.399 9.87061 88.2124 10.0025 88.2124 9.45411 cv
88.2124 5.02784 li
88.2124 5.02784 88.2847 4.53565 87.9273 4.49903 cv
87.9273 4.49903 87.6978 4.49903 87.6978 4.93213 cv
87.6978 5.36817 87.6978 10.211 87.6978 10.211 cv
87.6978 10.211 87.7378 10.4927 87.3599 10.4927 cv
87.3599 10.4927 87.2242 10.5318 87.188 10.1348 cv
87.2085 4.3086 li
87.2085 4.3086 87.0582 3.59083 86.6431 4.21436 cv
86.6431 10.5709 li
86.6431 10.5709 86.6763 11.0816 86.3394 11.0816 cv
@
0.5195 lw
78.3599 2.2212 mo
95.4449 2.25489 li
95.4449 2.25489 98.4742 1.88331 99.6871 5.68458 cv
99.7291 5.85108 li
104.752 21.5059 li
104.752 21.5059 105.971 25.2681 103.502 27.0308 cv
103.388 27.1329 li
89.2925 37.376 li
89.2925 37.376 86.5328 39.5093 83.2584 37.1089 cv
83.0835 37 li
70.2105 27.5684 li
70.2105 27.5684 66.9673 25.3023 68.0386 22.0372 cv
68.1011 21.9205 li
73.4009 5.44874 li
73.4009 5.44874 73.9576 2.21827 78.0835 2.21827 cv
78.3599 2.2212 li
cp
@
0.3463 lw
71.2046 11.9859 mo
101.646 11.9859 li
@
0.0871 lw
74.3462 11.3501 mo
74.9332 10.813 li
false sop
0 0 0 1 cmyk
@
80.1734 10.813 mo
80.7613 11.3501 li
@
74.9244 5.2837 mo
74.9244 5.2837 74.7154 5.54346 74.4712 5.62305 cv
74.3462 5.64747 li
74.3462 11.3501 li
77.2925 10.3858 li
77.2925 10.3858 77.4791 10.7237 77.8746 10.417 cv
77.9087 10.4141 li
80.7613 11.3501 li
80.7613 5.64747 li
80.7105 5.63819 li
80.4185 5.54542 80.1734 5.22217 80.1734 5.22217 cv
0 0 0 0 cmyk
f
0.231 lw
74.9244 5.2837 mo
74.9244 5.2837 74.7154 5.54346 74.4712 5.62305 cv
74.3462 5.64747 li
74.3462 11.3501 li
77.2925 10.3858 li
77.2925 10.3858 77.4791 10.7237 77.8746 10.417 cv
77.9087 10.4141 li
80.7613 11.3501 li
80.7613 5.64747 li
80.7105 5.63819 li
80.4185 5.54542 80.1734 5.22217 80.1734 5.22217 cv
true sop
0 0 0 1 cmyk
@
75.1578 5.21827 mo
75.1578 5.21827 75.5445 5.38282 76.1148 4.93458 cv
76.6851 4.48584 77.5406 4.89405 77.5455 5.25196 cv
77.5494 10.0196 li
77.5494 10.0196 76.8648 9.30616 75.8521 10.2764 cv
75.8521 10.2764 75.4234 10.7725 74.9332 10.8272 cv
74.9332 5.19141 li
75.1578 5.21827 li
false sop
0 0 0 0 cmyk
f
0.1744 lw
75.1578 5.21827 mo
75.1578 5.21827 75.5445 5.38282 76.1148 4.93458 cv
76.6851 4.48584 77.5406 4.89405 77.5455 5.25196 cv
77.5494 10.0196 li
77.5494 10.0196 76.8648 9.30616 75.8521 10.2764 cv
75.8521 10.2764 75.4234 10.7725 74.9332 10.8272 cv
74.9332 5.19141 li
75.1578 5.21827 li
cp
true sop
0 0 0 1 cmyk
@
79.9488 5.21827 mo
79.9488 5.21827 79.5601 5.38282 78.9908 4.93458 cv
78.4175 4.48584 77.564 4.89405 77.5601 5.25196 cv
77.5601 10.0196 li
77.5601 10.0196 78.2418 9.30616 79.2525 10.2764 cv
79.2525 10.2764 79.6832 10.7725 80.1734 10.813 cv
80.1734 5.17872 li
79.9488 5.21827 li
false sop
0 0 0 0 cmyk
f
79.9488 5.21827 mo
79.9488 5.21827 79.5601 5.38282 78.9908 4.93458 cv
78.4175 4.48584 77.564 4.89405 77.5601 5.25196 cv
77.5601 10.0196 li
77.5601 10.0196 78.2418 9.30616 79.2525 10.2764 cv
79.2525 10.2764 79.6832 10.7725 80.1734 10.813 cv
80.1734 5.17872 li
79.9488 5.21827 li
cp
true sop
0 0 0 1 cmyk
@
74.3462 5.64747 mo
74.3462 5.64747 74.7906 5.65137 74.9332 5.19141 cv
74.9332 10.813 li
74.3462 11.3501 li
74.3462 5.64747 li
false sop
0 1 0.65 0 cmyk
f
0.1154 lw
74.3462 5.64747 mo
74.3462 5.64747 74.7906 5.65137 74.9332 5.19141 cv
74.9332 10.813 li
74.3462 11.3501 li
74.3462 5.64747 li
cp
true sop
0 0 0 1 cmyk
@
80.7613 5.63331 mo
80.7613 5.63331 80.315 5.63672 80.1734 5.17774 cv
80.1734 10.7994 li
80.7613 11.3375 li
80.7613 5.63331 li
false sop
0 1 0.65 0 cmyk
f
80.7613 5.63331 mo
80.7613 5.63331 80.315 5.63672 80.1734 5.17774 cv
80.1734 10.7994 li
80.7613 11.3375 li
80.7613 5.63331 li
cp
true sop
0 0 0 1 cmyk
@
77.2603 10.3213 mo
77.2603 10.3213 77.3404 10.1158 77.5044 10.0484 cv
false sop
0 0 0 0 cmyk
f
0.0872 lw
77.2603 10.3213 mo
77.2603 10.3213 77.3404 10.1158 77.5044 10.0484 cv
true sop
0 0 0 1 cmyk
@
77.8873 10.3624 mo
77.8873 10.3624 77.7896 10.1236 77.6128 10.0508 cv
false sop
0 0 0 0 cmyk
f
77.8873 10.3624 mo
77.8873 10.3624 77.7896 10.1236 77.6128 10.0508 cv
true sop
0 0 0 1 cmyk
@
85.2535 30.898 mo
85.4283 30.7413 86.1441 30.2007 85.3921 29.8296 cv
83.8873 29.0914 85.0933 28.1617 85.7085 28.0269 cv
86.3228 27.896 86.3414 27.5088 86.3414 27.5088 cv
86.3414 27.5088 86.3228 27.896 86.9175 28.0899 cv
87.5093 28.2886 88.6148 29.337 87.0416 29.9156 cv
86.2525 30.2061 87.0191 31.0577 87.2242 31.1661 cv
87.4302 31.2769 88.2476 31.6373 88.3355 30.8023 cv
88.5181 29.1358 89.8003 29.9507 90.1382 30.4825 cv
90.4722 31.0132 90.8433 30.9014 90.8433 30.9014 cv
90.8433 30.9014 90.4722 31.0132 90.4947 31.6421 cv
90.5103 32.2686 89.8892 33.7969 88.8062 32.5171 cv
88.2671 31.8765 87.8589 32.648 87.8238 32.8794 cv
87.7916 33.1104 87.6656 34.1334 88.48 33.9346 cv
90.1099 33.5342 89.7828 35.0201 89.4 35.5171 cv
89.0132 36.0142 89.2457 36.3208 89.2457 36.3208 cv
89.2457 36.3208 89.0132 36.0142 88.4312 36.2471 cv
87.8492 36.4781 86.3287 36.3843 87.1617 34.9283 cv
87.5767 34.2017 86.6119 34.1304 86.3814 34.0997 cv
86.2447 34.0914 li
86.0162 34.1402 85.2623 34.2774 85.73 34.9751 cv
86.6626 36.3682 85.1431 36.4058 84.5455 36.2129 cv
83.9478 36.024 83.5406 36.2378 83.5406 36.2378 cv
83.5406 36.2378 83.7505 35.9166 83.5298 35.5547 cv
83.2046 35.0191 82.6822 33.6255 84.3335 33.9126 cv
85.1617 34.0533 85.0933 32.9913 85.0455 32.7598 cv
85.0005 32.5674 li
84.8755 32.3672 84.4097 31.4888 83.9156 32.1656 cv
82.9244 33.5206 82.2183 32.17 82.1939 31.542 cv
82.1695 30.9136 81.7916 30.8292 81.7916 30.8292 cv
81.7916 30.8292 82.1695 30.9136 82.4673 30.3619 cv
82.7652 29.8086 83.9878 28.9073 84.2886 30.5562 cv
84.4341 31.3819 84.9966 31.1031 85.1949 30.9766 cv
85.2535 30.898 li
false sop
0 0 0 0 cmyk
f
0.2341 lw
85.2535 30.898 mo
85.4283 30.7413 86.1441 30.2007 85.3921 29.8296 cv
83.8873 29.0914 85.0933 28.1617 85.7085 28.0269 cv
86.3228 27.896 86.3414 27.5088 86.3414 27.5088 cv
86.3414 27.5088 86.3228 27.896 86.9175 28.0899 cv
87.5093 28.2886 88.6148 29.337 87.0416 29.9156 cv
86.2525 30.2061 87.0191 31.0577 87.2242 31.1661 cv
87.4302 31.2769 88.2476 31.6373 88.3355 30.8023 cv
88.5181 29.1358 89.8003 29.9507 90.1382 30.4825 cv
90.4722 31.0132 90.8433 30.9014 90.8433 30.9014 cv
90.8433 30.9014 90.4722 31.0132 90.4947 31.6421 cv
90.5103 32.2686 89.8892 33.7969 88.8062 32.5171 cv
88.2671 31.8765 87.8589 32.648 87.8238 32.8794 cv
87.7916 33.1104 87.6656 34.1334 88.48 33.9346 cv
90.1099 33.5342 89.7828 35.0201 89.4 35.5171 cv
89.0132 36.0142 89.2457 36.3208 89.2457 36.3208 cv
89.2457 36.3208 89.0132 36.0142 88.4312 36.2471 cv
87.8492 36.4781 86.3287 36.3843 87.1617 34.9283 cv
87.5767 34.2017 86.6119 34.1304 86.3814 34.0997 cv
86.2447 34.0914 li
86.0162 34.1402 85.2623 34.2774 85.73 34.9751 cv
86.6626 36.3682 85.1431 36.4058 84.5455 36.2129 cv
83.9478 36.024 83.5406 36.2378 83.5406 36.2378 cv
83.5406 36.2378 83.7505 35.9166 83.5298 35.5547 cv
83.2046 35.0191 82.6822 33.6255 84.3335 33.9126 cv
85.1617 34.0533 85.0933 32.9913 85.0455 32.7598 cv
85.0005 32.5674 li
84.8755 32.3672 84.4097 31.4888 83.9156 32.1656 cv
82.9244 33.5206 82.2183 32.17 82.1939 31.542 cv
82.1695 30.9136 81.7916 30.8292 81.7916 30.8292 cv
81.7916 30.8292 82.1695 30.9136 82.4673 30.3619 cv
82.7652 29.8086 83.9878 28.9073 84.2886 30.5562 cv
84.4341 31.3819 84.9966 31.1031 85.1949 30.9766 cv
85.2535 30.898 li
cp
true sop
0 0 0 1 cmyk
@
86.4292 33.1685 mo
86.8589 33.1919 87.2281 32.8248 87.2515 32.3521 cv
87.2789 31.8819 86.9507 31.48 86.5201 31.4561 cv
86.0914 31.4361 85.7222 31.7999 85.6978 32.272 cv
85.6744 32.7447 85.9996 33.1436 86.4292 33.1685 cv
false sop
0 0 0 0 cmyk
f
0.234001 lw
86.4292 33.1685 mo
86.8589 33.1919 87.2281 32.8248 87.2515 32.3521 cv
87.2789 31.8819 86.9507 31.48 86.5201 31.4561 cv
86.0914 31.4361 85.7222 31.7999 85.6978 32.272 cv
85.6744 32.7447 85.9996 33.1436 86.4292 33.1685 cv
cp
0 0 0 1 cmyk
@
86.2808 29.4512 mo
86.5708 29.4668 86.8169 29.2442 86.8345 28.9546 cv
86.8482 28.6641 86.6246 28.4175 86.3374 28.4029 cv
86.0445 28.3863 85.7994 28.6109 85.7828 28.899 cv
85.7681 29.189 85.9927 29.4366 86.2808 29.4512 cv
0 0 0 0 cmyk
f
86.2808 29.4512 mo
86.5708 29.4668 86.8169 29.2442 86.8345 28.9546 cv
86.8482 28.6641 86.6246 28.4175 86.3374 28.4029 cv
86.0445 28.3863 85.7994 28.6109 85.7828 28.899 cv
85.7681 29.189 85.9927 29.4366 86.2808 29.4512 cv
cp
0 0 0 1 cmyk
@
83.2339 31.8292 mo
83.522 31.8428 83.772 31.6197 83.7876 31.3316 cv
83.8023 31.0401 83.5787 30.7955 83.2886 30.7789 cv
82.9986 30.7637 82.7525 30.9859 82.7388 31.2764 cv
82.7193 31.5645 82.9439 31.814 83.2339 31.8292 cv
0 0 0 0 cmyk
f
83.2339 31.8292 mo
83.522 31.8428 83.772 31.6197 83.7876 31.3316 cv
83.8023 31.0401 83.5787 30.7955 83.2886 30.7789 cv
82.9986 30.7637 82.7525 30.9859 82.7388 31.2764 cv
82.7193 31.5645 82.9439 31.814 83.2339 31.8292 cv
cp
0 0 0 1 cmyk
@
89.5113 31.9908 mo
89.8003 32.0064 90.0503 31.7837 90.063 31.4937 cv
90.0787 31.2037 89.855 30.959 89.566 30.9419 cv
89.275 30.9268 89.0289 31.1495 89.0132 31.44 cv
88.9966 31.7291 89.2212 31.9771 89.5113 31.9908 cv
0 0 0 0 cmyk
f
89.5113 31.9908 mo
89.8003 32.0064 90.0503 31.7837 90.063 31.4937 cv
90.0787 31.2037 89.855 30.959 89.566 30.9419 cv
89.275 30.9268 89.0289 31.1495 89.0132 31.44 cv
88.9966 31.7291 89.2212 31.9771 89.5113 31.9908 cv
cp
0 0 0 1 cmyk
@
88.2632 35.7852 mo
88.5542 35.8008 88.8013 35.5792 88.8179 35.2876 cv
88.8326 35 88.608 34.752 88.3189 34.7359 cv
88.0298 34.7203 87.7818 34.9444 87.7662 35.2349 cv
87.7515 35.523 87.9732 35.7715 88.2632 35.7852 cv
0 0 0 0 cmyk
f
88.2632 35.7852 mo
88.5542 35.8008 88.8013 35.5792 88.8179 35.2876 cv
88.8326 35 88.608 34.752 88.3189 34.7359 cv
88.0298 34.7203 87.7818 34.9444 87.7662 35.2349 cv
87.7515 35.523 87.9732 35.7715 88.2632 35.7852 cv
cp
0 0 0 1 cmyk
@
84.4429 35.5855 mo
84.7349 35.5982 84.981 35.377 84.9966 35.087 cv
85.0113 34.7974 84.7886 34.5503 84.4996 34.5357 cv
84.2095 34.5186 83.9595 34.7447 83.9458 35.0328 cv
83.9302 35.3238 84.1529 35.5694 84.4429 35.5855 cv
0 0 0 0 cmyk
f
84.4429 35.5855 mo
84.7349 35.5982 84.981 35.377 84.9966 35.087 cv
85.0113 34.7974 84.7886 34.5503 84.4996 34.5357 cv
84.2095 34.5186 83.9595 34.7447 83.9458 35.0328 cv
83.9302 35.3238 84.1529 35.5694 84.4429 35.5855 cv
cp
0 0 0 1 cmyk
@
83.2388 31.4864 mo
83.4996 31.5 83.7212 31.2994 83.733 31.0391 cv
83.7505 30.7789 83.5474 30.5552 83.2857 30.543 cv
83.0269 30.5279 82.8033 30.7271 82.7906 30.9888 cv
82.7779 31.2481 82.9761 31.4737 83.2388 31.4864 cv
0 0 0 0 cmyk
f
89.5132 31.6495 mo
89.7759 31.6636 89.9976 31.4649 90.0123 31.2012 cv
90.024 30.9419 89.8218 30.7173 89.564 30.7056 cv
89.3052 30.6905 89.0816 30.8916 89.0679 31.1519 cv
89.0542 31.4141 89.2525 31.6358 89.5132 31.6495 cv
f
88.2544 35.5005 mo
88.5142 35.5132 88.7349 35.3121 88.7496 35.0503 cv
88.7623 34.793 88.563 34.5699 88.3013 34.5538 cv
88.0406 34.5425 87.8169 34.7393 87.8062 35.004 cv
87.7906 35.2657 87.9888 35.4854 88.2544 35.5005 cv
f
84.4488 35.3238 mo
84.7066 35.3404 84.9312 35.1382 84.9439 34.8765 cv
84.9566 34.6163 84.7584 34.3921 84.4957 34.3785 cv
84.2378 34.3643 84.0142 34.5684 84.0005 34.8267 cv
83.9869 35.087 84.1851 35.3111 84.4488 35.3238 cv
f
86.4517 32.7999 mo
86.8628 32.8233 87.2193 32.5044 87.2388 32.0904 cv
87.2603 31.6783 86.9419 31.3262 86.5308 31.3033 cv
86.1168 31.2828 85.7642 31.5982 85.7427 32.0132 cv
85.7212 32.4263 86.0367 32.7793 86.4517 32.7999 cv
f
98.4126 21.2002 mo
98.5884 21.044 99.3072 20.5035 98.5552 20.1319 cv
97.0494 19.3931 98.2544 18.4634 98.8687 18.3301 cv
99.4791 18.1958 99.5005 17.8121 99.5005 17.8121 cv
99.5005 17.8121 99.4791 18.1958 100.076 18.3946 cv
100.675 18.5889 101.776 19.6397 100.202 20.2183 cv
99.4166 20.5098 100.179 21.3609 100.385 21.4683 cv
100.591 21.5782 101.407 21.9395 101.497 21.106 cv
101.677 19.4385 102.963 20.2549 103.3 20.7847 cv
103.634 21.316 104.004 21.2037 104.004 21.2037 cv
104.004 21.2037 103.634 21.316 103.653 21.9449 cv
103.671 22.5733 103.052 24.1021 101.97 22.8194 cv
101.427 22.1788 101.02 22.9502 100.984 23.1817 cv
100.952 23.4136 100.827 24.4376 101.641 24.2374 cv
103.271 23.8399 102.941 25.3243 102.559 25.8194 cv
102.176 26.3165 102.405 26.6246 102.405 26.6246 cv
102.405 26.6246 102.176 26.3165 101.592 26.5499 cv
101.009 26.7828 99.4878 26.6851 100.321 25.232 cv
100.739 24.503 99.774 24.4341 99.5406 24.4024 cv
99.4058 24.3941 li
99.1753 24.4439 98.4234 24.5821 98.8902 25.2789 cv
99.8208 26.671 98.3033 26.7095 97.7066 26.5171 cv
97.107 26.3262 96.7027 26.542 96.7027 26.542 cv
96.7027 26.542 96.9107 26.2208 96.689 25.8584 cv
96.3638 25.3218 95.8404 23.9278 97.4957 24.2154 cv
98.3208 24.356 98.2564 23.293 98.2076 23.065 cv
98.1617 22.8677 li
98.0386 22.6709 97.5699 21.7916 97.0757 22.4683 cv
96.0845 23.8208 95.3785 22.4732 95.357 21.8453 cv
95.3306 21.2183 94.9546 21.1319 94.9546 21.1319 cv
94.9546 21.1319 95.3306 21.2183 95.6275 20.6656 cv
95.9253 20.1119 97.1509 19.2071 97.4488 20.8584 cv
97.5972 21.6832 98.1587 21.4029 98.355 21.2823 cv
98.4126 21.2002 li
f
0.2341 lw
98.4126 21.2002 mo
98.5884 21.044 99.3072 20.5035 98.5552 20.1319 cv
97.0494 19.3931 98.2544 18.4634 98.8687 18.3301 cv
99.4791 18.1958 99.5005 17.8121 99.5005 17.8121 cv
99.5005 17.8121 99.4791 18.1958 100.076 18.3946 cv
100.675 18.5889 101.776 19.6397 100.202 20.2183 cv
99.4166 20.5098 100.179 21.3609 100.385 21.4683 cv
100.591 21.5782 101.407 21.9395 101.497 21.106 cv
101.677 19.4385 102.963 20.2549 103.3 20.7847 cv
103.634 21.316 104.004 21.2037 104.004 21.2037 cv
104.004 21.2037 103.634 21.316 103.653 21.9449 cv
103.671 22.5733 103.052 24.1021 101.97 22.8194 cv
101.427 22.1788 101.02 22.9502 100.984 23.1817 cv
100.952 23.4136 100.827 24.4376 101.641 24.2374 cv
103.271 23.8399 102.941 25.3243 102.559 25.8194 cv
102.176 26.3165 102.405 26.6246 102.405 26.6246 cv
102.405 26.6246 102.176 26.3165 101.592 26.5499 cv
101.009 26.7828 99.4878 26.6851 100.321 25.232 cv
100.739 24.503 99.774 24.4341 99.5406 24.4024 cv
99.4058 24.3941 li
99.1753 24.4439 98.4234 24.5821 98.8902 25.2789 cv
99.8208 26.671 98.3033 26.7095 97.7066 26.5171 cv
97.107 26.3262 96.7027 26.542 96.7027 26.542 cv
96.7027 26.542 96.9107 26.2208 96.689 25.8584 cv
96.3638 25.3218 95.8404 23.9278 97.4957 24.2154 cv
98.3208 24.356 98.2564 23.293 98.2076 23.065 cv
98.1617 22.8677 li
98.0386 22.6709 97.5699 21.7916 97.0757 22.4683 cv
96.0845 23.8208 95.3785 22.4732 95.357 21.8453 cv
95.3306 21.2183 94.9546 21.1319 94.9546 21.1319 cv
94.9546 21.1319 95.3306 21.2183 95.6275 20.6656 cv
95.9253 20.1119 97.1509 19.2071 97.4488 20.8584 cv
97.5972 21.6832 98.1587 21.4029 98.355 21.2823 cv
98.4126 21.2002 li
cp
true sop
0 0 0 1 cmyk
@
99.5914 23.4708 mo
100.02 23.4922 100.391 23.1285 100.414 22.6568 cv
100.438 22.1827 100.11 21.7818 99.6802 21.7598 cv
99.2515 21.7369 98.8853 22.1011 98.858 22.5757 cv
98.8345 23.0474 99.1617 23.4478 99.5914 23.4708 cv
false sop
0 0 0 0 cmyk
f
0.234001 lw
99.5914 23.4708 mo
100.02 23.4922 100.391 23.1285 100.414 22.6568 cv
100.438 22.1827 100.11 21.7818 99.6802 21.7598 cv
99.2515 21.7369 98.8853 22.1011 98.858 22.5757 cv
98.8345 23.0474 99.1617 23.4478 99.5914 23.4708 cv
cp
0 0 0 1 cmyk
@
99.441 19.754 mo
99.732 19.7691 99.9761 19.5464 99.9947 19.2579 cv
100.011 18.9654 99.7867 18.7198 99.4957 18.7046 cv
99.2066 18.689 98.9605 18.9117 98.9449 19.2022 cv
98.9292 19.4913 99.149 19.7398 99.441 19.754 cv
0 0 0 0 cmyk
f
99.441 19.754 mo
99.732 19.7691 99.9761 19.5464 99.9947 19.2579 cv
100.011 18.9654 99.7867 18.7198 99.4957 18.7046 cv
99.2066 18.689 98.9605 18.9117 98.9449 19.2022 cv
98.9292 19.4913 99.149 19.7398 99.441 19.754 cv
cp
0 0 0 1 cmyk
@
96.3951 22.129 mo
96.6841 22.1465 96.9312 21.9234 96.9458 21.6343 cv
96.9615 21.3438 96.7398 21.0953 96.4498 21.0816 cv
96.1607 21.0655 95.9126 21.2891 95.898 21.5782 cv
95.8843 21.8682 96.1041 22.1163 96.3951 22.129 cv
0 0 0 0 cmyk
f
96.3951 22.129 mo
96.6841 22.1465 96.9312 21.9234 96.9458 21.6343 cv
96.9615 21.3438 96.7398 21.0953 96.4498 21.0816 cv
96.1607 21.0655 95.9126 21.2891 95.898 21.5782 cv
95.8843 21.8682 96.1041 22.1163 96.3951 22.129 cv
cp
0 0 0 1 cmyk
@
102.671 22.2945 mo
102.963 22.3091 103.209 22.086 103.225 21.7959 cv
103.24 21.5069 103.018 21.2603 102.729 21.2447 cv
102.438 21.2286 102.189 21.4527 102.176 21.7427 cv
102.161 22.0323 102.381 22.2798 102.671 22.2945 cv
0 0 0 0 cmyk
f
102.671 22.2945 mo
102.963 22.3091 103.209 22.086 103.225 21.7959 cv
103.24 21.5069 103.018 21.2603 102.729 21.2447 cv
102.438 21.2286 102.189 21.4527 102.176 21.7427 cv
102.161 22.0323 102.381 22.2798 102.671 22.2945 cv
cp
0 0 0 1 cmyk
@
101.426 26.0889 mo
101.715 26.105 101.964 25.8804 101.979 25.5909 cv
101.993 25.2999 101.771 25.0552 101.48 25.0381 cv
101.191 25.024 100.945 25.2457 100.93 25.5357 cv
100.914 25.8267 101.135 26.0733 101.426 26.0889 cv
0 0 0 0 cmyk
f
101.426 26.0889 mo
101.715 26.105 101.964 25.8804 101.979 25.5909 cv
101.993 25.2999 101.771 25.0552 101.48 25.0381 cv
101.191 25.024 100.945 25.2457 100.93 25.5357 cv
100.914 25.8267 101.135 26.0733 101.426 26.0889 cv
cp
0 0 0 1 cmyk
@
97.606 25.8887 mo
97.8931 25.9034 98.1421 25.6807 98.1568 25.3902 cv
98.1714 25.1006 97.9488 24.8536 97.6587 24.8384 cv
97.3687 24.8218 97.1216 25.044 97.107 25.3365 cv
97.0894 25.627 97.3169 25.8721 97.606 25.8887 cv
0 0 0 0 cmyk
f
97.606 25.8887 mo
97.8931 25.9034 98.1421 25.6807 98.1568 25.3902 cv
98.1714 25.1006 97.9488 24.8536 97.6587 24.8384 cv
97.3687 24.8218 97.1216 25.044 97.107 25.3365 cv
97.0894 25.627 97.3169 25.8721 97.606 25.8887 cv
cp
0 0 0 1 cmyk
@
96.399 21.7886 mo
96.6587 21.8023 96.8824 21.6006 96.896 21.3409 cv
96.9107 21.0796 96.7115 20.8584 96.4478 20.8443 cv
96.188 20.8311 95.9634 21.0303 95.9488 21.2901 cv
95.9371 21.5528 96.1392 21.7759 96.399 21.7886 cv
0 0 0 0 cmyk
f
102.676 21.9532 mo
102.938 21.9664 103.16 21.7662 103.173 21.5059 cv
103.188 21.2442 102.987 21.0215 102.727 21.0074 cv
102.465 20.9947 102.244 21.1949 102.228 21.4551 cv
102.216 21.7154 102.416 21.9395 102.676 21.9532 cv
f
101.415 25.8023 mo
101.673 25.8165 101.897 25.6158 101.91 25.356 cv
101.924 25.0943 101.724 24.8731 101.462 24.857 cv
101.202 24.8438 100.979 25.044 100.967 25.3047 cv
100.952 25.5669 101.152 25.7896 101.415 25.8023 cv
f
97.608 25.627 mo
97.8697 25.6421 98.0914 25.4405 98.105 25.1783 cv
98.1187 24.918 97.9205 24.6954 97.6558 24.6817 cv
97.398 24.6695 97.1753 24.8711 97.1597 25.1299 cv
97.147 25.3902 97.3472 25.6128 97.608 25.627 cv
f
99.6128 23.1045 mo
100.027 23.1236 100.378 22.8062 100.399 22.3921 cv
100.422 21.9791 100.104 21.627 99.691 21.607 cv
99.2789 21.5831 98.9244 21.9009 98.9029 22.316 cv
98.8834 22.7261 99.1998 23.0806 99.6128 23.1045 cv
f
86.2828 29.2256 mo
86.5435 29.2393 86.7662 29.0386 86.7798 28.7764 cv
86.7925 28.5176 86.5923 28.294 86.3316 28.2818 cv
86.0718 28.2676 85.8472 28.4668 85.8345 28.7286 cv
85.8228 28.9903 86.021 29.2105 86.2828 29.2256 cv
f
99.4429 19.5557 mo
99.7046 19.5699 99.9273 19.3697 99.94 19.1094 cv
99.9546 18.8487 99.7535 18.625 99.4937 18.6128 cv
99.232 18.5987 99.0103 18.7979 98.9947 19.0591 cv
98.982 19.3213 99.1812 19.545 99.4429 19.5557 cv
f
73.5787 19.4107 mo
73.8404 19.4239 74.0621 19.2237 74.0757 18.9634 cv
74.0914 18.7002 73.8912 18.4795 73.6294 18.4659 cv
73.3687 18.4517 73.146 18.6524 73.1324 18.9117 cv
73.1177 19.1739 73.3179 19.3975 73.5787 19.4107 cv
f
0.0871 lw
91.8931 11.2354 mo
92.48 10.6983 li
0 0 0 1 cmyk
@
97.7203 10.6983 mo
98.3111 11.2354 li
@
92.4712 5.16846 mo
92.4712 5.16846 92.2613 5.42774 92.0181 5.50733 cv
91.8931 5.53223 li
91.8931 11.2354 li
94.8404 10.2706 li
94.8404 10.2706 95.025 10.6089 95.4205 10.3033 cv
95.4556 10.2979 li
98.3111 11.2354 li
98.3111 5.53223 li
98.2613 5.52247 li
97.9683 5.4292 97.7203 5.10694 97.7203 5.10694 cv
0 0 0 0 cmyk
f
0.231 lw
92.4712 5.16846 mo
92.4712 5.16846 92.2613 5.42774 92.0181 5.50733 cv
91.8931 5.53223 li
91.8931 11.2354 li
94.8404 10.2706 li
94.8404 10.2706 95.025 10.6089 95.4205 10.3033 cv
95.4556 10.2979 li
98.3111 11.2354 li
98.3111 5.53223 li
98.2613 5.52247 li
97.9683 5.4292 97.7203 5.10694 97.7203 5.10694 cv
true sop
0 0 0 1 cmyk
@
92.7037 5.1045 mo
92.7037 5.1045 93.0943 5.26563 93.6617 4.81934 cv
94.2339 4.37061 95.0884 4.77784 95.0933 5.1377 cv
95.0962 9.90674 li
95.0962 9.90674 94.4136 9.18897 93.4 10.1607 cv
93.4 10.1607 92.9693 10.6578 92.48 10.7134 cv
92.48 5.07715 li
92.7037 5.1045 li
false sop
0 0 0 0 cmyk
f
0.1744 lw
92.7037 5.1045 mo
92.7037 5.1045 93.0943 5.26563 93.6617 4.81934 cv
94.2339 4.37061 95.0884 4.77784 95.0933 5.1377 cv
95.0962 9.90674 li
95.0962 9.90674 94.4136 9.18897 93.4 10.1607 cv
93.4 10.1607 92.9693 10.6578 92.48 10.7134 cv
92.48 5.07715 li
92.7037 5.1045 li
cp
true sop
0 0 0 1 cmyk
@
97.4957 5.1045 mo
97.4957 5.1045 97.1128 5.26563 96.5396 4.81934 cv
95.9673 4.37061 95.1128 4.77784 95.107 5.1377 cv
95.107 9.90674 li
95.107 9.90674 95.7876 9.18897 96.7994 10.1607 cv
96.7994 10.1607 97.2339 10.6578 97.7203 10.6983 cv
97.7203 5.06348 li
97.4957 5.1045 li
false sop
0 0 0 0 cmyk
f
97.4957 5.1045 mo
97.4957 5.1045 97.1128 5.26563 96.5396 4.81934 cv
95.9673 4.37061 95.1128 4.77784 95.107 5.1377 cv
95.107 9.90674 li
95.107 9.90674 95.7876 9.18897 96.7994 10.1607 cv
96.7994 10.1607 97.2339 10.6578 97.7203 10.6983 cv
97.7203 5.06348 li
97.4957 5.1045 li
cp
true sop
0 0 0 1 cmyk
@
91.8931 5.53223 mo
91.8931 5.53223 92.3374 5.53467 92.48 5.07715 cv
92.48 10.6983 li
91.8931 11.2354 li
91.8931 5.53223 li
false sop
0 1 0.65 0 cmyk
f
0.1154 lw
91.8931 5.53223 mo
91.8931 5.53223 92.3374 5.53467 92.48 5.07715 cv
92.48 10.6983 li
91.8931 11.2354 li
91.8931 5.53223 li
cp
true sop
0 0 0 1 cmyk
@
98.3072 5.51661 mo
98.3072 5.51661 97.8628 5.52149 97.7203 5.06202 cv
97.7203 10.6851 li
98.3072 11.2208 li
98.3072 5.51661 li
false sop
0 1 0.65 0 cmyk
f
98.3072 5.51661 mo
98.3072 5.51661 97.8628 5.52149 97.7203 5.06202 cv
97.7203 10.6851 li
98.3072 11.2208 li
98.3072 5.51661 li
cp
true sop
0 0 0 1 cmyk
@
94.8052 10.2051 mo
94.8052 10.2051 94.8863 10.001 95.0533 9.9336 cv
false sop
0 0 0 0 cmyk
f
0.0872 lw
94.8052 10.2051 mo
94.8052 10.2051 94.8863 10.001 95.0533 9.9336 cv
true sop
0 0 0 1 cmyk
@
95.4361 10.2476 mo
95.4361 10.2476 95.3384 10.0074 95.1617 9.93458 cv
false sop
0 0 0 0 cmyk
f
95.4361 10.2476 mo
95.4361 10.2476 95.3384 10.0074 95.1617 9.93458 cv
true sop
0 0 0 1 cmyk
@
3.29249 30.3633 mo
3.29249 35.711 li
3.29249 36.2139 3.33936 36.5059 3.43311 36.6817 cv
3.62061 37.044 4.00635 37.2432 4.54444 37.2432 cv
5.25831 37.2432 5.71436 36.8926 5.78467 36.296 cv
5.80811 36.1202 5.80811 36.003 5.80811 35.5704 cv
5.80811 30.3633 li
7.47022 30.3633 li
7.47022 35.8389 li
7.47022 36.6114 7.4585 36.7637 7.34131 37.1143 cv
7.13038 37.7579 6.33448 38.648 4.5796 38.648 cv
3.33936 38.648 2.42725 38.273 1.9712 37.5596 cv
1.70167 37.1377 1.61963 36.8106 1.61963 36.0264 cv
1.61963 30.3633 li
3.29249 30.3633 li
false sop
0 0 0 1 cmyk
f
10.0669 32.3526 mo
10.2076 32.5987 10.2896 32.8555 10.2896 33.1016 cv
10.523 32.9376 10.7222 32.7969 10.9791 32.6573 cv
11.2955 32.4932 11.7046 32.3995 12.0562 32.3995 cv
12.7232 32.3995 13.3082 32.75 13.4947 33.2657 cv
13.5767 33.4874 13.6119 33.7452 13.6119 34.1192 cv
13.6119 38.4957 li
12.0679 38.4957 li
12.0679 34.5987 li
12.0679 33.921 11.9507 33.7217 11.5416 33.7217 cv
11.2251 33.7217 10.816 33.9327 10.4527 34.2598 cv
10.4527 38.4957 li
8.88526 38.4957 li
8.88526 34.1543 li
8.88526 33.6397 8.81495 33.1485 8.67432 32.75 cv
10.0669 32.3526 li
f
16.6773 32.3643 mo
16.6773 38.4957 li
15.1099 38.4957 li
15.1099 32.6104 li
16.6773 32.3643 li
cp
16.8648 30.8555 mo
16.8648 31.3936 16.4322 31.8262 15.8941 31.8262 cv
15.3668 31.8262 14.9341 31.3936 14.9341 30.8555 cv
14.9341 30.3165 15.3785 29.8838 15.9175 29.8838 cv
16.4439 29.8838 16.8648 30.3165 16.8648 30.8555 cv
f
18.8414 32.3995 mo
19.7076 35.1026 li
19.8365 35.5 20.0113 36.1553 20.0933 36.5411 cv
20.1402 36.1905 20.2691 35.6172 20.4566 35.0206 cv
21.2632 32.5049 li
22.9019 32.5049 li
20.7134 38.4957 li
19.4146 38.4957 li
17.2388 32.5987 li
18.8414 32.3995 li
f
26.5289 34.8448 mo
26.5289 34.7745 li
26.5289 34.3301 26.482 34.0958 26.3423 33.8741 cv
26.19 33.6397 25.9673 33.5225 25.6519 33.5225 cv
25.0552 33.5225 24.7154 33.9903 24.7154 34.8213 cv
24.7154 34.8448 li
26.5289 34.8448 li
cp
28.0855 37.8282 mo
27.3951 38.3902 26.6695 38.6597 25.8267 38.6597 cv
24.107 38.6597 22.9957 37.4424 22.9957 35.5586 cv
22.9957 34.4825 23.2183 33.7686 23.7447 33.1836 cv
24.2359 32.6338 24.8326 32.376 25.6285 32.376 cv
26.3189 32.376 26.9742 32.6104 27.3599 33.0079 cv
27.9097 33.5694 28.1558 34.377 28.1558 35.629 cv
28.1558 35.7579 28.1558 35.8858 28.1558 35.9913 cv
24.6919 35.9913 li
24.6919 36.0381 li
24.6919 36.9629 25.149 37.4893 25.9556 37.4893 cv
26.4937 37.4893 26.9966 37.2901 27.4771 36.8926 cv
28.0855 37.8282 li
f
30.4253 32.3643 mo
30.566 32.6104 30.648 32.879 30.6714 33.2188 cv
30.8931 32.9141 31.2681 32.587 31.5601 32.4581 cv
31.689 32.3995 31.9 32.3643 32.0748 32.3643 cv
32.3091 32.3643 32.4146 32.3877 32.6597 32.4932 cv
32.2271 33.8741 li
32.0748 33.792 31.9458 33.7569 31.771 33.7569 cv
31.4195 33.7569 31.1041 33.921 30.8111 34.2598 cv
30.8111 38.4957 li
29.2437 38.4957 li
29.2437 34.4942 li
29.2437 33.6866 29.15 33.0782 29.021 32.7383 cv
30.4253 32.3643 li
f
37.0591 33.9551 mo
36.4625 33.6514 36.0298 33.5225 35.5845 33.5225 cv
35.1285 33.5225 34.8248 33.7569 34.8248 34.1075 cv
34.8248 34.4122 35.023 34.5752 35.5728 34.7159 cv
36.2984 34.9034 li
37.0357 35.0909 37.2818 35.3126 37.4918 35.5821 cv
37.7144 35.8624 37.8199 36.2022 37.8199 36.5997 cv
37.8199 37.8399 36.7896 38.6832 35.2574 38.6832 cv
34.5201 38.6832 33.7134 38.4488 32.8355 37.9922 cv
33.397 36.8458 li
33.8765 37.1377 34.7076 37.5245 35.3863 37.5245 cv
35.8306 37.5245 36.1812 37.2315 36.1812 36.8458 cv
36.1812 36.4356 35.8892 36.2256 35.2574 36.1084 cv
34.5552 35.9795 li
34.1578 35.9092 33.6666 35.629 33.4556 35.3711 cv
33.2447 35.1143 33.1168 34.6807 33.1168 34.295 cv
33.1168 33.125 34.0406 32.3409 35.4332 32.3409 cv
36.3921 32.3409 37.024 32.6338 37.5738 32.9024 cv
37.0591 33.9551 li
f
40.4634 32.3643 mo
40.4634 38.4957 li
38.896 38.4957 li
38.896 32.6104 li
40.4634 32.3643 li
cp
40.6509 30.8555 mo
40.6509 31.3936 40.2183 31.8262 39.6802 31.8262 cv
39.1529 31.8262 38.7203 31.3936 38.7203 30.8555 cv
38.7203 30.3165 39.1646 29.8838 39.7037 29.8838 cv
40.23 29.8838 40.6509 30.3165 40.6509 30.8555 cv
f
44.5699 33.5811 mo
43.564 33.5811 li
43.564 36.5879 li
43.564 37.3487 43.7046 37.5479 44.2427 37.5479 cv
44.3834 37.5479 44.523 37.5127 44.8042 37.4307 cv
45.0035 38.3668 li
44.5464 38.5542 44.1373 38.6363 43.7281 38.6363 cv
42.9322 38.6363 42.3003 38.2847 42.1128 37.7579 cv
42.0201 37.501 42.0084 37.3838 42.0084 36.834 cv
42.0084 33.5811 li
41.4117 33.5811 li
41.4117 32.5049 li
42.0084 32.5049 li
42.0084 31.92 42.0084 31.5333 42.066 31.0889 cv
43.6578 30.6915 li
43.5992 31.2413 43.564 31.8965 43.564 32.5049 cv
44.9683 32.5049 li
44.5699 33.5811 li
f
46.9918 32.4112 mo
48.0328 35.9092 li
48.1382 36.2725 48.3492 37.1495 48.3492 37.1495 cv
48.3492 37.1495 48.4664 36.4825 48.5367 36.1905 cv
48.5835 35.9913 48.6763 35.6407 48.7701 35.3594 cv
49.6714 32.5049 li
51.3208 32.5049 li
49.1451 38.5894 li
48.7349 39.7476 48.4312 40.2496 47.9986 40.566 cv
47.6001 40.8589 47.0855 41.0464 46.5474 41.1168 cv
46.0093 40.0855 li
46.3482 39.9937 46.7466 39.8531 46.98 39.689 cv
47.1558 39.5601 47.2964 39.396 47.4244 39.1968 cv
47.5767 38.9507 47.6236 38.8453 47.7642 38.4957 cv
47.3668 38.4957 li
47.1792 37.9336 46.8628 36.9971 46.8052 36.8106 cv
45.3892 32.5987 li
46.9918 32.4112 li
f
54.7935 34.1543 mo
54.688 34.4708 54.6294 34.8916 54.6294 35.4883 cv
54.6294 36.1788 54.6998 36.6934 54.8287 36.9971 cv
54.9693 37.3252 55.3208 37.4893 55.6236 37.4893 cv
56.3033 37.4893 56.5962 36.8809 56.5962 35.4649 cv
56.5962 34.6573 56.4908 34.1309 56.2798 33.8624 cv
56.1275 33.6631 55.8814 33.546 55.6002 33.546 cv
55.2271 33.546 54.9224 33.7803 54.7935 34.1543 cv
cp
57.6138 33.2891 mo
58.0923 33.8506 58.3033 34.5059 58.3033 35.4766 cv
58.3033 36.5059 58.0689 37.2081 57.5552 37.793 cv
57.0982 38.3082 56.5025 38.6246 55.5767 38.6246 cv
53.9507 38.6246 52.8863 37.4073 52.8863 35.5235 cv
52.8863 33.6397 53.9624 32.3877 55.5767 32.3877 cv
56.4322 32.3877 57.0982 32.6807 57.6138 33.2891 cv
f
61.6373 30.9717 mo
61.2408 30.9717 60.983 31.2178 60.983 31.6504 cv
60.983 32.5049 li
62.5044 32.5049 li
62.106 33.5811 li
60.9947 33.5811 li
60.9947 38.4957 li
59.4615 38.4957 li
59.4615 33.5811 li
58.9244 33.5811 li
58.9244 32.5049 li
59.4966 32.5049 li
59.4615 32.2588 59.438 31.9551 59.438 31.6856 cv
59.438 30.504 60.1412 29.8252 61.3697 29.8252 cv
61.8834 29.8252 62.3052 29.9307 62.7837 30.2002 cv
62.2818 31.171 li
61.9419 31.0069 61.8248 30.9717 61.6373 30.9717 cv
f
6.78516 66.0406 mo
6.24561 65.5962 5.68165 65.3921 5.04542 65.3921 cv
4.55323 65.3921 4.13331 65.5367 3.84522 65.8121 cv
3.28126 66.3521 3.13721 67.2525 3.13721 68.5005 cv
3.13721 69.689 3.34131 70.4566 3.76124 70.8765 cv
4.07325 71.1763 4.5293 71.3443 5.06934 71.3443 cv
5.44141 71.3443 5.74122 71.2847 6.01758 71.1402 cv
6.01758 69.2437 li
4.74561 69.2437 li
4.5293 67.8765 li
7.75733 67.8765 li
7.75733 71.8609 li
6.90528 72.3648 5.96924 72.605 4.98536 72.605 cv
3.73731 72.605 2.81348 72.1968 2.14161 71.3326 cv
1.5293 70.5523 1.25342 69.6636 1.25342 68.4166 cv
1.25342 66.6519 1.82959 65.4039 2.99317 64.6246 cv
3.60547 64.2164 4.2295 64.0367 5.02149 64.0367 cv
6.0293 64.0367 6.94141 64.3609 7.67334 64.9957 cv
6.78516 66.0406 li
f
10.6856 65.2242 mo
10.6856 70.0123 li
10.6856 71.0679 10.6973 71.2124 10.7935 71.3804 cv
10.8536 71.4878 10.9854 71.5484 11.1172 71.5484 cv
11.1773 71.5484 11.2134 71.5484 11.2974 71.525 cv
11.5733 72.4839 li
11.2974 72.5923 10.9615 72.6519 10.6133 72.6519 cv
9.9292 72.6519 9.37745 72.3277 9.18555 71.8121 cv
9.06544 71.5005 9.04151 71.3082 9.04151 70.4322 cv
9.04151 65.8482 li
9.04151 65.0445 9.01758 64.5523 8.95752 63.9996 cv
10.6016 63.6285 li
10.6612 63.9644 10.6856 64.3609 10.6856 65.2242 cv
f
15.3653 69.8199 mo
14.2491 69.8199 13.8653 70.025 13.8653 70.7564 cv
13.8653 71.2359 14.1651 71.5601 14.5733 71.5601 cv
14.8731 71.5601 15.1729 71.4039 15.4131 71.1402 cv
15.4371 69.8199 li
15.3653 69.8199 li
cp
13.2769 66.5923 mo
13.877 66.3404 14.3931 66.232 14.9571 66.232 cv
15.9893 66.232 16.6973 66.6168 16.9371 67.3003 cv
17.021 67.5523 17.0572 67.7437 17.045 68.4039 cv
17.0093 70.4683 li
17.0093 70.5044 17.0093 70.5406 17.0093 70.5757 cv
17.0093 71.2359 17.1172 71.4878 17.585 71.8365 cv
16.733 72.8199 li
16.3614 72.6636 16.025 72.3882 15.8692 72.0757 cv
15.7491 72.1968 15.6172 72.316 15.4971 72.4 cv
15.1973 72.6168 14.7652 72.7359 14.2613 72.7359 cv
12.8931 72.7359 12.149 72.0406 12.149 70.816 cv
12.149 69.3765 13.1451 68.7046 15.1011 68.7046 cv
15.2212 68.7046 15.3292 68.7046 15.461 68.7164 cv
15.461 68.4644 li
15.461 67.7808 15.3292 67.5523 14.7413 67.5523 cv
14.2251 67.5523 13.625 67.8042 12.9649 68.2476 cv
12.2813 67.0962 li
12.605 66.8921 12.8453 66.773 13.2769 66.5923 cv
f
22.169 67.8521 mo
21.5572 67.5406 21.1128 67.4078 20.6568 67.4078 cv
20.189 67.4078 19.877 67.648 19.877 68.0084 cv
19.877 68.3199 20.0811 68.4878 20.6451 68.6324 cv
21.3892 68.8238 li
22.1451 69.0162 22.397 69.2437 22.6128 69.521 cv
22.8409 69.8082 22.9493 70.1558 22.9493 70.564 cv
22.9493 71.8365 21.8931 72.7007 20.3208 72.7007 cv
19.565 72.7007 18.7369 72.4605 17.837 71.9918 cv
18.4131 70.816 li
18.9048 71.1168 19.7569 71.5123 20.4532 71.5123 cv
20.9092 71.5123 21.2691 71.2124 21.2691 70.816 cv
21.2691 70.396 20.9688 70.1802 20.3208 70.0601 cv
19.6011 69.9283 li
19.1929 69.857 18.689 69.5679 18.4732 69.3042 cv
18.2569 69.0406 18.125 68.5962 18.125 68.2007 cv
18.125 67.0005 19.0728 66.1968 20.501 66.1968 cv
21.4849 66.1968 22.1329 66.4957 22.6968 66.773 cv
22.169 67.8521 li
f
25.2413 68.3443 mo
25.2413 68.9683 25.625 69.2203 26.189 69.2203 cv
26.8252 69.2203 27.1729 68.9078 27.1729 68.3443 cv
27.1729 67.7681 26.813 67.4322 26.2012 67.4322 cv
25.5889 67.4322 25.2413 67.7681 25.2413 68.3443 cv
cp
30.0171 67.0367 mo
29.669 67.3609 29.3331 67.4918 28.8892 67.4918 cv
28.733 67.4918 28.565 67.4683 28.4693 67.4566 cv
28.709 67.7437 28.8292 68.0562 28.8292 68.4644 cv
28.8292 69.521 27.8692 70.2886 26.5611 70.2886 cv
26.4888 70.2886 26.441 70.2886 26.3208 70.2769 cv
25.9131 70.4683 25.6851 70.6128 25.6851 70.7808 cv
25.6851 70.8648 25.7808 70.9244 25.9493 70.9244 cv
26.813 70.9361 li
27.7491 70.9488 28.2413 71.0923 28.6729 71.4878 cv
29.0333 71.8238 29.2012 72.2437 29.2012 72.7964 cv
29.2012 73.3121 29.045 73.7085 28.709 74.0679 cv
28.169 74.6441 27.2452 74.8609 26.2852 74.8609 cv
25.4092 74.8609 24.5088 74.7164 23.9571 74.2007 cv
23.6211 73.8882 23.4532 73.5289 23.4532 73.1089 cv
23.4532 72.773 23.5372 72.605 23.5972 72.4839 cv
25.085 72.4839 li
25.025 72.6285 25.0132 72.7124 25.0132 72.8804 cv
25.0132 73.3726 25.4209 73.6363 26.1651 73.6363 cv
26.5733 73.6363 26.921 73.5884 27.1729 73.4322 cv
27.4131 73.2886 27.5689 73.0601 27.5689 72.8082 cv
27.5689 72.2564 27.0772 72.0884 26.441 72.0757 cv
25.7569 72.064 li
25.0372 72.0523 24.5689 71.9918 24.2808 71.8726 cv
23.9932 71.7642 23.813 71.4878 23.813 71.0679 cv
23.813 70.6724 23.9332 70.3003 24.941 70.0367 cv
24.0528 69.8082 23.6211 69.2437 23.6211 68.3316 cv
23.6211 67.0718 24.6412 66.2564 26.2129 66.2564 cv
26.5611 66.2564 26.8731 66.3042 27.3169 66.4117 cv
27.6529 66.4957 27.8692 66.5445 28.0733 66.5445 cv
28.5171 66.5445 28.9732 66.3521 29.3453 66.0162 cv
30.0171 67.0367 li
f
31.8409 68.0562 mo
31.733 68.3804 31.6729 68.8121 31.6729 69.4244 cv
31.6729 70.1324 31.7452 70.6597 31.877 70.9722 cv
32.021 71.3082 32.3809 71.4761 32.6929 71.4761 cv
33.3892 71.4761 33.689 70.8521 33.689 69.4 cv
33.689 68.5718 33.5811 68.0328 33.3653 67.7564 cv
33.209 67.5523 32.9571 67.4322 32.669 67.4322 cv
32.2852 67.4322 31.9732 67.6724 31.8409 68.0562 cv
cp
34.733 67.1685 mo
35.2251 67.7437 35.441 68.4166 35.441 69.4117 cv
35.441 70.4683 35.2012 71.189 34.6729 71.7886 cv
34.2051 72.316 33.5928 72.6402 32.6451 72.6402 cv
30.9771 72.6402 29.8848 71.3921 29.8848 69.4605 cv
29.8848 67.5289 30.9888 66.2437 32.6451 66.2437 cv
33.521 66.2437 34.2051 66.5445 34.733 67.1685 cv
f
37.1573 66.2925 mo
37.6612 68.6558 li
37.8174 69.3648 38.0093 70.564 38.0093 70.564 cv
38.0093 70.564 38.1651 69.4722 38.4532 68.4283 cv
39.0293 66.3648 li
40.5411 66.3648 li
41.0333 68.3921 li
41.3091 69.5328 41.4893 70.564 41.4893 70.564 cv
41.5254 70.3003 41.6573 69.3404 41.8252 68.5601 cv
42.293 66.3648 li
43.9493 66.3648 li
42.1973 72.5084 li
40.7212 72.5084 li
40.169 70.396 li
40.0372 69.9039 39.8931 69.316 39.8213 68.9078 cv
39.773 68.6207 39.7613 68.5367 39.7251 68.2964 cv
39.689 68.5601 39.6773 68.6441 39.5811 69.0884 cv
39.461 69.6168 39.1973 70.6724 39.0533 71.2486 cv
38.7413 72.5084 li
37.2413 72.5084 li
35.5611 66.4722 li
37.1573 66.2925 li
f
82.6744 46.9234 mo
80.8814 52.6011 li
80.6939 53.1597 80.5084 53.857 80.4166 54.2525 cv
80.2779 54.8355 80.0435 56.1617 80.0435 56.1617 cv
80.0435 56.1617 79.6255 54.4166 79.4166 53.6949 cv
77.3453 46.7359 li
74.1568 47.1089 li
76.9732 55.4869 li
77.0884 55.8589 77.7173 57.7203 78.0884 58.8374 cv
78.8814 58.8374 li
78.6011 59.5347 78.5084 59.7437 78.2056 60.233 cv
77.9488 60.6285 77.6705 60.9546 77.3218 61.2105 cv
76.857 61.5367 76.065 61.816 75.3902 62.0015 cv
76.4605 64.0503 li
77.5318 63.9097 78.5552 63.5367 79.3462 62.9566 cv
80.2076 62.3277 80.8121 61.3257 81.6275 59.025 cv
85.9556 46.9234 li
82.6744 46.9234 li
cp
66.5953 55.7652 mo
65.8277 56.44 65.1763 56.7437 64.4546 56.7437 cv
63.9195 56.7437 63.3843 56.4869 63.0582 56.0679 cv
62.6626 55.5562 62.4537 54.6246 62.4537 53.066 cv
62.4537 50.274 63.0826 49.064 64.4771 49.064 cv
65.0591 49.064 65.7349 49.4126 66.3628 49.9957 cv
67.8755 47.9468 li
67.3638 47.5054 67.1548 47.3433 66.7115 47.1089 cv
66.0591 46.7613 65.1998 46.5738 64.4078 46.5738 cv
63.4068 46.5738 62.2447 46.9234 61.4517 47.4585 cv
60.0572 48.4136 59.0093 50.2281 59.0093 52.9722 cv
59.0093 56.8365 60.9175 59.1158 64.1978 59.1158 cv
65.3384 59.1158 66.2701 58.8599 67.108 58.3716 cv
67.5269 58.1158 67.7349 57.9527 68.1998 57.4878 cv
66.7818 55.6031 li
66.5953 55.7652 li
cp
101.636 51.5308 mo
101.636 49.8785 102.31 48.9478 103.497 48.9478 cv
104.126 48.9478 104.567 49.1802 104.87 49.646 cv
105.149 50.0884 105.241 50.5533 105.241 51.4371 cv
105.241 51.5777 li
101.636 51.5777 li
101.636 51.5308 li
cp
108.476 53.857 mo
108.476 53.648 108.476 53.3921 108.476 53.1373 cv
108.476 50.646 107.987 49.0406 106.894 47.9253 cv
106.126 47.1334 104.823 46.6666 103.45 46.6666 cv
101.868 46.6666 100.683 47.1792 99.7046 48.274 cv
98.6568 49.4371 98.2154 50.855 98.2154 52.9966 cv
98.2154 56.7437 100.425 59.1626 103.847 59.1626 cv
105.522 59.1626 106.964 58.6275 108.336 57.5113 cv
107.126 55.65 li
106.174 56.44 105.173 56.8365 104.103 56.8365 cv
102.496 56.8365 101.589 55.7886 101.589 53.9507 cv
101.589 53.857 li
108.476 53.857 li
cp
53.8672 46.5982 mo
52.6578 46.5982 51.3077 47.1089 50.4932 47.8775 cv
50.4932 47.7378 50.5401 47.2496 50.5401 46.8765 cv
50.5401 42.9195 li
47.3672 42.9195 li
47.3721 43.1011 47.3755 44.8765 47.3755 45.0621 cv
47.3755 58.8374 li
50.5401 58.8374 li
50.5401 50.2984 li
51.2378 49.6695 52.2383 49.2046 53.0069 49.2046 cv
53.8907 49.2046 54.2168 49.646 54.2168 50.8335 cv
54.2168 58.8374 li
57.2642 58.8374 li
57.2642 50.5064 li
57.2642 49.3668 57.1949 48.9712 56.9615 48.2964 cv
56.5894 47.2496 55.3804 46.5982 53.8672 46.5982 cv
cp
93.1177 55.7418 mo
92.815 56.1148 92.1646 56.5093 91.5826 56.5093 cv
89.9537 56.5093 89.4185 55.6724 89.4185 53.1119 cv
89.4185 50.4605 90.024 49.2974 91.4205 49.2974 cv
91.9771 49.2974 92.5357 49.5533 93.1177 50.064 cv
93.1177 55.7418 li
cp
96.1666 42.9195 mo
93.0728 42.9195 li
93.0728 45.7134 li
93.0728 46.4117 93.1177 47.2261 93.1646 47.482 cv
92.5845 47.0162 91.9087 46.8072 91.0474 46.8072 cv
88.022 46.8072 85.9517 49.3668 85.9517 53.0894 cv
85.9517 56.7886 87.8599 59.1402 90.8853 59.1402 cv
91.9546 59.1402 92.8628 58.814 93.6294 58.1392 cv
93.6773 58.4644 93.7252 58.6519 93.8169 58.8374 cv
96.608 58.8374 li
96.399 58.3716 96.1666 57.4175 96.1666 54.4859 cv
96.1666 42.9195 li
cp
73.2955 56.9761 mo
73.0396 56.9761 72.7847 56.8589 72.6666 56.65 cv
72.481 56.3248 72.4585 56.0445 72.4585 53.9966 cv
72.4585 44.7125 li
72.4585 44.2906 72.4556 43.2388 72.4498 42.9195 cv
69.2134 42.9195 li
69.2544 43.5767 69.271 44.9839 69.271 45.9234 cv
69.271 54.8121 li
69.271 56.5093 69.3169 56.8824 69.5494 57.4878 cv
69.9224 58.4878 70.9927 59.1158 72.3189 59.1158 cv
72.9937 59.1158 73.6451 58.9996 74.1802 58.7906 cv
73.6451 56.9292 li
73.482 56.9761 73.4136 56.9761 73.2955 56.9761 cv
cp
44.4664 56.9517 mo
43.3951 56.9517 43.1168 56.5562 43.1168 55.0445 cv
43.1168 49.064 li
45.1172 49.064 li
45.9092 46.9234 li
43.1168 46.9234 li
43.1168 46.1285 43.149 45.2984 43.2032 44.5074 cv
40.0928 44.5074 li
40.023 45.2369 40.022 45.939 40.022 46.9234 cv
38.836 46.9234 li
38.836 49.064 li
40.022 49.064 li
40.022 55.5328 li
40.022 56.6275 40.045 56.8589 40.232 57.3707 cv
40.6036 58.4185 41.8599 59.1158 43.4419 59.1158 cv
44.2564 59.1158 45.0718 58.9537 45.9786 58.5816 cv
45.5835 56.7203 li
45.0245 56.8824 44.7457 56.9517 44.4664 56.9517 cv
cp
8.09815 48.9253 mo
6.14307 48.3902 li
4.79346 48.0171 4.35157 47.5972 4.35157 46.7613 cv
4.35157 45.6675 5.28272 44.899 6.60889 44.899 cv
7.81836 44.899 8.9126 45.2486 10.378 46.1324 cv
11.9146 43.8062 li
10.4952 42.7808 8.49366 42.1773 6.51612 42.1773 cv
3.09522 42.1773 0.722168 44.2242 0.722168 47.1792 cv
0.722168 48.0875 0.954102 48.9253 1.39649 49.646 cv
1.97803 50.6236 2.97852 51.2515 4.58399 51.6939 cv
6.37598 52.1832 li
7.81836 52.5777 8.49366 53.23 8.49366 54.2769 cv
8.49366 55.7183 7.51612 56.4869 5.65479 56.4869 cv
4.0254 56.4869 2.72315 55.9752 1.21045 55.1832 cv
0 57.7203 li
1.62891 58.6519 3.67725 59.1861 5.51465 59.1861 cv
9.54102 59.1861 12.1934 57.022 12.1934 53.7418 cv
12.1934 51.3453 10.7505 49.646 8.09815 48.9253 cv
cp
27.0152 46.6441 mo
26.667 46.6441 26.2481 46.7144 25.9913 46.8306 cv
25.4097 47.0865 24.6651 47.7378 24.2232 48.3433 cv
24.1763 47.6675 24.0137 47.1334 23.7339 46.6441 cv
20.9424 47.3882 li
21.1983 48.063 21.3848 49.273 21.3848 50.8804 cv
21.3848 58.8374 li
24.5025 58.8374 li
24.5025 50.4136 li
25.0845 49.7398 25.7125 49.4126 26.4107 49.4126 cv
26.7598 49.4126 27.0152 49.482 27.3184 49.646 cv
28.1792 46.9 li
27.691 46.691 27.4815 46.6441 27.0152 46.6441 cv
cp
18.4756 56.9517 mo
17.4043 56.9517 17.126 56.5562 17.126 55.0445 cv
17.126 49.064 li
19.1275 49.064 li
19.9185 46.9234 li
17.126 46.9234 li
17.126 46.1285 17.1587 45.2984 17.2125 44.5074 cv
14.1036 44.5074 li
14.0318 45.2369 14.0308 45.939 14.0308 46.9234 cv
12.8448 46.9234 li
12.8448 49.064 li
14.0308 49.064 li
14.0308 55.5328 li
14.0308 56.6275 14.0542 56.8589 14.2408 57.3707 cv
14.6133 58.4185 15.8697 59.1158 17.4522 59.1158 cv
18.2657 59.1158 19.0806 58.9537 19.9888 58.5816 cv
19.5928 56.7203 li
19.0342 56.8824 18.7554 56.9517 18.4756 56.9517 cv
cp
34.3453 56.1851 mo
33.8794 56.6968 33.2974 56.9986 32.7164 56.9986 cv
31.9244 56.9986 31.3428 56.3707 31.3428 55.441 cv
31.3428 54.021 32.0879 53.6246 34.2515 53.6246 cv
34.3907 53.6246 li
34.3453 56.1851 li
cp
37.439 55.0904 mo
37.439 55.021 37.439 54.9527 37.439 54.8814 cv
37.5088 50.8804 li
37.5328 49.6001 37.4634 49.2271 37.3003 48.7378 cv
36.8345 47.4117 35.462 46.6666 33.4605 46.6666 cv
32.3663 46.6666 31.3668 46.8765 30.2027 47.3648 cv
29.3653 47.7144 28.9 47.9468 28.2715 48.3433 cv
29.5982 50.5777 li
30.878 49.7154 32.0416 49.2271 33.0416 49.2271 cv
34.1812 49.2271 34.438 49.6695 34.438 50.9957 cv
34.438 51.4839 li
34.1812 51.4615 33.9722 51.4615 33.7388 51.4615 cv
29.9473 51.4615 28.0157 52.7642 28.0157 55.5562 cv
28.0157 57.9292 29.4581 59.2798 32.1109 59.2798 cv
33.0879 59.2798 33.9258 59.0464 34.5084 58.6275 cv
34.7408 58.4644 34.9971 58.232 35.2291 57.9996 cv
35.5313 58.605 36.1827 59.1402 36.9048 59.4429 cv
38.5562 57.5328 li
37.649 56.8589 37.439 56.3707 37.439 55.0904 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

%%EndDocument
 @endspecial 8098 3566 a
 currentpoint currentpoint translate 1 0.8 div 1 0.8 div scale neg
exch neg exch translate
 8098 3566 a Black BlueViolet
4941 4242 a Fp(\017)p Black 5044 4242 a
 0. setgray
 5044 4242 a Black
5044 4242 a
 0. setgray
 5044 4242 a 102 w Fq(Char)s(les)g(A)-6 b(ugarde)5146
4489 y(School)59 b(of)h(Engineer)s(ing,)f(Univ)-5 b(ersity)59
b(of)h(Durham,)e(England)p Black BlueViolet 4941 4825
a Fp(\017)p Black 5044 4825 a
 0. setgray
 5044 4825 a Black 5044
4825 a
 0. setgray
 5044 4825 a 102 w Fq(Jochen)g(Staudacher)4780
5030 y
 0 setgray
 4780 5030 a 10245 5222 a
 0 setgray
 10245 5222 a 9332 5736
a
 0. setgray
 9332 5736 a Fo(SIAM)20 b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h
(\226)e(p)n(.1/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 2 2
TeXDict begin 2 1 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 2/View [ /XYZ null null null ] /Title (Simulations in Geomechanics)
/OUT pdfmark end
 5001
3450 a BlueViolet 5617 1393 a Fr(Sim)-6 b(ulations)77
b(in)f(Geomec)m(hanics)p Black 9526 1393 a
 0 setgray
 9526 1393
a 4781 1882 a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1789
a Fp(\017)p Black 5044 1789 a
 0. setgray
 5044 1789 a Black 5044
1789 a
 0. setgray
 5044 1789 a 102 w Fq(soil-str)s(ucture)60 b(inter)n(action)f
(prob)l(lems)p Black BlueViolet 4941 2329 a Fp(\017)p
Black 5044 2329 a
 0. setgray
 5044 2329 a Black 5044 2329 a
 0. setgray
 5044
2329 a 102 w Fq(large)g(3D)h(sim)n(ulations)f(of)g(complicated)f
(geometr)s(ies)p Black BlueViolet 4941 2871 a Fp(\017)p
Black 5044 2871 a
 0. setgray
 5044 2871 a Black 5044 2871 a
 0. setgray
 5044
2871 a 102 w Fq(soil)g(beha)l(viour)d(dominated)h(b)l(y)g(irreco)m(v)-5
b(er)n(ab)l(le)55 b(def)-6 b(or)5 b(mations:)p Red 5146
3115 a(elasto-plastic)p Black 6392 3115 a
 0. setgray
 6392 3115 a
60 w Fq(models)p Black BlueViolet 4941 3655 a Fp(\017)p
Black 5044 3655 a
 0. setgray
 5044 3655 a Black 5044 3655 a
 0. setgray
 5044
3655 a 102 w Fq(satur)n(ated)59 b(soils)m(,)g(undr)n(ained)f
(\(incompressib)l(le\))p Black BlueViolet 4941 4195 a
Fp(\017)p Black 5044 4195 a
 0. setgray
 5044 4195 a Black 5044 4195
a
 0. setgray
 5044 4195 a 102 w Fq(pre)-6 b(vious)58 b(w)n(or)s(k)h(in)h(str)s
(uctur)n(al)f(engineer)s(ing:)p OliveGreen 73 w(elastic)p
Black 9538 4195 a
 0. setgray
 9538 4195 a 59 w Fq(models)p Black
BlueViolet 4941 4735 a Fp(\017)p Black 5044 4735 a
 0. setgray
 5044
4735 a Black 5044 4735 a
 0. setgray
 5044 4735 a 102 w Fq(most)g(soil)h(models)e
(assume)g(elastic)i(beha)l(viour)d(at)j(small)5146 4978
y(str)n(ains)p Black BlueViolet 4941 5518 a Fp(\017)p
Black 5044 5518 a
 0. setgray
 5044 5518 a Black 5044 5518 a
 0. setgray
 5044
5518 a BlueViolet 102 w Fq(AIM:)p Black 5584 5518 a
 0. setgray
 5584
5518 a 61 w Fq(study)e(eff)-6 b(ects)59 b(of)h(adding)e(plasticity)4781
5767 y
 0 setgray
 4781 5767 a 10245 5222 a
 0 setgray
 10245 5222 a 9332 5736
a
 0. setgray
 9332 5736 a Fo(SIAM)20 b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h
(\226)e(p)n(.2/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 3 3
TeXDict begin 3 2 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 3/View [ /XYZ null null null ] /Title (Linear elasticity: Lam\'{e} equation)
/OUT pdfmark end
 5001
3450 a BlueViolet 5466 1370 a Fr(Linear)78 b(elasticity:)93
b(Lam\351)77 b(equation)p Black 9678 1370 a
 0 setgray
 9678 1370
a 4781 1882 a
 0. setgray
 4781 1882 a Black Black 5545 1867 a
 0. setgray
 5545
1867 a 167 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 7.37735
neg 220.64273 13.37735 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25 setgray
gsave fill grestore stroke grestore gsave 1. setgray gsave fill grestore
stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial OliveGreen
5772 1877 a Fp(\000)p Fn(\()p Fm(\025)45 b Fn(+)h Fm(\026)p
Fn(\))p Fp(r)34 b Fn(\()p Fp(r)46 b(\001)g Fl(u)p Fn(\))g
Fp(\000)g Fm(\026)p Fp(r)7940 1803 y Fk(2)8028 1877 y
Fl(u)57 b Fn(=)h Fl(f)235 b Fq(in)213 b Fn(\012)p Black
9320 1877 a
 0. setgray
 9320 1877 a Black BlueViolet 4941 2455 a
Fp(\017)p Black 5044 2455 a
 0. setgray
 5044 2455 a Black 5044 2455
a
 0. setgray
 5044 2455 a 102 w Fq(displacement)58 b Fl(u)p Fn(\()p
Fm(x;)34 b(y)7 b Fn(\))58 b(=)g([)p Fm(u)7505 2486 y
Fk(1)7593 2455 y Fm(;)34 b(u)7798 2486 y Fk(2)7887 2455
y Fn(])7943 2380 y Fj(T)8067 2455 y Fq(,)60 b(body)e(f)-6
b(orce)59 b Fl(f)21 b Fn(\()p Fm(x;)34 b(y)7 b Fn(\))p
Black BlueViolet 4941 2795 a Fp(\017)p Black 5044 2795
a
 0. setgray
 5044 2795 a Black 5044 2795 a
 0. setgray
 5044 2795 a Red 102 w
Fq(Lam\351)59 b(constants)p Black 6655 2795 a
 0. setgray
 6655 2795
a 58 w Fm(\025)g Fq(and)g Fm(\026)p Black Black 6280
3575 a
 0. setgray
 6280 3575 a 167 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 6.8
neg 135.28447 12.8 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25 setgray
gsave fill grestore stroke grestore gsave 1. setgray gsave fill grestore
stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
OliveGreen 59 w Fp(\000r)46 b(\001)h Fl(S)p Fn(\()p Fl(u)p
Fn(\))57 b(=)g Fl(f)235 b Fq(in)214 b Fn(\012)p Black
8567 3575 a
 0. setgray
 8567 3575 a Black BlueViolet 4941 4333 a
Fp(\017)p Black 5044 4333 a
 0. setgray
 5044 4333 a Black 5044 4333
a
 0. setgray
 5044 4333 a 102 w Fq(linear)s(ised)p Red 59 w(str)n(ain)p
Black 6642 4333 a
 0. setgray
 6642 4333 a 60 w Fl(E)p Fn(\()p Fl(u)p
Fn(\))56 b(=)7434 4252 y Fk(1)p 7434 4285 80 9 v 7434
4404 a(2)7568 3980 y Fi(")7998 4180 y Fn(2)8120 4099
y Fj(@)9 b(u)8305 4116 y Fh(1)p 8120 4132 257 9 v 8156
4251 a Fj(@)g(x)8813 4099 y(@)g(u)8998 4116 y Fh(2)p
8813 4132 V 8849 4251 a Fj(@)g(x)9136 4180 y Fn(+)9360
4099 y Fj(@)g(u)9545 4116 y Fh(1)p 9360 4132 V 9399 4251
a Fj(@)g(y)7796 4389 y(@)g(u)7981 4406 y Fh(2)p 7796
4423 V 7832 4542 a Fj(@)g(x)8119 4470 y Fn(+)8343 4389
y Fj(@)g(u)8528 4406 y Fh(1)p 8343 4423 V 8382 4542 a
Fj(@)g(y)9015 4470 y Fn(2)9137 4389 y Fj(@)g(u)9322 4406
y Fh(2)p 9137 4423 V 9176 4542 a Fj(@)g(y)9723 3980 y
Fi(#)p Black BlueViolet 4941 4877 a Fp(\017)p Black 5044
4877 a
 0. setgray
 5044 4877 a Black 5044 4877 a
 0. setgray
 5044 4877 a Red
102 w Fq(stress)p Black 5775 4877 a
 0. setgray
 5775 4877 a 59 w
Fl(S)p Fn(\()p Fl(u)p Fn(\))58 b(=)f(2)p Fm(\026)p Fl(E)p
Fn(\()p Fl(u)p Fn(\))45 b(+)h Fm(\025)34 b Fn(tr\()p
Fl(E)p Fn(\()p Fl(u)p Fn(\)\))p Fl(I)4781 5130 y
 0 setgray
 4781
5130 a 10245 5222 a
 0 setgray
 10245 5222 a 9332 5736 a
 0. setgray
 9332 5736
a Fo(SIAM)20 b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h(\226)e(p)n
(.3/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 4 4
TeXDict begin 4 3 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 4/View [ /XYZ null null null ] /Title (Finite Element Approximation)
/OUT pdfmark end
 5001
3450 a BlueViolet 5628 1366 a Fr(Finite)76 b(Element)h(Appr)-6
b(o)e(ximation)p Black 9517 1366 a
 0 setgray
 9517 1366 a 4781 1882
a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1789 a Fp(\017)p
Black 5044 1789 a
 0. setgray
 5044 1789 a Black 5044 1789 a
 0. setgray
 5044
1789 a 102 w Fq(Dir)s(ichlet)61 b(boundar)6 b(y)58 b(v)-5
b(alue)58 b(prob)l(lem)p Black Black 5802 2298 a
 0. setgray
 5802
2298 a 167 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 6.8
neg 212.10681 12.8 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25 setgray
gsave fill grestore stroke grestore gsave 1. setgray gsave fill grestore
stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial OliveGreen
59 w Fp(\000r)46 b(\001)g Fl(S)p Fn(\()p Fl(u)p Fn(\))57
b(=)h Fl(f)115 b Fq(in)94 b Fn(\012)p Fm(;)462 b Fl(u)57
b Fn(=)h Fl(0)94 b Fq(on)f Fn(\000)p Black 9436 2298
a
 0. setgray
 9436 2298 a Black BlueViolet 4941 2851 a Fp(\017)p
Black 5044 2851 a
 0. setgray
 5044 2851 a Black 5044 2851 a
 0. setgray
 5044
2851 a 102 w Fq(total)60 b(of)g Fm(M)80 b Fq(nodes)m(,)58
b Fm(n)i Fq(deg)n(rees)d(of)j(freedom)p Black BlueViolet
4941 3187 a Fp(\017)p Black 5044 3187 a
 0. setgray
 5044 3187 a Black
5044 3187 a
 0. setgray
 5044 3187 a 102 w Fq(Galer)s(kin)g(\002nite)f(elements:)73
b(shape)58 b(functions)p OliveGreen 213 w Fm(\036)9342
3218 y Fk(1)9430 3187 y Fm(;)34 b(:)g(:)g(:)j(;)d(\036)10003
3221 y Fj(M)p Black 10182 3187 a
 0. setgray
 10182 3187 a Black BlueViolet
4941 3520 a Fp(\017)p Black 5044 3520 a
 0. setgray
 5044 3520 a Black
5044 3520 a
 0. setgray
 5044 3520 a 102 w Fq(shape)58 b(der)s(iv)-5
b(ativ)g(e)59 b(matr)s(ix)5301 4526 y Fl(B)f Fn(=)5738
3801 y Fi(2)5738 4165 y(6)5738 4289 y(6)5738 4413 y(6)5738
4537 y(6)5738 4661 y(6)5738 4793 y(4)5983 3940 y Fm(@)11
b(\036)6221 3971 y Fk(1)p 5983 4033 327 9 v 6030 4222
a Fm(@)g(x)6523 3940 y(@)g(\036)6761 3971 y Fk(2)p 6523
4033 V 6569 4222 a Fm(@)g(x)7041 4080 y Fp(\001)34 b(\001)g(\001)7475
3940 y Fm(@)11 b(\036)7713 3975 y Fj(M)p 7475 4033 418
9 v 7567 4222 a Fm(@)g(x)8218 4080 y Fn(0)439 b(0)375
b(0)421 b(0)6095 4505 y(0)439 b(0)375 b(0)421 b(0)8106
4365 y Fm(@)11 b(\036)8344 4396 y Fk(1)p 8106 4458 327
9 v 8157 4647 a Fm(@)g(y)8645 4365 y(@)g(\036)8883 4396
y Fk(2)p 8645 4458 V 8696 4647 a Fm(@)g(y)9164 4505 y
Fp(\001)34 b(\001)g(\001)9598 4365 y Fm(@)11 b(\036)9836
4400 y Fj(M)p 9598 4458 418 9 v 9695 4647 a Fm(@)g(y)5983
4831 y(@)g(\036)6221 4862 y Fk(1)p 5983 4923 327 9 v
6034 5112 a Fm(@)g(y)6523 4831 y(@)g(\036)6761 4862 y
Fk(2)p 6523 4923 V 6574 5112 a Fm(@)g(y)7041 4970 y Fp(\001)34
b(\001)g(\001)7475 4831 y Fm(@)11 b(\036)7713 4865 y
Fj(M)p 7475 4923 418 9 v 7572 5112 a Fm(@)g(y)8106 4831
y(@)g(\036)8344 4862 y Fk(1)p 8106 4923 327 9 v 8152
5112 a Fm(@)g(x)8645 4831 y(@)g(\036)8883 4862 y Fk(2)p
8645 4923 V 8692 5112 a Fm(@)g(x)9164 4970 y Fp(\001)34
b(\001)g(\001)9598 4831 y Fm(@)11 b(\036)9836 4865 y
Fj(M)p 9598 4923 418 9 v 9690 5112 a Fm(@)g(x)10122 3801
y Fi(3)10122 4165 y(7)10122 4289 y(7)10122 4413 y(7)10122
4537 y(7)10122 4661 y(7)10122 4793 y(5)4781 5357 y
 0 setgray
 4781
5357 a 10245 5222 a
 0 setgray
 10245 5222 a 9332 5736 a
 0. setgray
 9332 5736
a Fo(SIAM)20 b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h(\226)e(p)n
(.4/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 5 5
TeXDict begin 5 4 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 5/View [ /XYZ null null null ] /Title (Global Stiffness Matrix)
/OUT pdfmark end
 5001
3450 a BlueViolet 6080 1393 a Fr(Global)77 b(Stiffness)f(Matrix)p
Black 9065 1393 a
 0 setgray
 9065 1393 a 4781 1882 a
 0. setgray
 4781 1882 a
Black BlueViolet 4941 1789 a Fp(\017)p Black 5044 1789
a
 0. setgray
 5044 1789 a Black 5044 1789 a
 0. setgray
 5044 1789 a 102 w Fq(constitutiv)-5
b(e)59 b(matr)s(ix)6455 2443 y Fl(E)6608 2358 y Fj(el)6797
2443 y Fn(=)7012 2028 y Fi(2)7012 2400 y(4)7236 2197
y Fn(2)p Fm(\026)46 b Fn(+)g Fm(\025)408 b(\025)419 b
Fn(0)7472 2440 y Fm(\025)408 b Fn(2)p Fm(\026)46 b Fn(+)g
Fm(\025)183 b Fn(0)7480 2684 y(0)662 b(0)417 b Fm(\026)8968
2028 y Fi(3)8968 2400 y(5)p Black Black 5942 3144 a
 0. setgray
 5942
3144 a Red 101 w Fq(Y)-30 b(oung')-11 b(s)60 b(modulus)e
Fm(E)12 b Fq(,)59 b(P)-11 b(oisson')g(s)60 b(r)n(atio)f
Fm(\027)p Black 9517 3144 a
 0. setgray
 9517 3144 a 5685 3932 a Fl(E)5838
3847 y Fj(el)6028 3932 y Fn(=)6855 3792 y Fm(E)p 6263
3884 1346 9 v 6263 4074 a Fn(\(1)46 b Fp(\000)f Fn(2)p
Fm(\027)13 b Fn(\)\(1)46 b(+)g Fm(\027)13 b Fn(\))7664
3517 y Fi(2)7664 3889 y(4)7888 3680 y Fn(1)46 b Fp(\000)g
Fm(\027)362 b(\027)554 b Fn(0)8065 3924 y Fm(\027)362
b Fn(1)46 b Fp(\000)f Fm(\027)378 b Fn(0)8071 4178 y(0)537
b(0)9186 4097 y Fk(1)p 9186 4131 80 9 v 9186 4249 a(2)9332
4178 y Fp(\000)46 b Fm(\027)9738 3517 y Fi(3)9738 3889
y(5)p Black BlueViolet 4941 4637 a Fp(\017)p Black 5044
4637 a
 0. setgray
 5044 4637 a Black 5044 4637 a
 0. setgray
 5044 4637 a 102
w Fq(global)59 b(stiffness)h(matr)s(ix)6904 5194 y Fl(K)e
Fn(=)7358 4913 y Fi(Z)7473 5380 y Fk(\012)7631 5194 y
Fl(B)7796 5109 y Fj(T)7920 5194 y Fl(E)8073 5109 y Fj(el)8206
5194 y Fl(B)34 b Fm(d)p Fn(\012)4781 5581 y
 0 setgray
 4781 5581
a 10245 5222 a
 0 setgray
 10245 5222 a 9332 5736 a
 0. setgray
 9332 5736 a Fo(SIAM)20
b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h(\226)e(p)n(.5/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 6 6
TeXDict begin 6 5 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 6/View [ /XYZ null null null ] /Title (Element Stiffness Matrix)
/OUT pdfmark end
 5001
3450 a BlueViolet 5973 1393 a Fr(Element)76 b(Stiffness)g(Matrix)p
Black 9172 1393 a
 0 setgray
 9172 1393 a 4781 1882 a
 0. setgray
 4781 1882 a
Black BlueViolet 4941 1789 a Fp(\017)p Black 5044 1789
a
 0. setgray
 5044 1789 a Black 5044 1789 a
 0. setgray
 5044 1789 a 102 w Fm(n)5267
1820 y Fj(e)5396 1789 y Fp(\002)45 b Fm(n)5723 1820 y
Fj(e)5960 1789 y Fq(element)59 b(matr)s(ix)h Fl(K)7605
1820 y Fj(e)7687 1789 y Fq(,)g(e)m(.g.)f(linear)h(tr)s(iangles)p
OliveGreen 5219 2869 a Fl(K)5401 2900 y Fj(e)5541 2869
y Fn(=)5803 2817 y(\026)5755 2869 y Fm(E)5952 2082 y
Fi(2)5952 2445 y(6)5952 2569 y(6)5952 2693 y(6)5952 2817
y(6)5952 2941 y(6)5952 3065 y(6)5952 3198 y(4)6196 2165
y Fk(3)p 6196 2198 80 9 v 6196 2317 a(2)6342 2246 y Fp(\000)46
b Fn(2)p Fm(\027)7189 2165 y Fk(1)p 7189 2198 V 7189
2317 a(2)7695 2246 y Fm(\027)59 b Fp(\000)46 b Fn(1)172
b Fm(\027)59 b Fp(\000)8720 2165 y Fk(1)p 8720 2198 V
8720 2317 a(2)8993 2246 y Fm(\027)g Fp(\000)9379 2165
y Fk(1)p 9379 2198 V 9379 2317 a(2)9748 2246 y Fp(\000)p
Fm(\027)6430 2419 y Fk(1)p 6430 2453 V 6430 2572 a(2)6956
2419 y(3)p 6956 2453 V 6956 2572 a(2)7102 2500 y Fp(\000)46
b Fn(2)p Fm(\027)282 b Fp(\000)p Fm(\027)f(\027)59 b
Fp(\000)8720 2419 y Fk(1)p 8720 2453 V 8720 2572 a(2)8993
2500 y Fm(\027)g Fp(\000)9379 2419 y Fk(1)p 9379 2453
V 9379 2572 a(2)9652 2500 y Fm(\027)f Fp(\000)46 b Fn(1)6236
2744 y Fm(\027)59 b Fp(\000)46 b Fn(1)389 b Fp(\000)p
Fm(\027)342 b Fn(1)46 b Fp(\000)g Fm(\027)378 b Fn(0)558
b(0)545 b Fm(v)6226 2999 y(\027)59 b Fp(\000)6612 2917
y Fk(1)p 6612 2951 V 6612 3070 a(2)6986 2999 y Fm(\027)g
Fp(\000)7372 2917 y Fk(1)p 7372 2951 V 7372 3070 a(2)7878
2999 y Fn(0)8355 2917 y Fk(1)p 8355 2951 V 8355 3070
a(2)8501 2999 y Fp(\000)46 b Fm(\027)9014 2917 y Fk(1)p
9014 2951 V 9014 3070 a(2)9160 2999 y Fp(\000)f Fm(\027)368
b Fn(0)6226 3253 y Fm(\027)59 b Fp(\000)6612 3172 y Fk(1)p
6612 3205 V 6612 3324 a(2)6986 3253 y Fm(\027)g Fp(\000)7372
3172 y Fk(1)p 7372 3205 V 7372 3324 a(2)7878 3253 y Fn(0)8355
3172 y Fk(1)p 8355 3205 V 8355 3324 a(2)8501 3253 y Fp(\000)46
b Fm(\027)9014 3172 y Fk(1)p 9014 3205 V 9014 3324 a(2)9160
3253 y Fp(\000)f Fm(\027)368 b Fn(0)6333 3497 y Fp(\000)p
Fm(\027)402 b(\027)59 b Fp(\000)45 b Fn(1)410 b Fm(\027)555
b Fn(0)j(0)365 b(1)46 b Fp(\000)f Fm(\027)10204 2082
y Fi(3)10204 2445 y(7)10204 2569 y(7)10204 2693 y(7)10204
2817 y(7)10204 2941 y(7)10204 3065 y(7)10204 3198 y(5)p
Black 5146 3798 a
 0. setgray
 5146 3798 a 6866 4090 a Fn(\026)6819
4142 y Fm(E)69 b Fn(=)7916 4002 y Fm(E)p 7274 4094 1448
9 v 7274 4284 a Fn(2\(1)46 b Fp(\000)f Fn(2)p Fm(\027)13
b Fn(\)\(1)46 b(+)g Fm(\027)13 b Fn(\))p Black BlueViolet
4941 4636 a Fp(\017)p Black 5044 4636 a
 0. setgray
 5044 4636 a Black
5044 4636 a
 0. setgray
 5044 4636 a 102 w Fq(eigen)l(v)-5 b(alues)p
Red 5977 5133 a Fm(E)p 5645 5225 826 9 v 5645 5414 a(h)5761
5355 y Fk(2)5850 5414 y Fn(\(1)46 b(+)g Fm(\027)13 b
Fn(\))6526 4919 y Fi(\()6692 5273 y Fn(0)p Fm(;)34 b
Fn(0)p Fm(;)g Fn(0)p Fm(;)g Fn(1)p Fm(;)7480 5133 y Fn(2\()p
Fm(\027)59 b Fp(\000)45 b Fn(1\))h Fp(\006)8458 4957
y(p)p 8630 4957 1120 9 v 176 x Fn(1)g Fp(\000)g Fn(2)p
Fm(\027)59 b Fn(+)46 b(4)p Fm(\027)9661 5073 y Fk(2)p
7480 5225 2270 9 v 8201 5414 a Fn(2\(2)p Fm(\027)59 b
Fp(\000)46 b Fn(1\))9770 4919 y Fi(\))p Black 5146 5759
a
 0. setgray
 5146 5759 a 4781 5960 a
 0 setgray
 4781 5960 a 10245 5222 a
 0 setgray
 10245
5222 a 9332 5736 a
 0. setgray
 9332 5736 a Fo(SIAM)20 b(CSE)f(Meeting,)h(F)n(ebr)q
(uar)r(y)g(2007)h(\226)e(p)n(.6/24)10712 5736 y
 0 setgray
 10712
5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 7 7
TeXDict begin 7 6 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 7/View [ /XYZ null null null ] /Title (Stiffness Matrix Assembly)
/OUT pdfmark end
 5001
3450 a BlueViolet 5862 1366 a Fr(Stiffness)76 b(Matrix)h(Assemb)m(l)l
(y)p Black 9284 1366 a
 0 setgray
 9284 1366 a 4781 1882 a
 0. setgray
 4781 1882
a Black BlueViolet 4941 1789 a Fp(\017)p Black 5044 1789
a
 0. setgray
 5044 1789 a Black 5044 1789 a
 0. setgray
 5044 1789 a 102 w Fm(n)5267
1820 y Fj(e)5396 1789 y Fp(\002)45 b Fm(n)95 b Fq(Boolean)59
b(connectivity)f(matr)s(ix)i Fl(C)8647 1820 y Fj(e)p
Black Black 5189 2328 a
 0. setgray
 5189 2328 a 167 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 8.5417
neg 283.23871 14.54172 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25 setgray
gsave fill grestore stroke grestore gsave 1. setgray gsave fill grestore
stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial OliveGreen 5449 2299 a Fl(\026)5416
2349 y(K)5598 2380 y Fg(e)5748 2349 y Fn(=)e Fl(C)6131
2274 y Fj(T)6131 2400 y(e)6254 2349 y Fl(K)6436 2380
y Fj(e)6519 2349 y Fl(C)6687 2380 y Fj(e)6829 2349 y
Fq(f)-6 b(or)59 b Fm(e)e Fn(=)h(1)p Fm(;)34 b(:)g(:)g(:)i(;)e(E)12
b(;)463 b Fl(K)57 b Fn(=)9185 2194 y Fi(P)9403 2248 y
Fj(E)9403 2409 y(e)p Fk(=1)9756 2299 y Fl(\026)9723 2349
y(K)9905 2380 y Fg(e)p Black 10058 2349 a
 0. setgray
 10058 2349
a Black BlueViolet 4941 2906 a Fp(\017)p Black 5044 2906
a
 0. setgray
 5044 2906 a Black 5044 2906 a
 0. setgray
 5044 2906 a 102 w Fq(tw)n(o)j(obser)6
b(v)-5 b(ations:)p Black OliveGreen 5226 3354 a Fp(\017)p
Black 5329 3354 a
 0. setgray
 5329 3354 a Black 5329 3354 a
 0. setgray
 5329
3354 a 102 w Fq(order)59 b(nodal)f(displacements)p Black
Black 6042 3719 a
 0. setgray
 6042 3719 a 167 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 7.55234
neg 200.72589 13.55235 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25 setgray
gsave fill grestore stroke grestore gsave 1. setgray gsave fill grestore
stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Red 6268 3732 a Fl(u)g Fn(=)g([)p Fm(u)6841
3762 y Fk(1)6929 3732 y Fm(;)34 b(u)7134 3762 y Fk(2)7223
3732 y Fm(;)g(:)g(:)g(:)j(;)d(u)7791 3766 y Fj(M)7971
3732 y Fm(;)g(v)8159 3762 y Fk(1)8248 3732 y Fm(;)g(v)8436
3762 y Fk(2)8524 3732 y Fm(;)g(:)g(:)g(:)j(;)d(v)9075
3766 y Fj(M)9254 3732 y Fn(])9310 3656 y Fj(T)p Black
9494 3732 a
 0. setgray
 9494 3732 a 5431 4276 a Fq(b)l(loc)l(k)58
b(stiffness)i(matr)s(ix)214 b Fl(K)57 b Fn(=)8075 3985
y Fi(\024)8270 4142 y Fl(K)8452 4173 y Fj(xx)8813 4142
y Fl(K)8995 4173 y Fj(xy)8273 4396 y Fl(K)8455 4321 y
Fj(T)8455 4447 y(xy)8816 4396 y Fl(K)8998 4427 y Fj(y)6
b(y)9264 3985 y Fi(\025)5431 4775 y Fq(same)58 b(b)l(loc)l(k)h(str)s
(ucture)g(applies)f(to)i(each)e Fl(K)9132 4806 y Fj(e)p
Black OliveGreen 5226 5288 a Fp(\017)p Black 5329 5288
a
 0. setgray
 5329 5288 a Black 5329 5288 a
 0. setgray
 5329 5288 a 102 w Fq(f)-6
b(or)59 b(linear)g(elasticity)h Fm(\024)p Fn(\()p Fl(K)p
Fn(\))e(=)f Fm(O)6 b Fn(\()p Fm(h)8276 5213 y Ff(\000)p
Fk(2)8488 5288 y Fn(\))4781 5540 y
 0 setgray
 4781 5540 a 10245
5222 a
 0 setgray
 10245 5222 a 9332 5736 a
 0. setgray
 9332 5736 a Fo(SIAM)20
b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h(\226)e(p)n(.7/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 8 8
TeXDict begin 8 7 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 8/View [ /XYZ null null null ] /Title (Element-based Preconditioners)
/OUT pdfmark end
 5001
3450 a BlueViolet 5508 1393 a Fr(Element-based)77 b(Preconditioner)l(s)
p Black 9636 1393 a
 0 setgray
 9636 1393 a 4781 1882 a
 0. setgray
 4781 1882
a Black BlueViolet 4941 1789 a Fp(\017)p Black 5044 1789
a
 0. setgray
 5044 1789 a Black 5044 1789 a
 0. setgray
 5044 1789 a 102 w Fq(connectivity)59
b(and)g(element)f(matr)s(ices)i(stored)p Black BlueViolet
4941 2122 a Fp(\017)p Black 5044 2122 a
 0. setgray
 5044 2122 a Black
5044 2122 a
 0. setgray
 5044 2122 a 102 w Fq(global)d(stiffness)g(matr)s(ix)h
(\(preconditioner\))e(ne)-6 b(v)h(er)55 b(assemb)l(led)p
Black BlueViolet 4941 2507 a Fp(\017)p Black 5044 2507
a
 0. setgray
 5044 2507 a Black 5044 2507 a
 0. setgray
 5044 2507 a 102 w Fq(preconditioning)j
(matr)s(ix)p Red 274 w Fl(P)f Fn(=)7942 2353 y Fi(P)8160
2407 y Fj(E)8160 2568 y(e)p Fk(=1)8480 2507 y Fl(C)8648
2433 y Fj(T)8648 2559 y(e)8806 2507 y Fl(P)8965 2538
y Fj(e)9082 2507 y Fl(C)9250 2538 y Fj(e)p Black 9333
2507 a
 0. setgray
 9333 2507 a Black BlueViolet 4941 2959 a Fp(\017)p
Black 5044 2959 a
 0. setgray
 5044 2959 a Black 5044 2959 a
 0. setgray
 5044
2959 a 102 w Fq(diagonal)i(scaling)g(\(DIA)-6 b(G\))p
OliveGreen 5971 3651 a Fl(P)6130 3686 y Fj(D)t(I)12 b(AG)6657
3651 y Fn(=)58 b(diag)t(\()p Fl(K)p Fn(\))e(=)7952 3393
y Fk(E)7857 3455 y Fi(X)7869 3899 y Fk(e=1)8190 3651
y Fl(C)8358 3566 y Fk(T)8358 3702 y(e)8516 3651 y Fn(diag)t(\()p
Fl(K)9151 3682 y Fk(e)9230 3651 y Fn(\))34 b Fl(C)9511
3682 y Fk(e)6779 4274 y Fm(\024)p Fn(\()p Fl(P)7133 4189
y Ff(\000)p Fk(1)7133 4342 y Fj(D)t(I)12 b(AG)7603 4274
y Fl(K)p Fn(\))57 b(=)h Fm(O)6 b Fn(\()p Fm(h)8492 4189
y Ff(\000)p Fk(2)8703 4274 y Fn(\))p Black 5146 4625
a
 0. setgray
 5146 4625 a Black BlueViolet 4941 5065 a Fp(\017)p
Black 5044 5065 a
 0. setgray
 5044 5065 a Black 5044 5065 a
 0. setgray
 5044
5065 a 102 w Fq(tr)s(ue)60 b(f)-6 b(or)59 b(an)m(y)f(preconditioner)g
(of)i(the)f(f)-6 b(or)5 b(m)8770 4911 y Fi(P)8988 4965
y Fj(E)8988 5126 y(e)p Fk(=1)9309 5065 y Fl(C)9477 4990
y Fj(T)9477 5117 y(e)9635 5065 y Fl(Q)9810 5096 y Fj(e)9927
5065 y Fl(C)10095 5096 y Fj(e)5146 5325 y Fq(f)-6 b(or)59
b(some)g Fm(n)6151 5356 y Fj(e)6279 5325 y Fp(\002)46
b Fm(n)6607 5356 y Fj(e)6749 5325 y Fq(matr)s(ices)59
b Fl(Q)7793 5356 y Fj(e)4781 5566 y
 0 setgray
 4781 5566 a 10245
5222 a
 0 setgray
 10245 5222 a 9332 5736 a
 0. setgray
 9332 5736 a Fo(SIAM)20
b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h(\226)e(p)n(.8/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 9 9
TeXDict begin 9 8 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 9/View [ /XYZ null null null ] /Title (Element-by-element methods (EBE))
/OUT pdfmark end
 5001
3450 a BlueViolet 5241 1366 a Fr(Element-b)-6 b(y-element)77
b(methods)h(\(EBE\))p Black 9906 1366 a
 0 setgray
 9906 1366 a 4781
1882 a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794 a Fp(\017)p
Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044
1794 a 102 w Fq(Hughes)m(,)59 b(Le)-6 b(vit)58 b(and)h(Winget)g
(\(1983\))p Black BlueViolet 4941 2142 a Fp(\017)p Black
5044 2142 a
 0. setgray
 5044 2142 a Black 5044 2142 a
 0. setgray
 5044 2142 a
102 w Fq(regular)s(ise)g(assemb)l(ly)f(of)h(each)g(element)8722
2090 y Fn(\026)8681 2142 y Fl(K)8863 2173 y Fj(e)p Black
Black 6122 2512 a
 0. setgray
 6122 2512 a Red 6264 2460 a Fn(~)6224
2512 y Fl(K)6406 2543 y Fj(e)6546 2512 y Fn(=)f Fl(I)6848
2543 y Fj(n)6998 2512 y Fn(+)46 b Fl(D)7379 2437 y Ff(\000)p
Fk(1)p Fj(=)p Fk(2)7785 2345 y Fi(\000)7920 2460 y Fn(\026)7880
2512 y Fl(K)8062 2543 y Fj(e)8191 2512 y Fp(\000)8436
2460 y Fn(\026)8397 2512 y Fl(D)8575 2543 y Fj(e)8658
2345 y Fi(\001)8787 2512 y Fl(D)8965 2437 y Ff(\000)p
Fk(1)p Fj(=)p Fk(2)p Black 9337 2512 a
 0. setgray
 9337 2512 a 6477
2796 a Fl(D)57 b Fn(=)h(diag)t(\()p Fl(K)p Fn(\))p Fq(,)7797
2743 y Fn(\026)7759 2796 y Fl(D)7937 2827 y Fj(e)8077
2796 y Fn(=)g(diag)s(\()8784 2743 y(\026)8744 2796 y
Fl(K)8926 2827 y Fk(e)9006 2796 y Fn(\))p Black BlueViolet
4941 3169 a Fp(\017)p Black 5044 3169 a
 0. setgray
 5044 3169 a Black
5044 3169 a
 0. setgray
 5044 3169 a 102 w Fq(f)-6 b(actor)s(ise)6050
3116 y Fn(~)6009 3169 y Fl(K)6191 3200 y Fj(e)6331 3169
y Fn(=)58 b Fl(L)6686 3200 y Fj(e)6768 3169 y Fl(D)6946
3200 y Fj(e)7029 3169 y Fl(L)7169 3094 y Fj(T)7169 3220
y(e)p OliveGreen 5598 3861 a Fl(P)5757 3895 y Fj(E)9
b(B)f(E)6203 3861 y Fn(=)58 b Fl(D)6596 3775 y Fk(1)p
Fj(=)p Fk(2)6878 3507 y Fi(")7075 3602 y Fj(E)7006 3664
y Fi(Y)6999 4108 y Fj(e)p Fk(=1)7345 3861 y Fl(L)7485
3892 y Fj(e)7567 3507 y Fi(#)34 b(")7919 3602 y Fj(E)7850
3664 y Fi(Y)7843 4108 y Fj(e)p Fk(=1)8189 3861 y Fl(D)8367
3892 y Fj(e)8450 3507 y Fi(#)g(")8848 3602 y Fk(1)8756
3664 y Fi(Y)8726 4114 y Fj(e)p Fk(=)p Fj(E)9119 3861
y Fl(L)9259 3775 y Fj(T)9259 3912 y(e)9382 3507 y Fi(#)9537
3861 y Fl(D)9715 3775 y Fk(1)p Fj(=)p Fk(2)6819 4490
y Fm(\024)p Fn(\()p Fl(P)7173 4404 y Ff(\000)p Fk(1)7173
4558 y Fj(E)9 b(B)f(E)7562 4490 y Fl(K)p Fn(\))57 b(=)h
Fm(O)6 b Fn(\()p Fm(h)8451 4405 y Ff(\000)p Fk(2)8663
4490 y Fn(\))p Black 5146 4840 a
 0. setgray
 5146 4840 a Black BlueViolet
4941 5173 a Fp(\017)p Black 5044 5173 a
 0. setgray
 5044 5173 a Black
5044 5173 a
 0. setgray
 5044 5173 a 102 w Fq(can)59 b(be)g(applied)f(directly)i(to)
f(elasticity)h(prob)l(lems)4781 5419 y
 0 setgray
 4781 5419 a 10245
5222 a
 0 setgray
 10245 5222 a 9332 5736 a
 0. setgray
 9332 5736 a Fo(SIAM)20
b(CSE)f(Meeting,)h(F)n(ebr)q(uar)r(y)g(2007)h(\226)e(p)n(.9/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 10 10
TeXDict begin 10 9 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001 3450
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black 5001
3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001 3450
a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450 a
SDict begin [ /Page 10/View [ /XYZ null null null ] /Title (Element-based Symmetric Gauss-Seidel (SGS))
/OUT pdfmark end
 5001
3450 a BlueViolet 4518 1366 a Fr(Element-based)78 b(Symmetric)e
(Gauss-Seidel)h(\(SGS\))p Black 10628 1366 a
 0 setgray
 10628 1366
a 4781 1882 a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794
a Fp(\017)p Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044
1794 a
 0. setgray
 5044 1794 a 102 w Fq(EBE)61 b(requires)d(additional)i(stor)n
(age)e(f)-6 b(or)59 b(f)-6 b(actor)s(isations)p Black
BlueViolet 4941 2231 a Fp(\017)p Black 5044 2231 a
 0. setgray
 5044
2231 a Black 5044 2231 a
 0. setgray
 5044 2231 a 102 w Fq(split)p
Red 6961 2477 a Fn(~)6921 2530 y Fl(K)7103 2561 y Fj(e)7243
2530 y Fn(=)58 b Fl(I)7545 2561 y Fj(n)7695 2530 y Fp(\000)46
b Fl(L)8042 2561 y Fj(e)8170 2530 y Fp(\000)f Fl(L)8516
2445 y Fj(T)8516 2581 y(e)p Black 8640 2530 a
 0. setgray
 8640 2530
a Black Black 5618 2919 a
 0. setgray
 5618 2919 a 102 w Fl(L)5860
2950 y Fj(e)6000 2919 y Fn(=)60 b Fq(str)s(ict)g(lo)m(w)n(er)f(tr)s
(iangle)h(of)8334 2866 y Fn(~)8294 2919 y Fl(K)8476 2950
y Fj(e)8559 2919 y Fq(,)f Fl(D)f Fn(=)g(diag)s(\()p Fl(K)p
Fn(\))p OliveGreen 5415 3700 a Fl(P)5574 3735 y Fj(S)9
b(GS)5977 3700 y Fn(=)58 b Fl(D)6370 3615 y Fk(1)p Fj(=)p
Fk(2)6652 3347 y Fi(")6848 3442 y Fj(E)6779 3504 y Fi(Y)6773
3948 y Fj(e)p Fk(=1)7119 3700 y Fn(\()p Fl(I)7285 3731
y Fj(n)7435 3700 y Fp(\000)45 b Fl(L)7781 3731 y Fj(e)7864
3700 y Fn(\))7942 3347 y Fi(#)34 b(")8340 3442 y Fk(1)8248
3504 y Fi(Y)8218 3954 y Fj(e)p Fk(=)p Fj(E)8611 3471
y Fi(\020)8734 3700 y Fl(I)8821 3731 y Fj(n)8971 3700
y Fp(\000)46 b Fl(L)9318 3615 y Fj(T)9318 3751 y(e)9441
3471 y Fi(\021)9565 3347 y(#)9720 3700 y Fl(D)9898 3615
y Fk(1)p Fj(=)p Fk(2)6841 4330 y Fm(\024)p Fn(\()p Fl(P)7195
4244 y Ff(\000)p Fk(1)7195 4398 y Fj(S)9 b(GS)7541 4330
y Fl(K)p Fn(\))57 b(=)g Fm(O)6 b Fn(\()p Fm(h)8429 4244
y Ff(\000)p Fk(2)8641 4330 y Fn(\))p Black 5146 4680
a
 0. setgray
 5146 4680 a Black BlueViolet 4941 5013 a Fp(\017)p
Black 5044 5013 a
 0. setgray
 5044 5013 a Black 5044 5013 a
 0. setgray
 5044
5013 a 102 w Fq(other)55 b(matr)s(ix)g(splittings)h(can)e(be)g(applied)
g(at)h(an)g(element)f(le)-6 b(v)h(el)4781 5262 y
 0 setgray
 4781
5262 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293 5736
a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g(p)n
(.10/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 11 11
TeXDict begin 11 10 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 11/View [ /XYZ null null null ] /Title (Element matrix factorisation (EMF))
/OUT pdfmark end
 5001 3450 a BlueViolet 5300 1366 a Fr(Element)76 b(matrix)g
(factorisation)h(\(EMF\))p Black 9846 1366 a
 0 setgray
 9846 1366
a 4781 1882 a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794
a Fp(\017)p Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044
1794 a
 0. setgray
 5044 1794 a 102 w Fq(Gustafsson)59 b(and)f(Lindsk)l(og)g
(\(1986\))p Black BlueViolet 4941 2257 a Fp(\017)p Black
5044 2257 a
 0. setgray
 5044 2257 a Black 5044 2257 a
 0. setgray
 5044 2257 a
102 w Fq(Cholesky)h(f)-6 b(actor)s(isation)p Red 213
w Fl(K)7627 2288 y Fj(e)7767 2257 y Fn(=)8001 2204 y(\026)7982
2257 y Fl(L)8122 2288 y Fj(e)8223 2204 y Fn(\026)8204
2257 y Fl(L)8344 2182 y Fj(T)8344 2308 y(e)p Black 8467
2257 a
 0. setgray
 8467 2257 a Black BlueViolet 4941 2700 a Fp(\017)p
Black 5044 2700 a
 0. setgray
 5044 2700 a Black 5044 2700 a
 0. setgray
 5044
2700 a 102 w Fq(assemb)l(le)58 b(f)-6 b(actors)59 b(to)g(f)-6
b(or)5 b(m)59 b Fl(L)g Fq(and)g Fl(D)g Fq(\(requires)g(a)g(par)9
b(ticular)5146 2944 y(global)59 b(and)g(local)g(n)n(umber)s(ing)f(of)i
(unkno)m(wns\))p OliveGreen 5146 3410 a Fl(P)p Fn(\()p
Fm(\021)7 b Fn(\))57 b(=)h([)p Fl(L)p Fn(\(1)24 b(+)g
Fm(\021)7 b(h)p Fn(\))6725 3325 y Ff(\000)p Fk(1)6962
3410 y Fn(+)24 b Fl(D)p Fn(\(1)g(+)g Fm(\021)7 b(h)p
Fn(\)][)p Fl(L)p Fn(\(1)24 b(+)g Fm(\021)7 b(h)p Fn(\))8947
3325 y Ff(\000)p Fk(1)9187 3410 y Fn(+)24 b Fl(D)p Fn(\(1)g(+)g
Fm(\021)7 b(h)p Fn(\)])10289 3325 y Fj(T)6799 3896 y
Fm(\024)p Fn(\()p Fl(P)7153 3811 y Ff(\000)p Fk(1)7153
3964 y Fj(E)i(M)17 b(F)7582 3896 y Fl(K)p Fn(\))57 b(=)h
Fm(O)6 b Fn(\()p Fm(h)8471 3811 y Ff(\000)p Fk(1)8683
3896 y Fn(\))p Black 5146 4247 a
 0. setgray
 5146 4247 a Black BlueViolet
4941 4580 a Fp(\017)p Black 5044 4580 a
 0. setgray
 5044 4580 a Black
5044 4580 a
 0. setgray
 5044 4580 a 102 w Fm(\026)57 b Fn(=)h(0)i
Fq(here)p Black BlueViolet 4941 4913 a Fp(\017)p Black
5044 4913 a
 0. setgray
 5044 4913 a Black 5044 4913 a
 0. setgray
 5044 4913 a
102 w Fq(can)f(break)f(do)m(wn)h(f)-6 b(or)59 b(linear)g(elasticity)p
Black BlueViolet 4941 5246 a Fp(\017)p Black 5044 5246
a
 0. setgray
 5044 5246 a Black 5044 5246 a
 0. setgray
 5044 5246 a 102 w Fq(similar)h(method)f
(b)l(y)f(Kaasschieter)h(\(1989\))4781 5492 y
 0 setgray
 4781 5492
a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19
b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g(p)n(.11/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 12 12
TeXDict begin 12 11 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 12/View [ /XYZ null null null ] /Title (Matrix Reduction Techniques)
/OUT pdfmark end
 5001 3450 a BlueViolet 5661 1366 a Fr(Matrix)77 b(Reduction)h(T)-17
b(ec)m(hniques)p Black 9482 1366 a
 0 setgray
 9482 1366 a 4781 1882
a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794 a Fp(\017)p
Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044
1794 a 102 w Fq(notation)59 b(of)h(Saint-Georges)f(et)g(al.)h(\(1996\))
p Black BlueViolet 4941 2233 a Fp(\017)p Black 5044 2233
a
 0. setgray
 5044 2233 a Black 5044 2233 a
 0. setgray
 5044 2233 a OliveGreen
102 w Fq(AIM)p Black 5525 2233 a
 0. setgray
 5525 2233 a Fq(:)h(mak)l(e)d
Fl(K)h Fq(a)g Fe(Stieltjes)i(matr)s(ix)p Black Black
5914 2566 a
 0. setgray
 5914 2566 a 101 w Fl(K)d Fn(=)f Fp(f)p Fm(k)6677
2598 y Fj(ij)6815 2566 y Fp(g)j Fq(is)f(SPD)i(with)f
Fm(k)8234 2598 y Fj(ij)8428 2566 y Fp(\024)d Fn(0)j Fq(f)-6
b(or)59 b Fm(i)e Fp(6)p Fn(=)h Fm(j)p Black BlueViolet
4941 3108 a Fp(\017)p Black 5044 3108 a
 0. setgray
 5044 3108 a Black
5044 3108 a
 0. setgray
 5044 3108 a Red 102 w Fq(C-reduction)p Black
6250 3108 a
 0. setgray
 6250 3108 a Fq(:)74 b(lump)59 b(positiv)-5
b(e)58 b(off-diagonal)h(entr)s(ies)h(in)f(a)g(ro)m(w)5146
3355 y(of)h Fl(K)f Fq(onto)g(the)g(diagonal)f Fp(\))h
Fq(Stieltjes)i(matr)s(ix)p Black BlueViolet 4941 3791
a Fp(\017)p Black 5044 3791 a
 0. setgray
 5044 3791 a Black 5044
3791 a
 0. setgray
 5044 3791 a Red 102 w Fq(D-reduction)p Black 6250
3791 a
 0. setgray
 6250 3791 a Fq(:)74 b(neglect)58 b(an)m(y)h(connections)e(betw)n
(een)i(deg)n(rees)5146 4038 y(of)f(freedom)f(of)h(diff)-6
b(erent)58 b(types)f(\(tak)l(e)g(b)l(loc)l(k)g(diagonal)f(par)9
b(t)58 b(or)p OliveGreen 5146 4284 a(separ)n(ate)g(displacement)g
(component)p Black 8409 4284 a
 0. setgray
 8409 4284 a 58 w Fq(of)h
Fl(K)p Fq(\))p Black BlueViolet 4941 4721 a Fp(\017)p
Black 5044 4721 a
 0. setgray
 5044 4721 a Black 5044 4721 a
 0. setgray
 5044
4721 a Red 102 w Fq(DC-reduction)p Black 6404 4721 a
 0. setgray

6404 4721 a Fq(:)74 b(perf)-6 b(or)5 b(m)59 b(the)g(tw)n(o)g
(reductions)f(in)i(sequence)5146 4964 y Fp(\))f Fq(Stieltjes)i(matr)s
(ix)4781 5210 y
 0 setgray
 4781 5210 a 10245 5222 a
 0 setgray
 10245 5222 a
9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r
(y)g(2007)g(\226)g(p)n(.12/24)10712 5736 y
 0 setgray
 10712 5736
a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 13 13
TeXDict begin 13 12 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 13/View [ /XYZ null null null ] /Title (Matrix reduction on an element level)
/OUT pdfmark end
 5001 3450 a BlueViolet 5194 1393 a Fr(Matrix)77 b(reduction)h(on)f
(an)g(element)g(le)l(vel)p Black 9952 1393 a
 0 setgray
 9952 1393
a 4781 1882 a
 0. setgray
 4781 1882 a BlueViolet -88 x Fq(IDEA:)p
Black 5337 1794 a
 0. setgray
 5337 1794 a 60 w Fq(combine)59 b(matr)s(ix)g
(reduction)g(with)h(EMF)g(f)-6 b(actor)s(isation)p Black
BlueViolet 4941 2231 a Fp(\017)p Black 5044 2231 a
 0. setgray
 5044
2231 a Black 5044 2231 a
 0. setgray
 5044 2231 a 102 w Fq(ne)l(w)59
b(methods:)p Black OliveGreen 5226 2622 a Fp(\017)p Black
5329 2622 a
 0. setgray
 5329 2622 a Black 5329 2622 a
 0. setgray
 5329 2622 a
Red 102 w Fq(C-EMF)p Black 6106 2622 a
 0. setgray
 6106 2622 a Fq(,)p
Red 58 w(DC-EMF)p Black 7052 2622 a
 0. setgray
 7052 2622 a Fq(:)g(reduced)c
(element)h(matr)s(ix)i(is)f(Stieltjes)5431 2866 y Fp(\))i
Fq(element)g(Cholesky)f(f)-6 b(actors)59 b(f)-6 b(or)59
b(EMF)h(can)e(be)5431 3110 y(computed)p Black OliveGreen
5226 3502 a Fp(\017)p Black 5329 3502 a
 0. setgray
 5329 3502 a Black
5329 3502 a
 0. setgray
 5329 3502 a Red 102 w Fq(D-EMF)p Black 6106
3502 a
 0. setgray
 6106 3502 a Fq(:)j(reduced)c(element)i(matr)s(ix)h(b)l(loc)l(k)e
(diagonal,)5431 3748 y(each)g(b)l(loc)l(k)g(has)h(1D)g(n)n(ullspace)f
Fp(\))h Fq(element)g(Cholesky)5431 3992 y(f)-6 b(actors)59
b(f)-6 b(or)59 b(EMF)h(can)e(be)h(computed)p Black BlueViolet
4941 4577 a Fp(\017)p Black 5044 4577 a
 0. setgray
 5044 4577 a Black
5044 4577 a
 0. setgray
 5044 4577 a 102 w Fq(theoretical)h(results:)p
Black Black 5165 5068 a
 0. setgray
 5165 5068 a 167 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 8.27731
neg 286.08415 14.27733 .5 Frame  gsave 3.0 -45 PtoC Shadow 0.25 setgray
gsave fill grestore stroke grestore gsave 1. setgray gsave fill grestore
stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial OliveGreen 5391 5062 a Fm(\025)5509
5095 y Fk(min)5783 5062 y Fn(\()p Fl(P)6021 4987 y Ff(\000)p
Fk(1)6021 5130 y Fd(D)s(C)7 b Fc(\000)p Fd(E)f(M)11 b(F)6669
5062 y Fl(K)p Fn(\))57 b(=)h Fm(O)6 b Fn(\(1\))p Fq(,)212
b Fm(\025)8011 5095 y Fk(min)8285 5062 y Fn(\()p Fl(P)8523
4987 y Ff(\000)p Fk(1)8523 5130 y Fd(D)s Fc(\000)p Fd(E)6
b(M)11 b(F)9072 5062 y Fl(K)p Fn(\))58 b(=)f Fm(O)6 b
Fn(\(1\))p Black 10083 5062 a
 0. setgray
 10083 5062 a 4781 5448
a
 0 setgray
 4781 5448 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293
5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g
(p)n(.13/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop end
%%Page: 14 14
TeXDict begin 14 13 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 14/View [ /XYZ null null null ] /Title (Iteration Counts: Elasticity)
/OUT pdfmark end
 5001 3450 a BlueViolet 5819 1366 a Fr(Iteration)76
b(Counts:)95 b(Elasticity)p Black 9328 1366 a
 0 setgray
 9328 1366
a 4781 1882 a
 0. setgray
 4781 1882 a Black Black 4876 3417 a
 0. setgray
 4876
3417 a 102 w Fm(\027)70 b Fn(=)58 b(0)p Fm(:)p Fn(0)5681
3417 y
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 5681 3417 a @beginspecial 123 @llx 213 @lly 504
@urx 591 @ury 3810 @rwi @setspecial
%%BeginDocument: elas1_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\elas1_col.eps
%%CreationDate: 07/24/2006  21:33:58
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   123   213   504   591
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   123   213   504   591
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1271   246  4571  4539 MR c np
88 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

1426 4784 mt 
(3) s
1994 4616 mt 1994 4573 L
1994  388 mt 1994  431 L
1894 4784 mt 
(3.5) s
2523 4616 mt 2523 4573 L
2523  388 mt 2523  431 L
2483 4784 mt 
(4) s
3051 4616 mt 3051 4573 L
3051  388 mt 3051  431 L
2951 4784 mt 
(4.5) s
3580 4616 mt 3580 4573 L
3580  388 mt 3580  431 L
3540 4784 mt 
(5) s
4108 4616 mt 4108 4573 L
4108  388 mt 4108  431 L
4008 4784 mt 
(5.5) s
4636 4616 mt 4636 4573 L
4636  388 mt 4636  431 L
4596 4784 mt 
(6) s
5165 4616 mt 5165 4573 L
5165  388 mt 5165  431 L
5065 4784 mt 
(6.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5653 4784 mt 
(7) s
1466 4616 mt 1508 4616 L
5693 4616 mt 5651 4616 L
1351 4669 mt 
(3) s
1466 4193 mt 1508 4193 L
5693 4193 mt 5651 4193 L
1351 4246 mt 
(4) s
1466 3770 mt 1508 3770 L
5693 3770 mt 5651 3770 L
1351 3823 mt 
(5) s
1466 3347 mt 1508 3347 L
5693 3347 mt 5651 3347 L
1351 3400 mt 
(6) s
1466 2925 mt 1508 2925 L
5693 2925 mt 5651 2925 L
1351 2978 mt 
(7) s
1466 2502 mt 1508 2502 L
5693 2502 mt 5651 2502 L
1351 2555 mt 
(8) s
1466 2079 mt 1508 2079 L
5693 2079 mt 5651 2079 L
1351 2132 mt 
(9) s
1466 1657 mt 1508 1657 L
5693 1657 mt 5651 1657 L
1271 1710 mt 
(10) s
1466 1234 mt 1508 1234 L
5693 1234 mt 5651 1234 L
1271 1287 mt 
(11) s
1466  811 mt 1508  811 L
5693  811 mt 5651  811 L
1271  864 mt 
(12) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1271  441 mt 
(13) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1408 4038 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 2465 3517 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3522 3038 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4578 2589 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5635 2158 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  60   60 1466 4319 FO
  60   60 2523 3946 FO
  60   60 3580 3536 FO
  60   60 4636 3113 FO
  60   60 5693 2677 FO
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1419 4227 5 MP
/c9 { 1.000000 0.000000 1.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 2476 3874 5 MP
DP
0 -94 -94 0 0 94 94 0 3533 3439 5 MP
DP
0 -94 -94 0 0 94 94 0 4589 3010 5 MP
DP
0 -94 -94 0 0 94 94 0 5646 2590 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

69 119 -138 0 69 -119 1466 3868 4 MP
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
DP
69 119 -138 0 69 -119 2523 3314 4 MP
DP
69 119 -138 0 69 -119 3580 2522 4 MP
DP
69 119 -138 0 69 -119 4636 1380 4 MP
DP
69 119 -138 0 69 -119 5693 769 4 MP
DP
gs 1466 388 4228 4229 MR c np
gr

60 79 -60 79 -60 -79 60 -79 1466 3849 5 MP
/c11 { 0.000000 1.000000 0.000000 sr} bdef
c11
DP
60 79 -60 79 -60 -79 60 -79 2523 3456 5 MP
DP
60 79 -60 79 -60 -79 60 -79 3580 2923 5 MP
DP
60 79 -60 79 -60 -79 60 -79 4636 2323 5 MP
DP
60 79 -60 79 -60 -79 60 -79 5693 1672 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

c10
1406 4088 mt 1526 4088 L
1466 4028 mt 1466 4148 L
2463 3830 mt 2583 3830 L
2523 3770 mt 2523 3890 L
3520 3576 mt 3640 3576 L
3580 3516 mt 3580 3636 L
4576 3310 mt 4696 3310 L
4636 3250 mt 4636 3370 L
5633 3051 mt 5753 3051 L
5693 2991 mt 5693 3111 L
1424 4046 mt 1508 4130 L
1508 4046 mt 1424 4130 L
2481 3788 mt 2565 3872 L
2565 3788 mt 2481 3872 L
3538 3534 mt 3622 3618 L
3622 3534 mt 3538 3618 L
4594 3268 mt 4678 3352 L
4678 3268 mt 4594 3352 L
5651 3009 mt 5735 3093 L
5735 3009 mt 5651 3093 L
gs 1466 388 4228 4229 MR c np
gr

c11
  60   60 1466 4027 FO
  60   60 2523 3852 FO
  60   60 3580 3619 FO
  60   60 4636 3387 FO
  60   60 5693 3139 FO
gs 1466 388 4228 4229 MR c np
0 sg
1057 -431 1056 -449 1057 -479 1057 -521 1466 4057 5 MP stroke
c8
1057 -436 1056 -423 1057 -410 1057 -373 1466 4319 5 MP stroke
c9
1057 -420 1056 -429 1057 -435 1057 -353 1466 4274 5 MP stroke
c10
1057 -611 1056 -1142 1057 -792 1057 -554 1466 3789 5 MP stroke
c11
1057 -651 1056 -600 1057 -533 1057 -393 1466 3770 5 MP stroke
c10
1057 -259 1056 -266 1057 -254 1057 -258 1466 4088 5 MP stroke
c11
1057 -248 1056 -232 1057 -233 1057 -175 1466 4027 5 MP stroke
DA
0 sg
4227 -1691 1466 4616 2 MP stroke
gr

0 sg
DA
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1449 4659 mt 
( ) s
5677  430 mt 
( ) s
SO
6 w
1 sg
0 1260 1102 0 0 -1260 1813 2029 4 MP
PP
-1102 0 0 1260 1102 0 0 -1260 1813 2029 5 MP stroke
4 w
DO
SO
6 w
0 sg
1813  769 mt 2915  769 L
1813 2029 mt 2915 2029 L
2915 2029 mt 2915  769 L
1813 2029 mt 1813  769 L
1813 2029 mt 2915 2029 L
1813 2029 mt 1813  769 L
1813  769 mt 2915  769 L
1813 2029 mt 2915 2029 L
2915 2029 mt 2915  769 L
1813 2029 mt 1813  769 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

2287  927 mt 
(DIAG) s
gs 1813 769 1103 1261 MR c np
24 w
gr

24 w
gs 1922 729 293 293 MR c np
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 2010 856 11 MP
DP
gr

gs 1813 769 1103 1261 MR c np
gr

2287 1101 mt 
(EBE) s
gs 1813 769 1103 1261 MR c np
gs 1922 904 293 293 MR c np
c8
  60   60 2068 1050 FO
gr

c8
gr

c8
0 sg
2287 1276 mt 
(SGS) s
gs 1813 769 1103 1261 MR c np
gs 1922 1078 293 293 MR c np
0 -94 -94 0 0 94 94 0 2021 1177 5 MP
c9
DP
gr

c9
gr

c9
0 sg
2287 1451 mt 
(EMF) s
gs 1813 769 1103 1261 MR c np
gs 1922 1253 293 293 MR c np
69 119 -138 0 69 -119 2068 1478 4 MP
c10
DP
gr

c10
gr

c10
0 sg
2287 1625 mt 
(C-EMF) s
gs 1813 769 1103 1261 MR c np
gs 1922 1427 293 293 MR c np
60 79 -60 79 -60 -79 60 -79 2068 1652 5 MP
c11
DP
gr

c11
gr

c11
0 sg
2287 1800 mt 
(D-EMF) s
gs 1813 769 1103 1261 MR c np
gs 1922 1601 293 293 MR c np
c10
2008 1747 mt 2128 1747 L
2068 1687 mt 2068 1807 L
2026 1705 mt 2110 1789 L
2110 1705 mt 2026 1789 L
gr

c10
gr

c10
0 sg
2287 1974 mt 
(DC-EMF) s
gs 1813 769 1103 1261 MR c np
gr

gs 1922 1776 293 293 MR c np
c11
  60   60 2068 1922 FO
gr

c11
gs 1813 769 1103 1261 MR c np
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5681 3417 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 5681 3417 a 7584 3417 a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 7584
3417 a @beginspecial 126 @llx 215 @lly 504 @urx 589 @ury
3780 @rwi @setspecial
%%BeginDocument: elas2_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\elas2_col.eps
%%CreationDate: 07/24/2006  21:28:32
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   504   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   504   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4537  4489 MR c np
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1433 4761 mt 
(3) s
1994 4616 mt 1994 4573 L
1994  388 mt 1994  431 L
1911 4761 mt 
(3.5) s
2523 4616 mt 2523 4573 L
2523  388 mt 2523  431 L
2490 4761 mt 
(4) s
3051 4616 mt 3051 4573 L
3051  388 mt 3051  431 L
2968 4761 mt 
(4.5) s
3580 4616 mt 3580 4573 L
3580  388 mt 3580  431 L
3547 4761 mt 
(5) s
4108 4616 mt 4108 4573 L
4108  388 mt 4108  431 L
4025 4761 mt 
(5.5) s
4636 4616 mt 4636 4573 L
4636  388 mt 4636  431 L
4603 4761 mt 
(6) s
5165 4616 mt 5165 4573 L
5165  388 mt 5165  431 L
5082 4761 mt 
(6.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5660 4761 mt 
(7) s
1466 4616 mt 1508 4616 L
5693 4616 mt 5651 4616 L
1365 4660 mt 
(3) s
1466 4193 mt 1508 4193 L
5693 4193 mt 5651 4193 L
1365 4237 mt 
(4) s
1466 3770 mt 1508 3770 L
5693 3770 mt 5651 3770 L
1365 3814 mt 
(5) s
1466 3347 mt 1508 3347 L
5693 3347 mt 5651 3347 L
1365 3391 mt 
(6) s
1466 2925 mt 1508 2925 L
5693 2925 mt 5651 2925 L
1365 2969 mt 
(7) s
1466 2502 mt 1508 2502 L
5693 2502 mt 5651 2502 L
1365 2546 mt 
(8) s
1466 2079 mt 1508 2079 L
5693 2079 mt 5651 2079 L
1365 2123 mt 
(9) s
1466 1657 mt 1508 1657 L
5693 1657 mt 5651 1657 L
1298 1701 mt 
(10) s
1466 1234 mt 1508 1234 L
5693 1234 mt 5651 1234 L
1298 1278 mt 
(11) s
1466  811 mt 1508  811 L
5693  811 mt 5651  811 L
1298  855 mt 
(12) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(13) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1408 4008 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 2465 3455 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3522 2982 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4578 2535 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5635 2092 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  60   60 1466 4319 FO
  60   60 2523 3921 FO
  60   60 3580 3510 FO
  60   60 4636 3075 FO
  60   60 5693 2653 FO
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1419 4185 5 MP
/c9 { 1.000000 0.000000 1.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 2476 3805 5 MP
DP
0 -94 -94 0 0 94 94 0 3533 3415 5 MP
DP
0 -94 -94 0 0 94 94 0 4589 2993 5 MP
DP
0 -94 -94 0 0 94 94 0 5646 2561 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

69 119 -138 0 69 -119 1466 3909 4 MP
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
DP
69 119 -138 0 69 -119 2523 3466 4 MP
DP
69 119 -138 0 69 -119 3580 3113 4 MP
DP
69 119 -138 0 69 -119 4636 2895 4 MP
DP
69 119 -138 0 69 -119 5693 2662 4 MP
DP
gs 1466 388 4228 4229 MR c np
gr

60 79 -60 79 -60 -79 60 -79 1466 3744 5 MP
/c11 { 0.000000 1.000000 0.000000 sr} bdef
c11
DP
60 79 -60 79 -60 -79 60 -79 2523 3322 5 MP
DP
60 79 -60 79 -60 -79 60 -79 3580 2799 5 MP
DP
60 79 -60 79 -60 -79 60 -79 4636 2200 5 MP
DP
60 79 -60 79 -60 -79 60 -79 5693 1558 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

c10
1406 3999 mt 1526 3999 L
1466 3939 mt 1466 4059 L
2463 3770 mt 2583 3770 L
2523 3710 mt 2523 3830 L
3520 3523 mt 3640 3523 L
3580 3463 mt 3580 3583 L
4576 3259 mt 4696 3259 L
4636 3199 mt 4636 3319 L
5633 2995 mt 5753 2995 L
5693 2935 mt 5693 3055 L
1424 3957 mt 1508 4041 L
1508 3957 mt 1424 4041 L
2481 3728 mt 2565 3812 L
2565 3728 mt 2481 3812 L
3538 3481 mt 3622 3565 L
3622 3481 mt 3538 3565 L
4594 3217 mt 4678 3301 L
4678 3217 mt 4594 3301 L
5651 2953 mt 5735 3037 L
5735 2953 mt 5651 3037 L
gs 1466 388 4228 4229 MR c np
gr

c11
  60   60 1466 3971 FO
  60   60 2523 3789 FO
  60   60 3580 3562 FO
  60   60 4636 3319 FO
  60   60 5693 3081 FO
gs 1466 388 4228 4229 MR c np
0 sg
1057 -443 1056 -447 1057 -473 1057 -553 1466 4027 5 MP stroke
c8
1057 -422 1056 -435 1057 -411 1057 -398 1466 4319 5 MP stroke
c9
1057 -432 1056 -422 1057 -390 1057 -380 1466 4232 5 MP stroke
c10
1057 -233 1056 -218 1057 -353 1057 -443 1466 3830 5 MP stroke
c11
1057 -642 1056 -599 1057 -523 1057 -422 1466 3665 5 MP stroke
c10
1057 -264 1056 -264 1057 -247 1057 -229 1466 3999 5 MP stroke
c11
1057 -238 1056 -243 1057 -227 1057 -182 1466 3971 5 MP stroke
DA
0 sg
4227 -1691 1466 4616 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 7584 3417 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 7584 3417 a 1888 w Fm(\027)71
b Fn(=)58 b(0)p Fm(:)p Fn(25)4985 5269 y Fm(\027)70 b
Fn(=)58 b(0)p Fm(:)p Fn(4)5688 5269 y
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 5688 5269 a @beginspecial
126 @llx 215 @lly 504 @urx 589 @ury 3780 @rwi @setspecial
%%BeginDocument: elas3_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\elas3_col.eps
%%CreationDate: 07/24/2006  21:28:32
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   504   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   504   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4537  4489 MR c np
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1433 4761 mt 
(3) s
1994 4616 mt 1994 4573 L
1994  388 mt 1994  431 L
1911 4761 mt 
(3.5) s
2523 4616 mt 2523 4573 L
2523  388 mt 2523  431 L
2490 4761 mt 
(4) s
3051 4616 mt 3051 4573 L
3051  388 mt 3051  431 L
2968 4761 mt 
(4.5) s
3580 4616 mt 3580 4573 L
3580  388 mt 3580  431 L
3547 4761 mt 
(5) s
4108 4616 mt 4108 4573 L
4108  388 mt 4108  431 L
4025 4761 mt 
(5.5) s
4636 4616 mt 4636 4573 L
4636  388 mt 4636  431 L
4603 4761 mt 
(6) s
5165 4616 mt 5165 4573 L
5165  388 mt 5165  431 L
5082 4761 mt 
(6.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5660 4761 mt 
(7) s
1466 4616 mt 1508 4616 L
5693 4616 mt 5651 4616 L
1365 4660 mt 
(3) s
1466 4193 mt 1508 4193 L
5693 4193 mt 5651 4193 L
1365 4237 mt 
(4) s
1466 3770 mt 1508 3770 L
5693 3770 mt 5651 3770 L
1365 3814 mt 
(5) s
1466 3347 mt 1508 3347 L
5693 3347 mt 5651 3347 L
1365 3391 mt 
(6) s
1466 2925 mt 1508 2925 L
5693 2925 mt 5651 2925 L
1365 2969 mt 
(7) s
1466 2502 mt 1508 2502 L
5693 2502 mt 5651 2502 L
1365 2546 mt 
(8) s
1466 2079 mt 1508 2079 L
5693 2079 mt 5651 2079 L
1365 2123 mt 
(9) s
1466 1657 mt 1508 1657 L
5693 1657 mt 5651 1657 L
1298 1701 mt 
(10) s
1466 1234 mt 1508 1234 L
5693 1234 mt 5651 1234 L
1298 1278 mt 
(11) s
1466  811 mt 1508  811 L
5693  811 mt 5651  811 L
1298  855 mt 
(12) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(13) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1408 3927 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 2465 3291 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3522 2830 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4578 2384 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5635 1949 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  60   60 1466 4156 FO
  60   60 2523 3789 FO
  60   60 3580 3387 FO
  60   60 4636 2959 FO
  60   60 5693 2531 FO
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1419 4041 5 MP
/c9 { 1.000000 0.000000 1.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 2476 3651 5 MP
DP
0 -94 -94 0 0 94 94 0 3533 3255 5 MP
DP
0 -94 -94 0 0 94 94 0 4589 2832 5 MP
DP
0 -94 -94 0 0 94 94 0 5646 2409 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

69 119 -138 0 69 -119 1466 3953 4 MP
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
DP
69 119 -138 0 69 -119 2523 3615 4 MP
DP
69 119 -138 0 69 -119 3580 3283 4 MP
DP
69 119 -138 0 69 -119 4636 3008 4 MP
DP
69 119 -138 0 69 -119 5693 2760 4 MP
DP
gs 1466 388 4228 4229 MR c np
gr

60 79 -60 79 -60 -79 60 -79 1466 3602 5 MP
/c11 { 0.000000 1.000000 0.000000 sr} bdef
c11
DP
60 79 -60 79 -60 -79 60 -79 2523 3154 5 MP
DP
60 79 -60 79 -60 -79 60 -79 3580 2638 5 MP
DP
60 79 -60 79 -60 -79 60 -79 4636 2040 5 MP
DP
60 79 -60 79 -60 -79 60 -79 5693 1421 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

c10
1406 3852 mt 1526 3852 L
1466 3792 mt 1466 3912 L
2463 3649 mt 2583 3649 L
2523 3589 mt 2523 3709 L
3520 3407 mt 3640 3407 L
3580 3347 mt 3580 3467 L
4576 3146 mt 4696 3146 L
4636 3086 mt 4636 3206 L
5633 2883 mt 5753 2883 L
5693 2823 mt 5693 2943 L
1424 3810 mt 1508 3894 L
1508 3810 mt 1424 3894 L
2481 3607 mt 2565 3691 L
2565 3607 mt 2481 3691 L
3538 3365 mt 3622 3449 L
3622 3365 mt 3538 3449 L
4594 3104 mt 4678 3188 L
4678 3104 mt 4594 3188 L
5651 2841 mt 5735 2925 L
5735 2841 mt 5651 2925 L
gs 1466 388 4228 4229 MR c np
gr

c11
  60   60 1466 3852 FO
  60   60 2523 3665 FO
  60   60 3580 3451 FO
  60   60 4636 3219 FO
  60   60 5693 2964 FO
gs 1466 388 4228 4229 MR c np
0 sg
1057 -435 1056 -446 1057 -461 1057 -636 1466 3946 5 MP stroke
c8
1057 -428 1056 -428 1057 -402 1057 -367 1466 4156 5 MP stroke
c9
1057 -423 1056 -423 1057 -396 1057 -390 1466 4088 5 MP stroke
c10
1057 -248 1056 -275 1057 -332 1057 -338 1466 3874 5 MP stroke
c11
1057 -619 1056 -598 1057 -516 1057 -448 1466 3523 5 MP stroke
c10
1057 -263 1056 -261 1057 -242 1057 -203 1466 3852 5 MP stroke
c11
1057 -255 1056 -232 1057 -214 1057 -187 1466 3852 5 MP stroke
DA
0 sg
4227 -1691 1466 4616 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5688 5269 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 5688 5269 a 7576 5269 a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 7576
5269 a @beginspecial 126 @llx 215 @lly 504 @urx 589 @ury
3780 @rwi @setspecial
%%BeginDocument: elas4_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\elas4_col.eps
%%CreationDate: 07/24/2006  21:28:32
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   504   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   504   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4537  4489 MR c np
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1433 4761 mt 
(3) s
1994 4616 mt 1994 4573 L
1994  388 mt 1994  431 L
1911 4761 mt 
(3.5) s
2523 4616 mt 2523 4573 L
2523  388 mt 2523  431 L
2490 4761 mt 
(4) s
3051 4616 mt 3051 4573 L
3051  388 mt 3051  431 L
2968 4761 mt 
(4.5) s
3580 4616 mt 3580 4573 L
3580  388 mt 3580  431 L
3547 4761 mt 
(5) s
4108 4616 mt 4108 4573 L
4108  388 mt 4108  431 L
4025 4761 mt 
(5.5) s
4636 4616 mt 4636 4573 L
4636  388 mt 4636  431 L
4603 4761 mt 
(6) s
5165 4616 mt 5165 4573 L
5165  388 mt 5165  431 L
5082 4761 mt 
(6.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5660 4761 mt 
(7) s
1466 4616 mt 1508 4616 L
5693 4616 mt 5651 4616 L
1365 4660 mt 
(3) s
1466 4193 mt 1508 4193 L
5693 4193 mt 5651 4193 L
1365 4237 mt 
(4) s
1466 3770 mt 1508 3770 L
5693 3770 mt 5651 3770 L
1365 3814 mt 
(5) s
1466 3347 mt 1508 3347 L
5693 3347 mt 5651 3347 L
1365 3391 mt 
(6) s
1466 2925 mt 1508 2925 L
5693 2925 mt 5651 2925 L
1365 2969 mt 
(7) s
1466 2502 mt 1508 2502 L
5693 2502 mt 5651 2502 L
1365 2546 mt 
(8) s
1466 2079 mt 1508 2079 L
5693 2079 mt 5651 2079 L
1365 2123 mt 
(9) s
1466 1657 mt 1508 1657 L
5693 1657 mt 5651 1657 L
1298 1701 mt 
(10) s
1466 1234 mt 1508 1234 L
5693 1234 mt 5651 1234 L
1298 1278 mt 
(11) s
1466  811 mt 1508  811 L
5693  811 mt 5651  811 L
1298  855 mt 
(12) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(13) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1408 3855 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 2465 2842 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3522 2280 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4578 1835 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5635 1400 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  60   60 1466 3682 FO
  60   60 2523 3227 FO
  60   60 3580 2789 FO
  60   60 4636 2355 FO
  60   60 5693 1926 FO
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1419 3557 5 MP
/c9 { 1.000000 0.000000 1.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 2476 3092 5 MP
DP
0 -94 -94 0 0 94 94 0 3533 2666 5 MP
DP
0 -94 -94 0 0 94 94 0 4589 2242 5 MP
DP
0 -94 -94 0 0 94 94 0 5646 1820 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

69 119 -138 0 69 -119 1466 3849 4 MP
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
DP
69 119 -138 0 69 -119 2523 3426 4 MP
DP
69 119 -138 0 69 -119 3580 2976 4 MP
DP
69 119 -138 0 69 -119 4636 2304 4 MP
DP
69 119 -138 0 69 -119 5693 1179 4 MP
DP
gs 1466 388 4228 4229 MR c np
gr

60 79 -60 79 -60 -79 60 -79 1466 3160 5 MP
/c11 { 0.000000 1.000000 0.000000 sr} bdef
c11
DP
60 79 -60 79 -60 -79 60 -79 2523 2625 5 MP
DP
60 79 -60 79 -60 -79 60 -79 3580 2126 5 MP
DP
60 79 -60 79 -60 -79 60 -79 4636 1598 5 MP
DP
60 79 -60 79 -60 -79 60 -79 5693 949 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

c10
1406 3418 mt 1526 3418 L
1466 3358 mt 1466 3478 L
2463 3174 mt 2583 3174 L
2523 3114 mt 2523 3234 L
3520 2949 mt 3640 2949 L
3580 2889 mt 3580 3009 L
4576 2687 mt 4696 2687 L
4636 2627 mt 4636 2747 L
5633 2428 mt 5753 2428 L
5693 2368 mt 5693 2488 L
1424 3376 mt 1508 3460 L
1508 3376 mt 1424 3460 L
2481 3132 mt 2565 3216 L
2565 3132 mt 2481 3216 L
3538 2907 mt 3622 2991 L
3622 2907 mt 3538 2991 L
4594 2645 mt 4678 2729 L
4678 2645 mt 4594 2729 L
5651 2386 mt 5735 2470 L
5735 2386 mt 5651 2470 L
gs 1466 388 4228 4229 MR c np
gr

c11
  60   60 1466 3367 FO
  60   60 2523 3182 FO
  60   60 3580 2974 FO
  60   60 4636 2748 FO
  60   60 5693 2502 FO
gs 1466 388 4228 4229 MR c np
0 sg
1057 -435 1056 -445 1057 -562 1057 -1013 1466 3874 5 MP stroke
c8
1057 -429 1056 -434 1057 -438 1057 -455 1466 3682 5 MP stroke
c9
1057 -422 1056 -424 1057 -426 1057 -465 1466 3604 5 MP stroke
c10
1057 -1125 1056 -672 1057 -450 1057 -423 1466 3770 5 MP stroke
c11
1057 -649 1056 -528 1057 -499 1057 -535 1466 3081 5 MP stroke
c10
1057 -259 1056 -262 1057 -225 1057 -244 1466 3418 5 MP stroke
c11
1057 -246 1056 -226 1057 -208 1057 -185 1466 3367 5 MP stroke
DA
0 sg
4227 -1691 1466 4616 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 7576 5269 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 7576 5269 a 1889 w Fm(\027)71
b Fn(=)57 b(0)p Fm(:)p Fn(49)4781 5301 y
 0 setgray
 4781 5301 a
10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19
b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g(p)n(.14/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 15 15
TeXDict begin 15 14 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 15/View [ /XYZ null null null ] /Title (Adding Plasticity)
/OUT pdfmark end
 5001 3450 a BlueViolet 6457 1364 a Fr(Ad)m(ding)77
b(Plasticity)p Black 8690 1364 a
 0 setgray
 8690 1364 a 4781 1882
a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794 a Fp(\017)p
Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044
1794 a OliveGreen 102 w Fq(elasto-plastic)p Black 6392
1794 a
 0. setgray
 6392 1794 a 60 w Fq(constitutiv)-5 b(e)59 b(model:)73
b(yield)59 b(function)g Fm(F)28 b Fq(,)5146 2038 y(plastic)60
b(potential)f(function)g Fm(P)28 b Fq(,)60 b(hardening/softening)e(r)s
(ule)p Black BlueViolet 4941 2475 a Fp(\017)p Black 5044
2475 a
 0. setgray
 5044 2475 a Black 5044 2475 a
 0. setgray
 5044 2475 a 102
w Fq(stress-str)n(ain)h(relationship)p Black Black 6279
2833 a
 0. setgray
 6279 2833 a Red 102 w Fb(\033)65 b Fn(=)58 b Fl(E)6956
2758 y Fj(ep)7118 2833 y Fb(\017)p Fq(,)427 b Fl(E)7857
2758 y Fj(ep)8077 2833 y Fn(=)57 b Fl(E)8444 2758 y Fj(el)8623
2833 y Fp(\000)45 b Fl(E)8982 2758 y Fj(pl)p Black 9180
2833 a
 0. setgray
 9180 2833 a Black BlueViolet 4941 3359 a Fp(\017)p
Black 5044 3359 a
 0. setgray
 5044 3359 a Black 5044 3359 a
 0. setgray
 5044
3359 a 102 w Fq(assume)58 b(perf)-6 b(ect)59 b(plasticity)h(\(z)m(ero)e
(hardening/softening\),)5146 3605 y(associated)g(plastic)i(\003o)m(w)e
(\(yield)i Fn(=)g Fq(plastic)f(potential\))p OliveGreen
6812 4435 a Fl(E)6965 4350 y Fj(pl)7161 4435 y Fn(=)7396
4213 y Fl(E)7549 4138 y Fj(el)7702 4073 y Fm(@)11 b(F)p
7702 4165 278 9 v 7707 4355 a(@)g Fb(\033)8021 4073 y
Fm(@)g(F)p 8021 4165 V 8026 4355 a(@)g Fb(\033)8319 3984
y Fj(T)8442 4213 y Fl(E)8595 4128 y Fj(el)p 7396 4388
1332 9 v 7560 4607 a Fm(@)g(F)p 7560 4700 278 9 v 7565
4889 a(@)g Fb(\033)7858 4518 y Fj(T)7981 4747 y Fl(E)8134
4662 y Fj(el)8287 4607 y Fm(@)g(F)p 8287 4700 V 8292
4889 a(@)g Fb(\033)p Black 5146 5117 a
 0. setgray
 5146 5117 a Black
BlueViolet 4941 5553 a Fp(\017)p Black 5044 5553 a
 0. setgray
 5044
5553 a Black 5044 5553 a
 0. setgray
 5044 5553 a 102 w Fl(E)5299
5478 y Fj(ep)5521 5553 y Fq(is)59 b(a)p Red 59 w(r)n(ank-one)f(update)p
Black 7466 5553 a
 0. setgray
 7466 5553 a 58 w Fq(of)i Fl(E)7915
5478 y Fj(el)4781 5799 y
 0 setgray
 4781 5799 a 10245 5222 a
 0 setgray
 10245
5222 a 9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q
(uar)r(y)g(2007)g(\226)g(p)n(.15/24)10712 5736 y
 0 setgray
 10712
5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 16 16
TeXDict begin 16 15 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 16/View [ /XYZ null null null ] /Title (Footing test problem)
/OUT pdfmark end
 5001 3450 a BlueViolet 6207 1364 a Fr(Footing)78 b(test)e(pr)-6
b(ob)m(lem)p Black 8937 1364 a
 0 setgray
 8937 1364 a 4781 1882
a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794 a Fp(\017)p
Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044
1794 a 102 w Fq(plane)59 b(str)n(ain)p OliveGreen 59
w(r)s(igid)h(f)-6 b(ooting)p Black 7408 1794 a
 0. setgray
 7408 1794
a 59 w Fq(modelled)59 b(b)l(y)f(prescr)s(ibing)5146 2038
y(v)-5 b(er)9 b(tically)59 b(do)m(wnw)m(ards)f(displacements)g(on)h
(selected)5146 2282 y(surf)-6 b(ace)58 b(nodes)p Black
BlueViolet 4941 2615 a Fp(\017)p Black 5044 2615 a
 0. setgray
 5044
2615 a Black 5044 2615 a
 0. setgray
 5044 2615 a 102 w Fq(unstr)s(uctured)h(mesh)f
(of)p Red 59 w(linear)i(str)n(ain)p Black 8316 2615 a
 0. setgray

8316 2615 a 59 w Fq(tr)s(iangles)p Black Black 5308 5000
a
 0. setgray
 5308 5000 a 5410 5000 a
 currentpoint currentpoint translate 0.4 0.4 scale neg exch neg exch
translate
 5410 5000 a @beginspecial 78
@llx 285 @lly 483 @urx 588 @ury 4050 @rwi @setspecial
%%BeginDocument: footing_fig2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-footingfig.vsd)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 09:27:13 11/23/05
%%For: (des0cea)
%%DocumentData: Clean7Bit
%%BoundingBox: 78 285 483 588
%%HiResBoundingBox: 0.0 0.0 595.0 842.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRomanPS-ItalicMT
[/N11/TimesNewRomanPS-ItalicMT 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1190 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:3c9dde9e-23ff-4093-9ec3-bac0034cf206' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:3c9dde9e-23ff-4093-9ec3-bac0034cf206' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2005-11-23T09:24:54Z' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2005-11-23T09:24:54Z'></rdf:Description>
<rdf:Description rdf:about='uuid:3c9dde9e-23ff-4093-9ec3-bac0034cf206' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:910a7fe2-6702-4687-bc59-d9f38aa59e60'/>
<rdf:Description rdf:about='uuid:3c9dde9e-23ff-4093-9ec3-bac0034cf206' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Visio-footingfig.vsd</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>des0cea</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 595 842 rectclip
/N12 [/DeviceRGB] /ColorSpace defineRes pop

0.0 0.0 595.0 842.0 re
W
n
n
255.119995 311.899994 141.720001 141.720001 re
0.69804 0.69804 0.69804 setrgbcolor
f
1 J
1 j
0.72 w
n
240.959991 482.0 m
240.959991 464.539978 l
0.0 0.0 0.0  setrgbcolor
S
n
237.0 465.5 m
240.959991 453.619995 l
244.919998 465.5 l
237.0 465.5 l
eofill
n
255.119995 482.0 m
255.119995 464.539978 l
S
n
251.159988 465.5 m
255.119995 453.619995 l
259.079987 465.5 l
251.159988 465.5 l
eofill
n
269.339996 482.0 m
269.339996 464.539978 l
S
n
265.380005 465.5 m
269.339996 453.619995 l
273.300018 465.5 l
265.380005 465.5 l
eofill
n
240.959991 510.319977 m
240.959991 538.700012 l
269.339996 510.319977 m
269.339996 538.700012 l
249.900009 538.700012 m
260.399994 538.700012 l
S
n
250.679993 535.459961 m
240.959991 538.700012 l
250.679993 541.940002 l
250.679993 535.459961 l
eofill
n
259.619995 541.940002 m
269.339996 538.700012 l
259.619995 535.459961 l
259.619995 541.940002 l
eofill
n
113.400002 453.619995 m
396.839996 453.619995 l
S
1.2 w
n
113.400002 453.619995 m
113.400002 311.899994 l
396.839996 311.899994 l
396.839996 453.619995 l
S
0.0 sg
247.5 546.440308 m
/N11 12.0 Tf
(2B)
[6.0 7.331909 ] pdfxs
n
255.479996 518.839966 m
255.479996 513.799988 l
255.119995 513.440002 l
254.759995 513.799988 l
254.759995 518.839966 l
254.87999 519.080017 l
255.119995 519.200012 l
255.419998 519.080017 l
255.479996 518.839966 l
h
255.479996 510.200012 m
255.119995 509.839996 l
254.759995 510.200012 l
255.119995 510.559998 l
255.479996 510.200012 l
h
255.479996 506.600006 m
255.479996 501.559998 l
255.119995 501.200012 l
254.759995 501.559998 l
254.759995 506.600006 l
255.119995 506.959991 l
255.479996 506.600006 l
h
255.479996 497.959991 m
255.119995 497.600006 l
254.759995 497.959991 l
255.119995 498.319977 l
255.479996 497.959991 l
h
255.479996 494.359985 m
255.479996 489.319977 l
255.119995 488.959991 l
254.759995 489.319977 l
254.759995 494.359985 l
255.119995 494.720001 l
255.479996 494.359985 l
h
255.479996 485.720001 m
255.119995 485.359985 l
254.759995 485.720001 l
255.119995 486.079987 l
255.479996 485.720001 l
h
255.479996 482.119995 m
255.479996 477.079987 l
255.119995 476.720001 l
254.759995 477.079987 l
254.759995 482.119995 l
255.119995 482.47998 l
255.479996 482.119995 l
h
255.479996 473.47998 m
255.119995 473.119995 l
254.759995 473.47998 l
255.119995 473.839996 l
255.479996 473.47998 l
h
255.479996 469.879974 m
255.479996 464.839996 l
255.119995 464.47998 l
254.759995 464.839996 l
254.759995 469.879974 l
255.119995 470.23999 l
255.479996 469.879974 l
h
255.479996 461.23999 m
255.119995 460.880005 l
254.759995 461.23999 l
255.119995 461.600006 l
255.479996 461.23999 l
h
255.479996 457.639984 m
255.479996 452.600006 l
255.119995 452.23999 l
254.759995 452.600006 l
254.759995 457.639984 l
255.119995 458.0 l
255.479996 457.639984 l
h
255.479996 449.0 m
255.119995 448.639984 l
254.759995 449.0 l
255.119995 449.359985 l
255.479996 449.0 l
h
255.479996 445.399994 m
255.479996 440.359985 l
255.119995 440.0 l
254.759995 440.359985 l
254.759995 445.399994 l
255.119995 445.759979 l
255.479996 445.399994 l
h
255.479996 436.759979 m
255.119995 436.399994 l
254.759995 436.759979 l
255.119995 437.119995 l
255.479996 436.759979 l
h
255.479996 433.160004 m
255.479996 428.119995 l
255.119995 427.759979 l
254.759995 428.119995 l
254.759995 433.160004 l
255.119995 433.519989 l
255.479996 433.160004 l
h
255.479996 424.519989 m
255.119995 424.160004 l
254.759995 424.519989 l
255.119995 424.880005 l
255.479996 424.519989 l
h
255.479996 420.919983 m
255.479996 415.880005 l
255.119995 415.519989 l
254.759995 415.880005 l
254.759995 420.919983 l
255.119995 421.279999 l
255.479996 420.919983 l
h
255.479996 412.279999 m
255.119995 411.919983 l
254.759995 412.279999 l
255.119995 412.639984 l
255.479996 412.279999 l
h
255.479996 408.679993 m
255.479996 403.639984 l
255.119995 403.279999 l
254.759995 403.639984 l
254.759995 408.679993 l
255.119995 409.039978 l
255.479996 408.679993 l
h
255.479996 400.039978 m
255.119995 399.679993 l
254.759995 400.039978 l
255.119995 400.399994 l
255.479996 400.039978 l
h
255.479996 396.440002 m
255.479996 391.399994 l
255.119995 391.039978 l
254.759995 391.399994 l
254.759995 396.440002 l
255.119995 396.800018 l
255.479996 396.440002 l
h
255.479996 387.800018 m
255.119995 387.440002 l
254.759995 387.800018 l
255.119995 388.160004 l
255.479996 387.800018 l
h
255.479996 384.200012 m
255.479996 379.160004 l
255.119995 378.800018 l
254.759995 379.160004 l
254.759995 384.200012 l
255.119995 384.559998 l
255.479996 384.200012 l
h
255.479996 375.559998 m
255.119995 375.200012 l
254.759995 375.559998 l
255.119995 375.919983 l
255.479996 375.559998 l
h
255.479996 371.959991 m
255.479996 366.919983 l
255.119995 366.559998 l
254.759995 366.919983 l
254.759995 371.959991 l
255.119995 372.319977 l
255.479996 371.959991 l
h
255.479996 363.319977 m
255.119995 362.959991 l
254.759995 363.319977 l
255.119995 363.679993 l
255.479996 363.319977 l
h
255.479996 359.720001 m
255.479996 354.679993 l
255.119995 354.320007 l
254.759995 354.679993 l
254.759995 359.720001 l
255.119995 360.079987 l
255.479996 359.720001 l
h
255.479996 351.079987 m
255.119995 350.720001 l
254.759995 351.079987 l
255.119995 351.440002 l
255.479996 351.079987 l
h
255.479996 347.47998 m
255.479996 342.440002 l
255.119995 342.079987 l
254.759995 342.440002 l
254.759995 347.47998 l
255.119995 347.839996 l
255.479996 347.47998 l
h
255.479996 338.839996 m
255.119995 338.47998 l
254.759995 338.839996 l
255.119995 339.200012 l
255.479996 338.839996 l
h
255.479996 335.23999 m
255.479996 330.200012 l
255.119995 329.839996 l
254.759995 330.200012 l
254.759995 335.23999 l
255.119995 335.600006 l
255.479996 335.23999 l
h
255.479996 326.600006 m
255.119995 326.23999 l
254.759995 326.600006 l
255.119995 326.959991 l
255.479996 326.600006 l
h
255.479996 323.0 m
255.479996 317.959991 l
255.119995 317.600006 l
254.759995 317.959991 l
254.759995 323.0 l
255.119995 323.359985 l
255.479996 323.0 l
h
255.479996 314.359985 m
255.119995 314.0 l
254.759995 314.359985 l
255.119995 314.720001 l
255.479996 314.359985 l
h
255.479996 310.759979 m
255.479996 305.720001 l
255.119995 305.359985 l
254.759995 305.720001 l
254.759995 310.759979 l
255.119995 311.119995 l
255.479996 310.759979 l
h
255.479996 302.119995 m
255.119995 301.759979 l
254.759995 302.119995 l
255.119995 302.47998 l
255.479996 302.119995 l
h
255.479996 298.519989 m
255.479996 297.73999 l
255.419998 297.5 l
255.119995 297.380005 l
254.87999 297.5 l
254.759995 297.73999 l
254.759995 298.519989 l
255.119995 298.880005 l
255.479996 298.519989 l
0.0 0.0 0.0 setrgbcolor
f
n
238.139999 493.339996 34.020004 15.600006 re
1.0 1.0 1.0  setrgbcolor
f
0.0 sg
246.119995 497.540283 m
(C/L)
[8.005289 3.337198 6.673197 ] pdfxs
0.72 w
n
113.400002 459.319977 m
113.400002 567.019958 l
396.839996 459.319977 m
396.839996 567.019958 l
122.339996 567.019958 m
387.959991 567.019958 l
0.0 0.0 0.0 setrgbcolor
S
n
123.119995 563.779968 m
113.400002 567.019958 l
123.119995 570.26001 l
123.119995 563.779968 l
eofill
n
387.119995 570.26001 m
396.839996 567.019958 l
387.119995 563.779968 l
387.119995 570.26001 l
eofill
0.0 sg
245.459991 576.320313 m
(20B)
[5.9964 5.9964 7.328309 ] pdfxs
n
274.97998 469.940002 121.859985 24.119995 re
1.0 1.0 1.0 setrgbcolor
f
0.0 sg
288.419983 485.600281 m
(Uniform prescribed )
[8.667602 6.0036 3.339598 3.339598 6.0036 4.671691 8.667602 3.0 6.0036 4.617691 5.331603 
4.671691 5.331603 4.671691 3.339598 6.0036 5.331603 6.0036 3.0 ] pdfxs
284.399994 471.200287 m
(vertical displacement)
[5.328003 5.328003 4.668091 3.335999 3.335999 5.328003 6.0 3.335999 3.0 6.0 3.335999 
4.668091 6.0 3.335999 6.0 5.328003 5.328003 8.664001 5.328003 6.0 3.335999 ] pdfxs
n
402.539978 453.619995 m
439.380005 453.619995 l
402.539978 311.899994 m
439.380005 311.899994 l
439.380005 444.73999 m
439.380005 320.839996 l
0.0 0.0 0.0 setrgbcolor
S
n
436.139984 443.899994 m
439.380005 453.619995 l
442.619995 443.899994 l
436.139984 443.899994 l
eofill
n
442.619995 321.619995 m
439.380005 311.899994 l
436.139984 321.619995 l
442.619995 321.619995 l
eofill
0.0 sg
449.940002 392.480286 m
/N11 [0.0 -12.0 12.0 0.0 0.0 0.0] Tf
(10B)
[-5.9964 -5.9964 -7.328309 ] pdfys
n
100.019997 418.220001 m
112.259995 425.300018 l
100.019997 432.380005 l
100.019997 418.220001 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
0.24 w
n
100.019997 418.220001 m
112.259995 425.300018 l
100.019997 432.380005 l
100.019997 418.220001 l
h
0.0 0.0 0.0  setrgbcolor
S
n
94.139999 429.259979 m
94.139999 430.819977 95.400002 432.079987 96.959999 432.079987 c
98.519997 432.079987 99.779999 430.819977 99.779999 429.259979 c
99.779999 427.700012 98.519997 426.440002 96.959999 426.440002 c
95.400002 426.440002 94.139999 427.700012 94.139999 429.259979 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
94.139999 429.259979 m
94.139999 430.819977 95.400002 432.079987 96.959999 432.079987 c
98.519997 432.079987 99.779999 430.819977 99.779999 429.259979 c
99.779999 427.700012 98.519997 426.440002 96.959999 426.440002 c
95.400002 426.440002 94.139999 427.700012 94.139999 429.259979 c
h
0.0 0.0 0.0  setrgbcolor
S
n
94.139999 421.339996 m
94.139999 422.899994 95.400002 424.160004 96.959999 424.160004 c
98.519997 424.160004 99.779999 422.899994 99.779999 421.339996 c
99.779999 419.779999 98.519997 418.519989 96.959999 418.519989 c
95.400002 418.519989 94.139999 419.779999 94.139999 421.339996 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
94.139999 421.339996 m
94.139999 422.899994 95.400002 424.160004 96.959999 424.160004 c
98.519997 424.160004 99.779999 422.899994 99.779999 421.339996 c
99.779999 419.779999 98.519997 418.519989 96.959999 418.519989 c
95.400002 418.519989 94.139999 419.779999 94.139999 421.339996 c
h
0.0 0.0 0.0  setrgbcolor
S
n
89.040001 416.779999 4.5 17.040009 re
0 sg
f
n
101.099998 378.5 m
113.400002 385.639984 l
101.099998 392.720001 l
101.099998 378.5 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
101.099998 378.5 m
113.400002 385.639984 l
101.099998 392.720001 l
101.099998 378.5 l
h
0.0 0.0 0.0  setrgbcolor
S
n
95.279999 389.600006 m
95.279999 391.160004 96.540001 392.419983 98.099998 392.419983 c
99.659996 392.419983 100.919998 391.160004 100.919998 389.600006 c
100.919998 388.039978 99.659996 386.720001 98.099998 386.720001 c
96.540001 386.720001 95.279999 388.039978 95.279999 389.600006 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
95.279999 389.600006 m
95.279999 391.160004 96.540001 392.419983 98.099998 392.419983 c
99.659996 392.419983 100.919998 391.160004 100.919998 389.600006 c
100.919998 388.039978 99.659996 386.720001 98.099998 386.720001 c
96.540001 386.720001 95.279999 388.039978 95.279999 389.600006 c
h
0.0 0.0 0.0  setrgbcolor
S
n
95.279999 381.619995 m
95.279999 383.179993 96.540001 384.5 98.099998 384.5 c
99.659996 384.5 100.919998 383.179993 100.919998 381.619995 c
100.919998 380.059998 99.659996 378.800018 98.099998 378.800018 c
96.540001 378.800018 95.279999 380.059998 95.279999 381.619995 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
95.279999 381.619995 m
95.279999 383.179993 96.540001 384.5 98.099998 384.5 c
99.659996 384.5 100.919998 383.179993 100.919998 381.619995 c
100.919998 380.059998 99.659996 378.800018 98.099998 378.800018 c
96.540001 378.800018 95.279999 380.059998 95.279999 381.619995 c
h
0.0 0.0 0.0  setrgbcolor
S
n
90.18 377.119995 4.5 16.980011 re
0 sg
f
n
101.099998 333.139984 m
113.400002 340.279999 l
101.099998 347.359985 l
101.099998 333.139984 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
101.099998 333.139984 m
113.400002 340.279999 l
101.099998 347.359985 l
101.099998 333.139984 l
h
0.0 0.0 0.0  setrgbcolor
S
n
95.279999 344.23999 m
95.279999 345.800018 96.540001 347.059998 98.099998 347.059998 c
99.659996 347.059998 100.919998 345.800018 100.919998 344.23999 c
100.919998 342.679993 99.659996 341.419983 98.099998 341.419983 c
96.540001 341.419983 95.279999 342.679993 95.279999 344.23999 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
95.279999 344.23999 m
95.279999 345.800018 96.540001 347.059998 98.099998 347.059998 c
99.659996 347.059998 100.919998 345.800018 100.919998 344.23999 c
100.919998 342.679993 99.659996 341.419983 98.099998 341.419983 c
96.540001 341.419983 95.279999 342.679993 95.279999 344.23999 c
h
0.0 0.0 0.0  setrgbcolor
S
n
95.279999 336.259979 m
95.279999 337.880005 96.540001 339.139984 98.099998 339.139984 c
99.659996 339.139984 100.919998 337.880005 100.919998 336.259979 c
100.919998 334.700012 99.659996 333.440002 98.099998 333.440002 c
96.540001 333.440002 95.279999 334.700012 95.279999 336.259979 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
95.279999 336.259979 m
95.279999 337.880005 96.540001 339.139984 98.099998 339.139984 c
99.659996 339.139984 100.919998 337.880005 100.919998 336.259979 c
100.919998 334.700012 99.659996 333.440002 98.099998 333.440002 c
96.540001 333.440002 95.279999 334.700012 95.279999 336.259979 c
h
0.0 0.0 0.0  setrgbcolor
S
n
90.18 331.759979 4.5 16.980011 re
0 sg
f
n
411.720001 347.359985 m
399.419983 340.279999 l
411.720001 333.139984 l
411.720001 347.359985 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
411.720001 347.359985 m
399.419983 340.279999 l
411.720001 333.139984 l
411.720001 347.359985 l
h
0.0 0.0 0.0  setrgbcolor
S
n
417.539978 336.259979 m
417.539978 334.700012 416.279999 333.440002 414.720001 333.440002 c
413.160004 333.440002 411.899994 334.700012 411.899994 336.259979 c
411.899994 337.880005 413.160004 339.139984 414.720001 339.139984 c
416.279999 339.139984 417.539978 337.880005 417.539978 336.259979 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
417.539978 336.259979 m
417.539978 334.700012 416.279999 333.440002 414.720001 333.440002 c
413.160004 333.440002 411.899994 334.700012 411.899994 336.259979 c
411.899994 337.880005 413.160004 339.139984 414.720001 339.139984 c
416.279999 339.139984 417.539978 337.880005 417.539978 336.259979 c
h
0.0 0.0 0.0  setrgbcolor
S
n
417.539978 344.23999 m
417.539978 342.679993 416.279999 341.419983 414.720001 341.419983 c
413.160004 341.419983 411.899994 342.679993 411.899994 344.23999 c
411.899994 345.800018 413.160004 347.059998 414.720001 347.059998 c
416.279999 347.059998 417.539978 345.800018 417.539978 344.23999 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
417.539978 344.23999 m
417.539978 342.679993 416.279999 341.419983 414.720001 341.419983 c
413.160004 341.419983 411.899994 342.679993 411.899994 344.23999 c
411.899994 345.800018 413.160004 347.059998 414.720001 347.059998 c
416.279999 347.059998 417.539978 345.800018 417.539978 344.23999 c
h
0.0 0.0 0.0  setrgbcolor
S
n
418.139984 331.759979 4.5 16.980011 re
0 sg
f
n
411.720001 389.839996 m
399.419983 382.759979 l
411.720001 375.679993 l
411.720001 389.839996 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
411.720001 389.839996 m
399.419983 382.759979 l
411.720001 375.679993 l
411.720001 389.839996 l
h
0.0 0.0 0.0  setrgbcolor
S
n
417.539978 378.800018 m
417.539978 377.23999 416.279999 375.97998 414.720001 375.97998 c
413.160004 375.97998 411.899994 377.23999 411.899994 378.800018 c
411.899994 380.359985 413.160004 381.619995 414.720001 381.619995 c
416.279999 381.619995 417.539978 380.359985 417.539978 378.800018 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
417.539978 378.800018 m
417.539978 377.23999 416.279999 375.97998 414.720001 375.97998 c
413.160004 375.97998 411.899994 377.23999 411.899994 378.800018 c
411.899994 380.359985 413.160004 381.619995 414.720001 381.619995 c
416.279999 381.619995 417.539978 380.359985 417.539978 378.800018 c
h
0.0 0.0 0.0  setrgbcolor
S
n
417.539978 386.720001 m
417.539978 385.160004 416.279999 383.899994 414.720001 383.899994 c
413.160004 383.899994 411.899994 385.160004 411.899994 386.720001 c
411.899994 388.279999 413.160004 389.600006 414.720001 389.600006 c
416.279999 389.600006 417.539978 388.279999 417.539978 386.720001 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
417.539978 386.720001 m
417.539978 385.160004 416.279999 383.899994 414.720001 383.899994 c
413.160004 383.899994 411.899994 385.160004 411.899994 386.720001 c
411.899994 388.279999 413.160004 389.600006 414.720001 389.600006 c
416.279999 389.600006 417.539978 388.279999 417.539978 386.720001 c
h
0.0 0.0 0.0  setrgbcolor
S
n
418.139984 374.300018 4.5 16.980011 re
0 sg
f
n
411.720001 432.380005 m
399.419983 425.300018 l
411.720001 418.220001 l
411.720001 432.380005 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
411.720001 432.380005 m
399.419983 425.300018 l
411.720001 418.220001 l
411.720001 432.380005 l
h
0.0 0.0 0.0  setrgbcolor
S
n
417.539978 421.339996 m
417.539978 419.779999 416.279999 418.519989 414.720001 418.519989 c
413.160004 418.519989 411.899994 419.779999 411.899994 421.339996 c
411.899994 422.899994 413.160004 424.160004 414.720001 424.160004 c
416.279999 424.160004 417.539978 422.899994 417.539978 421.339996 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
417.539978 421.339996 m
417.539978 419.779999 416.279999 418.519989 414.720001 418.519989 c
413.160004 418.519989 411.899994 419.779999 411.899994 421.339996 c
411.899994 422.899994 413.160004 424.160004 414.720001 424.160004 c
416.279999 424.160004 417.539978 422.899994 417.539978 421.339996 c
h
0.0 0.0 0.0  setrgbcolor
S
n
417.539978 429.259979 m
417.539978 427.700012 416.279999 426.440002 414.720001 426.440002 c
413.160004 426.440002 411.899994 427.700012 411.899994 429.259979 c
411.899994 430.819977 413.160004 432.079987 414.720001 432.079987 c
416.279999 432.079987 417.539978 430.819977 417.539978 429.259979 c
0.86667 0.88627 0.80392  setrgbcolor
eofill
n
417.539978 429.259979 m
417.539978 427.700012 416.279999 426.440002 414.720001 426.440002 c
413.160004 426.440002 411.899994 427.700012 411.899994 429.259979 c
411.899994 430.819977 413.160004 432.079987 414.720001 432.079987 c
416.279999 432.079987 417.539978 430.819977 417.539978 429.259979 c
h
0.0 0.0 0.0  setrgbcolor
S
n
418.139984 416.779999 4.5 17.040009 re
0 sg
f
n
133.259995 295.459991 16.979996 4.559998 re
f
n
148.860001 299.600006 m
141.779999 311.899994 l
134.639999 299.600006 l
148.860001 299.600006 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
148.860001 299.600006 m
141.779999 311.899994 l
134.639999 299.600006 l
148.860001 299.600006 l
h
0.0 0.0 0.0  setrgbcolor
S
n
197.039993 295.459991 16.979996 4.559998 re
0 sg
f
n
212.639999 299.600006 m
205.559998 311.899994 l
198.419998 299.600006 l
212.639999 299.600006 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
212.639999 299.600006 m
205.559998 311.899994 l
198.419998 299.600006 l
212.639999 299.600006 l
h
0.0 0.0 0.0  setrgbcolor
S
n
284.880005 295.459991 17.040009 4.559998 re
0 sg
f
n
300.47998 299.600006 m
293.399994 311.899994 l
286.320007 299.600006 l
300.47998 299.600006 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
300.47998 299.600006 m
293.399994 311.899994 l
286.320007 299.600006 l
300.47998 299.600006 l
h
0.0 0.0 0.0  setrgbcolor
S
n
358.619995 295.459991 16.980011 4.559998 re
0 sg
f
n
374.220001 299.600006 m
367.079987 311.899994 l
360.0 299.600006 l
374.220001 299.600006 l
0.9098 0.93333 0.96863 setrgbcolor
eofill
n
374.220001 299.600006 m
367.079987 311.899994 l
360.0 299.600006 l
374.220001 299.600006 l
h
0.0 0.0 0.0  setrgbcolor
S
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font TimesNewRomanPS-ItalicMT
%%EOF

%%EndDocument
 @endspecial 5410 5000 a
 currentpoint currentpoint translate 1 0.4 div 1 0.4 div scale neg
exch neg exch translate
 5410 5000 a 8269 5000 a
 currentpoint currentpoint translate 0.3 0.3 scale neg exch neg exch
translate
 8269
5000 a @beginspecial 136 @llx 224 @lly 499 @urx 586 @ury
3630 @rwi @setspecial
%%BeginDocument: grid.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./grid.eps
%%CreationDate: 09/30/2005  08:35:30
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:   136   224   499   586
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup string
  currentfile exch readhexstring pop
  /bmap xdef pop pop} bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  {bmap} image gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   136   224   499   586
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1427   304  4348  4348 MR c np
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
gs 1463 388 4228 4228 MR c np
0 sg
68 100 68 99 -137 6 -138 5 69 -105 70 -105 4592 4166 7 MP stroke
gs 4383 3883 422 357 MR c np
24 W
4592 4166 PD
24 W
4731 3956 PD
24 W
4456 3967 PD
24 W
4662 4061 PD
24 W
4593 3961 PD
24 W
4524 4066 PD
gr

-71 112 -72 112 -66 -106 -66 -107 138 -5 137 -6 4456 3967 7 MP stroke
gs 4383 3670 422 371 MR c np
24 W
4456 3967 PD
24 W
4731 3956 PD
24 W
4599 3743 PD
24 W
4593 3961 PD
24 W
4665 3849 PD
24 W
4527 3855 PD
gr

97 86 98 86 -146 28 -147 27 49 -113 49 -114 2645 1239 7 MP stroke
gs 2377 939 440 374 MR c np
24 W
2645 1239 PD
24 W
2743 1012 PD
24 W
2450 1067 PD
24 W
2694 1125 PD
24 W
2596 1039 PD
24 W
2548 1153 PD
gr

92 102 93 102 -121 45 -120 44 28 -147 28 -146 5010 3627 7 MP stroke
gs 4752 3261 388 440 MR c np
24 W
5010 3627 PD
24 W
5066 3334 PD
24 W
4825 3423 PD
24 W
5038 3481 PD
24 W
4946 3378 PD
24 W
4918 3525 PD
gr

-37 -113 -37 -112 127 26 127 26 -90 86 -90 87 2539 3557 7 MP stroke
gs 2286 3484 401 372 MR c np
24 W
2539 3557 PD
24 W
2359 3730 PD
24 W
2613 3782 PD
24 W
2449 3644 PD
24 W
2486 3756 PD
24 W
2576 3670 PD
gr

-59 116 -60 117 -87 -89 -87 -89 147 -27 146 -28 2450 1067 7 MP stroke
gs 2377 761 440 380 MR c np
24 W
2450 1067 PD
24 W
2743 1012 PD
24 W
2569 834 PD
24 W
2596 1039 PD
24 W
2656 923 PD
24 W
2509 951 PD
gr

117 -59 117 -59 -28 146 -28 147 -89 -88 -89 -87 5244 3509 7 MP stroke
gs 4937 3261 381 440 MR c np
24 W
5244 3509 PD
24 W
5066 3334 PD
24 W
5010 3627 PD
24 W
5155 3422 PD
24 W
5038 3481 PD
24 W
5127 3568 PD
gr

-44 137 -43 136 -64 -63 -63 -64 107 -73 107 -73 2727 3126 7 MP stroke
gs 2654 2780 361 420 MR c np
24 W
2727 3126 PD
24 W
2941 2980 PD
24 W
2814 2853 PD
24 W
2834 3053 PD
24 W
2878 2916 PD
24 W
2771 2989 PD
gr

-85 89 -84 89 -14 -141 -14 -141 98 52 99 52 3836 1668 7 MP stroke
gs 3763 1417 344 429 MR c np
24 W
3836 1668 PD
24 W
4033 1772 PD
24 W
4005 1490 PD
24 W
3935 1720 PD
24 W
4019 1631 PD
24 W
3921 1579 PD
gr

130 7 130 7 -52 105 -52 104 -78 -111 -78 -112 4554 2279 7 MP stroke
gs 4221 1983 407 370 MR c np
24 W
4554 2279 PD
24 W
4398 2056 PD
24 W
4294 2265 PD
24 W
4476 2167 PD
24 W
4346 2160 PD
24 W
4424 2272 PD
gr

116 -7 116 -7 -79 118 -78 119 -38 -111 -37 -112 3836 1668 7 MP stroke
gs 3531 1372 379 384 MR c np
24 W
3836 1668 PD
24 W
3761 1445 PD
24 W
3604 1682 PD
24 W
3799 1556 PD
24 W
3683 1564 PD
24 W
3720 1675 PD
gr

39 -133 39 -134 78 112 78 111 -117 22 -117 22 4632 2012 7 MP stroke
gs 4325 1939 381 414 MR c np
24 W
4632 2012 PD
24 W
4398 2056 PD
24 W
4554 2279 PD
24 W
4515 2034 PD
24 W
4476 2167 PD
24 W
4593 2145 PD
gr

43 -136 44 -137 49 107 49 108 -93 29 -92 29 2814 2853 7 MP stroke
gs 2556 2780 332 420 MR c np
24 W
2814 2853 PD
24 W
2629 2911 PD
24 W
2727 3126 PD
24 W
2722 2882 PD
24 W
2678 3019 PD
24 W
2771 2989 PD
gr

84 -53 84 -53 14 138 13 139 -98 -86 -97 -85 4324 4313 7 MP stroke
gs 4056 4069 342 424 MR c np
24 W
4324 4313 PD
24 W
4129 4142 PD
24 W
4156 4419 PD
24 W
4227 4228 PD
24 W
4142 4281 PD
24 W
4240 4366 PD
gr

106 40 107 41 -87 97 -87 98 -19 -138 -20 -138 4843 1560 7 MP stroke
gs 4557 1211 360 423 MR c np
24 W
4843 1560 PD
24 W
4804 1284 PD
24 W
4630 1479 PD
24 W
4823 1422 PD
24 W
4717 1382 PD
24 W
4737 1520 PD
gr

-53 84 -52 85 -86 -97 -85 -97 138 13 138 12 1659 1923 7 MP stroke
gs 1586 1681 423 341 MR c np
24 W
1659 1923 PD
24 W
1935 1948 PD
24 W
1764 1754 PD
24 W
1797 1935 PD
24 W
1850 1851 PD
24 W
1712 1839 PD
gr

-138 -44 -138 -45 62 -67 62 -66 76 111 76 111 3547 3124 7 MP stroke
gs 3474 3051 423 369 MR c np
24 W
3547 3124 PD
24 W
3699 3346 PD
24 W
3823 3213 PD
24 W
3623 3235 PD
24 W
3761 3280 PD
24 W
3685 3168 PD
gr

-122 37 -123 37 -2 -93 -2 -93 125 56 124 56 3505 2299 7 MP stroke
gs 3432 2152 396 333 MR c np
24 W
3505 2299 PD
24 W
3754 2411 PD
24 W
3750 2225 PD
24 W
3629 2355 PD
24 W
3752 2318 PD
24 W
3627 2262 PD
gr

74 71 74 72 -61 67 -60 67 -13 -139 -14 -138 4156 4419 7 MP stroke
gs 3935 4069 295 424 MR c np
24 W
4156 4419 PD
24 W
4129 4142 PD
24 W
4008 4276 PD
24 W
4142 4281 PD
24 W
4069 4209 PD
24 W
4082 4348 PD
gr

-98 -84 -97 -84 83 -57 84 -57 14 141 14 141 4005 1490 7 MP stroke
gs 3932 1417 342 429 MR c np
24 W
4005 1490 PD
24 W
4033 1772 PD
24 W
4200 1658 PD
24 W
4019 1631 PD
24 W
4117 1715 PD
24 W
4103 1574 PD
gr

72 73 71 74 -138 -12 -138 -13 66 -61 67 -61 1802 2070 7 MP stroke
gs 1586 1850 423 294 MR c np
24 W
1802 2070 PD
24 W
1935 1948 PD
24 W
1659 1923 PD
24 W
1869 2009 PD
24 W
1797 1935 PD
24 W
1730 1997 PD
gr

-93 94 -92 94 -19 -145 -19 -146 112 51 111 52 4843 1560 7 MP stroke
gs 4770 1299 370 438 MR c np
24 W
4843 1560 PD
24 W
5066 1663 PD
24 W
5028 1372 PD
24 W
4954 1612 PD
24 W
5047 1517 PD
24 W
4936 1466 PD
gr

-107 -62 -106 -62 87 -84 88 -83 19 146 19 145 5028 1372 7 MP stroke
gs 4955 1299 360 438 MR c np
24 W
5028 1372 PD
24 W
5066 1663 PD
24 W
5241 1496 PD
24 W
5047 1517 PD
24 W
5154 1580 PD
24 W
5135 1434 PD
gr

19 -117 20 -116 84 103 84 104 -104 13 -103 13 3615 1060 7 MP stroke
gs 3335 987 354 380 MR c np
24 W
3615 1060 PD
24 W
3408 1086 PD
24 W
3576 1293 PD
24 W
3512 1073 PD
24 W
3492 1190 PD
24 W
3596 1177 PD
gr

101 0 100 0 -64 126 -64 126 -36 -126 -37 -126 3622 4615 7 MP stroke
gr

0 sg
gs 3348 4290 348 399 MR c np
24 W
3622 4615 PD
24 W
3549 4363 PD
24 W
3421 4615 PD
24 W
3585 4489 PD
24 W
3485 4489 PD
24 W
3521 4615 PD
gr

gs 1463 388 4228 4228 MR c np
0 201 -126 -37 -126 -37 126 -64 126 -63 1463 2657 6 MP stroke
gr

gs 1390 2383 399 348 MR c np
24 W
1463 2657 PD
24 W
1715 2530 PD
24 W
1463 2456 PD
24 W
1589 2594 PD
24 W
1589 2493 PD
24 W
1463 2557 PD
gr

gs 1463 388 4228 4228 MR c np
-84 -104 -84 -103 90 -11 91 -12 -7 115 -6 115 3408 1086 7 MP stroke
gs 3322 1013 328 377 MR c np
24 W
3408 1086 PD
24 W
3395 1316 PD
24 W
3576 1293 PD
24 W
3402 1201 PD
24 W
3486 1304 PD
24 W
3492 1190 PD
gr

78 -119 79 -118 41 97 41 98 -120 21 -119 21 3761 1445 7 MP stroke
gs 3449 1372 386 384 MR c np
24 W
3761 1445 PD
24 W
3522 1487 PD
24 W
3604 1682 PD
24 W
3642 1466 PD
24 W
3563 1585 PD
24 W
3683 1564 PD
gr

-140 -49 -139 -49 62 -65 63 -64 77 114 77 113 2953 1650 7 MP stroke
gs 2880 1577 426 374 MR c np
24 W
2953 1650 PD
24 W
3107 1877 PD
24 W
3232 1748 PD
24 W
3030 1763 PD
24 W
3170 1813 PD
24 W
3093 1699 PD
gr

-79 100 -80 100 -71 -102 -70 -101 150 1 150 2 4427 1045 7 MP stroke
gs 4354 772 447 350 MR c np
24 W
4427 1045 PD
24 W
4727 1048 PD
24 W
4586 845 PD
24 W
4577 1047 PD
24 W
4657 947 PD
24 W
4506 945 PD
gr

79 103 78 103 -150 -2 -150 -1 71 -102 72 -101 4584 1251 7 MP stroke
gs 4354 972 447 353 MR c np
24 W
4584 1251 PD
24 W
4727 1048 PD
24 W
4427 1045 PD
24 W
4656 1150 PD
24 W
4577 1047 PD
24 W
4505 1148 PD
gr

138 45 138 44 -105 52 -105 52 -33 -97 -33 -96 3823 3213 7 MP stroke
gs 3474 2947 423 340 MR c np
24 W
3823 3213 PD
24 W
3757 3020 PD
24 W
3547 3124 PD
24 W
3790 3117 PD
24 W
3652 3072 PD
24 W
3685 3168 PD
gr

100 81 99 81 -85 57 -86 56 -14 -138 -14 -137 2314 3260 7 MP stroke
gs 2042 2912 346 422 MR c np
24 W
2314 3260 PD
24 W
2286 2985 PD
24 W
2115 3098 PD
24 W
2300 3123 PD
24 W
2200 3041 PD
24 W
2214 3179 PD
gr

89 -97 89 -96 14 137 14 138 -103 -41 -103 -41 2492 3067 7 MP stroke
gs 2213 2912 353 422 MR c np
24 W
2492 3067 PD
24 W
2286 2985 PD
24 W
2314 3260 PD
24 W
2389 3026 PD
24 W
2300 3123 PD
24 W
2403 3164 PD
gr

90 -88 90 -87 37 114 37 113 -127 -26 -127 -26 2613 3782 7 MP stroke
gs 2286 3657 401 374 MR c np
24 W
2613 3782 PD
24 W
2359 3730 PD
24 W
2433 3957 PD
24 W
2486 3756 PD
24 W
2396 3843 PD
24 W
2523 3870 PD
gr

108 -84 107 -84 2 129 1 129 -109 -45 -109 -45 1930 2362 7 MP stroke
gs 1639 2199 365 405 MR c np
24 W
1930 2362 PD
24 W
1712 2272 PD
24 W
1715 2530 PD
24 W
1821 2317 PD
24 W
1713 2401 PD
24 W
1822 2446 PD
gr

-84 107 -84 108 -45 -109 -45 -109 129 2 129 1 3549 4363 7 MP stroke
gs 3476 4075 405 365 MR c np
24 W
3549 4363 PD
24 W
3807 4366 PD
24 W
3717 4148 PD
24 W
3678 4364 PD
24 W
3762 4257 PD
24 W
3633 4256 PD
gr

93 96 93 97 -102 30 -102 30 9 -127 9 -126 4740 2472 7 MP stroke
gs 4481 2146 351 400 MR c np
24 W
4740 2472 PD
24 W
4758 2219 PD
24 W
4554 2279 PD
24 W
4749 2346 PD
24 W
4656 2249 PD
24 W
4647 2376 PD
gr

-49 133 -49 132 -57 -69 -58 -69 107 -63 106 -64 4196 2530 7 MP stroke
gs 4123 2192 360 412 MR c np
24 W
4196 2530 PD
24 W
4409 2403 PD
24 W
4294 2265 PD
24 W
4302 2466 PD
24 W
4351 2334 PD
24 W
4245 2397 PD
gr

139 49 140 49 -112 49 -112 49 -28 -98 -27 -98 3232 1748 7 MP stroke
gs 2880 1479 426 343 MR c np
24 W
3232 1748 PD
24 W
3177 1552 PD
24 W
2953 1650 PD
24 W
3205 1650 PD
24 W
3065 1601 PD
24 W
3093 1699 PD
gr

-79 119 -78 119 -43 -79 -42 -78 121 -41 121 -40 4053 626 7 MP stroke
gr

gs 3980 315 389 385 MR c np
24 W
4053 626 PD
24 W
4295 545 PD
24 W
4210 388 PD
24 W
4174 586 PD
24 W
4253 467 PD
24 W
4132 507 PD
gr

gs 1463 388 4228 4228 MR c np
119 -78 119 -79 -41 121 -40 121 -78 -42 -79 -43 5690 1868 7 MP stroke
gr

gs 5379 1710 385 389 MR c np
24 W
5690 1868 PD
24 W
5533 1783 PD
24 W
5452 2025 PD
24 W
5611 1825 PD
24 W
5493 1904 PD
24 W
5571 1946 PD
gr

gs 1463 388 4228 4228 MR c np
-106 106 -106 106 -15 -121 -16 -121 121 15 122 15 1463 600 7 MP stroke
gr

gs 1390 315 390 389 MR c np
24 W
1463 600 PD
24 W
1706 630 PD
24 W
1675 388 PD
24 W
1585 615 PD
24 W
1690 509 PD
24 W
1569 494 PD
gr

gs 1463 388 4228 4228 MR c np
106 -106 106 -106 15 122 15 121 -121 -16 -121 -15 5690 4403 7 MP stroke
gr

gs 5375 4299 389 390 MR c np
24 W
5690 4403 PD
24 W
5448 4372 PD
24 W
5478 4615 PD
24 W
5569 4388 PD
24 W
5463 4493 PD
24 W
5584 4509 PD
gr

gs 1463 388 4228 4228 MR c np
31 119 31 118 -100 -21 -101 -20 69 -98 70 -98 2974 3946 7 MP stroke
gs 2839 3636 348 384 MR c np
24 W
2974 3946 PD
24 W
3113 3750 PD
24 W
2912 3709 PD
24 W
3044 3848 PD
24 W
3012 3730 PD
24 W
2943 3827 PD
gr

-45 -126 -44 -126 124 29 125 29 -80 97 -80 97 4598 2943 7 MP stroke
gs 4365 2870 396 399 MR c np
24 W
4598 2943 PD
24 W
4438 3137 PD
24 W
4687 3195 PD
24 W
4518 3040 PD
24 W
4563 3166 PD
24 W
4643 3069 PD
gr

59 -96 59 -97 39 122 39 121 -98 -25 -98 -25 2201 3887 7 MP stroke
gs 1932 3764 343 390 MR c np
24 W
2201 3887 PD
24 W
2005 3837 PD
24 W
2083 4080 PD
24 W
2103 3862 PD
24 W
2044 3958 PD
24 W
2142 3983 PD
gr

-106 -106 -106 -106 121 -15 121 -15 -15 121 -15 121 5478 388 7 MP stroke
gr

gs 5375 315 389 389 MR c np
24 W
5478 388 PD
24 W
5448 630 PD
24 W
5690 600 PD
24 W
5463 509 PD
24 W
5569 615 PD
24 W
5584 494 PD
gr

gs 1463 388 4228 4228 MR c np
-39 -121 -39 -122 88 38 88 38 -49 84 -49 83 2005 3837 7 MP stroke
gs 1834 3764 323 390 MR c np
24 W
2005 3837 PD
24 W
1907 4004 PD
24 W
2083 4080 PD
24 W
1956 3920 PD
24 W
1995 4042 PD
24 W
2044 3958 PD
gr

92 -94 93 -94 20 138 19 138 -112 -44 -112 -44 5028 1372 7 MP stroke
gs 4731 1211 371 423 MR c np
24 W
5028 1372 PD
24 W
4804 1284 PD
24 W
4843 1560 PD
24 W
4916 1328 PD
24 W
4823 1422 PD
24 W
4936 1466 PD
gr

0 -105 -1 -105 112 81 111 81 -111 24 -111 24 4434 1417 7 MP stroke
gs 4139 1344 370 357 MR c np
24 W
4434 1417 PD
24 W
4212 1465 PD
24 W
4435 1627 PD
24 W
4323 1441 PD
24 W
4323 1546 PD
24 W
4434 1522 PD
gr

49 -132 49 -133 50 112 49 111 -99 21 -98 21 4294 2265 7 MP stroke
gs 4024 2192 344 412 MR c np
24 W
4294 2265 PD
24 W
4097 2307 PD
24 W
4196 2530 PD
24 W
4196 2286 PD
24 W
4146 2418 PD
24 W
4245 2397 PD
gr

-39 109 -39 109 -50 -121 -51 -121 90 12 89 12 3913 2917 7 MP stroke
gs 3840 2626 326 389 MR c np
24 W
3913 2917 PD
24 W
4092 2941 PD
24 W
3991 2699 PD
24 W
4002 2929 PD
24 W
4041 2820 PD
24 W
3952 2808 PD
gr

118 -15 117 -16 -6 97 -6 96 -111 -81 -112 -81 4435 1627 7 MP stroke
gs 4127 1392 382 340 MR c np
24 W
4435 1627 PD
24 W
4212 1465 PD
24 W
4200 1658 PD
24 W
4323 1546 PD
24 W
4206 1561 PD
24 W
4317 1642 PD
gr

64 -126 64 -126 49 92 48 92 -112 34 -113 34 3549 4363 7 MP stroke
gr

gs 3251 4290 372 399 MR c np
24 W
3549 4363 PD
24 W
3324 4431 PD
24 W
3421 4615 PD
24 W
3436 4397 PD
24 W
3372 4523 PD
24 W
3485 4489 PD
gr

gs 1463 388 4228 4228 MR c np
-106 0 -105 0 78 -119 79 -119 27 119 27 119 3999 388 7 MP stroke
gr

gs 3926 315 358 385 MR c np
24 W
3999 388 PD
24 W
4053 626 PD
24 W
4210 388 PD
24 W
4026 507 PD
24 W
4132 507 PD
24 W
4105 388 PD
gr

gs 1463 388 4228 4228 MR c np
-99 -38 -99 -38 48 -83 49 -83 51 121 50 121 3991 2699 7 MP stroke
gs 3918 2626 345 389 MR c np
24 W
3991 2699 PD
24 W
4092 2941 PD
24 W
4189 2775 PD
24 W
4041 2820 PD
24 W
4141 2858 PD
24 W
4090 2737 PD
gr

0 -211 119 27 119 27 -119 79 -119 78 5690 1868 6 MP stroke
gr

gs 5379 1795 385 358 MR c np
24 W
5690 1868 PD
24 W
5452 2025 PD
24 W
5690 2079 PD
24 W
5571 1946 PD
24 W
5571 2052 PD
24 W
5690 1973 PD
gr

gs 1463 388 4228 4228 MR c np
-10 -130 -10 -131 88 18 89 18 -79 113 -78 112 3353 2537 7 MP stroke
gs 3123 2464 324 408 MR c np
24 W
3353 2537 PD
24 W
3196 2762 PD
24 W
3373 2798 PD
24 W
3275 2649 PD
24 W
3285 2780 PD
24 W
3363 2667 PD
gr

126 37 126 37 -71 32 -70 32 -55 -69 -56 -69 1715 2530 7 MP stroke
gr

gs 1390 2319 399 285 MR c np
24 W
1715 2530 PD
24 W
1604 2392 PD
24 W
1463 2456 PD
24 W
1659 2461 PD
24 W
1534 2424 PD
24 W
1589 2493 PD
gr

gs 1463 388 4228 4228 MR c np
86 -76 86 -76 48 67 47 66 -133 9 -134 10 2559 2347 7 MP stroke
gs 2219 2274 414 299 MR c np
24 W
2559 2347 PD
24 W
2292 2366 PD
24 W
2387 2499 PD
24 W
2425 2357 PD
24 W
2339 2432 PD
24 W
2473 2423 PD
gr

-126 63 -126 64 34 -112 34 -113 92 49 92 49 1463 2657 7 MP stroke
gr

gs 1390 2457 399 372 MR c np
24 W
1463 2657 PD
24 W
1647 2755 PD
24 W
1715 2530 PD
24 W
1555 2706 PD
24 W
1681 2642 PD
24 W
1589 2594 PD
gr

gs 1463 388 4228 4228 MR c np
-66 -74 -67 -74 134 -10 133 -9 -67 83 -67 84 2426 2199 7 MP stroke
gs 2219 2126 414 314 MR c np
24 W
2426 2199 PD
24 W
2292 2366 PD
24 W
2559 2347 PD
24 W
2359 2283 PD
24 W
2425 2357 PD
24 W
2492 2273 PD
gr

-31 -120 -32 -121 128 67 128 66 -96 54 -97 54 3139 729 7 MP stroke
gs 2873 656 403 388 MR c np
24 W
3139 729 PD
24 W
2946 837 PD
24 W
3202 970 PD
24 W
3042 783 PD
24 W
3074 903 PD
24 W
3170 849 PD
gr

37 126 36 126 -69 -56 -68 -55 32 -70 32 -71 3622 4615 7 MP stroke
gr

gs 3476 4290 284 399 MR c np
24 W
3622 4615 PD
24 W
3686 4474 PD
24 W
3549 4363 PD
24 W
3654 4544 PD
24 W
3618 4419 PD
24 W
3585 4489 PD
gr

gs 1463 388 4228 4228 MR c np
101 63 102 63 -74 73 -73 73 -28 -136 -28 -136 5125 4385 7 MP stroke
gs 4849 4040 350 419 MR c np
24 W
5125 4385 PD
24 W
5069 4113 PD
24 W
4922 4259 PD
24 W
5097 4249 PD
24 W
4996 4186 PD
24 W
5024 4322 PD
gr

-125 -29 -124 -29 39 -75 38 -76 86 105 86 104 4438 3137 7 MP stroke
gs 4365 3064 396 356 MR c np
24 W
4438 3137 PD
24 W
4610 3346 PD
24 W
4687 3195 PD
24 W
4524 3241 PD
24 W
4648 3270 PD
24 W
4563 3166 PD
gr

-109 34 -109 33 78 -112 79 -113 30 79 31 79 3135 2604 7 MP stroke
gs 3062 2464 365 372 MR c np
24 W
3135 2604 PD
24 W
3196 2762 PD
24 W
3353 2537 PD
24 W
3166 2683 PD
24 W
3275 2649 PD
24 W
3244 2570 PD
gr

63 102 63 101 -136 -28 -136 -28 73 -73 73 -74 1819 1156 7 MP stroke
gs 1620 880 419 350 MR c np
24 W
1819 1156 PD
24 W
1965 1009 PD
24 W
1693 953 PD
24 W
1892 1082 PD
24 W
1829 981 PD
24 W
1756 1054 PD
gr

5 119 5 119 -86 -104 -86 -105 81 -14 81 -15 4448 3375 7 MP stroke
gs 4365 3064 319 385 MR c np
24 W
4448 3375 PD
24 W
4610 3346 PD
24 W
4438 3137 PD
24 W
4529 3360 PD
24 W
4524 3241 PD
24 W
4443 3256 PD
gr

80 -89 81 -89 28 136 28 136 -109 -47 -108 -47 5286 4207 7 MP stroke
gs 4996 4040 364 419 MR c np
24 W
5286 4207 PD
24 W
5069 4113 PD
24 W
5125 4385 PD
24 W
5178 4160 PD
24 W
5097 4249 PD
24 W
5206 4296 PD
gr

-89 81 -89 80 -47 -108 -47 -109 136 28 136 28 1693 953 7 MP stroke
gs 1620 719 419 364 MR c np
24 W
1693 953 PD
24 W
1965 1009 PD
24 W
1871 792 PD
24 W
1829 981 PD
24 W
1918 900 PD
24 W
1782 872 PD
gr

-5 -127 -5 -127 84 21 85 22 -79 105 -80 106 2314 3260 7 MP stroke
gs 2082 3187 316 401 MR c np
24 W
2314 3260 PD
24 W
2155 3471 PD
24 W
2324 3514 PD
24 W
2234 3366 PD
24 W
2240 3493 PD
24 W
2319 3387 PD
gr

117 -20 117 -21 -81 103 -80 104 -36 -83 -37 -83 1697 4382 7 MP stroke
gr

gs 1390 4143 381 354 MR c np
24 W
1697 4382 PD
24 W
1624 4216 PD
24 W
1463 4423 PD
24 W
1660 4299 PD
24 W
1544 4320 PD
24 W
1580 4402 PD
gr

gs 1463 388 4228 4228 MR c np
-21 117 -21 116 -82 -37 -83 -36 104 -80 103 -80 1655 4615 7 MP stroke
gr

gs 1582 4309 354 380 MR c np
24 W
1655 4615 PD
24 W
1862 4455 PD
24 W
1697 4382 PD
24 W
1758 4535 PD
24 W
1779 4419 PD
24 W
1676 4498 PD
gr

gs 1463 388 4228 4228 MR c np
-117 21 -117 20 55 -55 55 -54 62 34 62 34 1463 4423 7 MP stroke
gr

gs 1390 4309 381 256 MR c np
24 W
1463 4423 PD
24 W
1587 4491 PD
24 W
1697 4382 PD
24 W
1525 4457 PD
24 W
1642 4437 PD
24 W
1580 4402 PD
gr

gs 1463 388 4228 4228 MR c np
21 -116 21 -117 34 62 34 62 -55 54 -55 55 1697 4382 7 MP stroke
gr

gs 1514 4309 257 380 MR c np
24 W
1697 4382 PD
24 W
1587 4491 PD
24 W
1655 4615 PD
24 W
1642 4437 PD
24 W
1621 4553 PD
24 W
1676 4498 PD
gr

gs 1463 388 4228 4228 MR c np
113 -37 112 -38 16 104 15 104 -128 -66 -128 -67 3202 970 7 MP stroke
gs 2873 764 403 355 MR c np
24 W
3202 970 PD
24 W
2946 837 PD
24 W
2977 1045 PD
24 W
3074 903 PD
24 W
2961 941 PD
24 W
3089 1007 PD
gr

44 126 45 126 -117 -29 -117 -29 73 -97 72 -97 4687 3195 7 MP stroke
gs 4525 2870 381 399 MR c np
24 W
4687 3195 PD
24 W
4832 3001 PD
24 W
4598 2943 PD
24 W
4759 3098 PD
24 W
4715 2972 PD
24 W
4643 3069 PD
gr

-118 32 -118 31 80 -106 79 -105 39 74 38 74 2078 3323 7 MP stroke
gs 2005 3187 383 358 MR c np
24 W
2078 3323 PD
24 W
2155 3471 PD
24 W
2314 3260 PD
24 W
2116 3397 PD
24 W
2234 3366 PD
24 W
2196 3291 PD
gr

-101 63 -102 63 28 -136 28 -136 74 73 73 73 4922 743 7 MP stroke
gs 4849 544 350 419 MR c np
24 W
4922 743 PD
24 W
5069 889 PD
24 W
5125 617 PD
24 W
4995 816 PD
24 W
5097 753 PD
24 W
5023 680 PD
gr

-80 -89 -81 -89 108 -47 109 -47 -28 136 -28 136 5125 617 7 MP stroke
gs 4996 544 364 419 MR c np
24 W
5125 617 PD
24 W
5069 889 PD
24 W
5286 795 PD
24 W
5097 753 PD
24 W
5178 842 PD
24 W
5205 706 PD
gr

-99 -81 -100 -81 118 -31 118 -32 -18 113 -19 112 2115 3098 7 MP stroke
gs 2005 3025 383 372 MR c np
24 W
2115 3098 PD
24 W
2078 3323 PD
24 W
2314 3260 PD
24 W
2096 3210 PD
24 W
2196 3291 PD
24 W
2214 3179 PD
gr

-55 101 -55 101 -65 -113 -64 -113 119 12 120 12 2448 4369 7 MP stroke
gs 2375 4094 386 373 MR c np
24 W
2448 4369 PD
24 W
2687 4393 PD
24 W
2558 4167 PD
24 W
2568 4381 PD
24 W
2623 4280 PD
24 W
2503 4268 PD
gr

110 -60 109 -61 12 119 12 120 -121 -59 -122 -59 1930 3508 7 MP stroke
gs 1614 3317 390 386 MR c np
24 W
1930 3508 PD
24 W
1687 3390 PD
24 W
1711 3629 PD
24 W
1808 3449 PD
24 W
1699 3510 PD
24 W
1820 3568 PD
gr

-89 -100 -89 -101 88 -15 89 -15 1 115 0 116 2507 1657 7 MP stroke
gs 2434 1584 325 378 MR c np
24 W
2507 1657 PD
24 W
2508 1888 PD
24 W
2685 1858 PD
24 W
2507 1773 PD
24 W
2597 1873 PD
24 W
2596 1757 PD
gr

122 -44 122 -44 -11 88 -10 88 -112 -44 -111 -44 5488 3421 7 MP stroke
gs 5171 3260 391 323 MR c np
24 W
5488 3421 PD
24 W
5265 3333 PD
24 W
5244 3509 PD
24 W
5377 3377 PD
24 W
5255 3421 PD
24 W
5366 3465 PD
gr

-44 122 -44 122 -44 -112 -44 -111 88 -11 88 -10 2569 834 7 MP stroke
gs 2496 517 323 391 MR c np
24 W
2569 834 PD
24 W
2745 813 PD
24 W
2657 590 PD
24 W
2657 824 PD
24 W
2701 702 PD
24 W
2613 712 PD
gr

121 -33 121 -33 -16 100 -15 101 -105 -67 -106 -68 3001 2425 7 MP stroke
gs 2686 2217 389 348 MR c np
24 W
3001 2425 PD
24 W
2790 2290 PD
24 W
2759 2491 PD
24 W
2895 2357 PD
24 W
2775 2391 PD
24 W
2880 2458 PD
gr

-130 -7 -130 -7 73 -62 72 -62 58 69 57 69 4294 2265 7 MP stroke
gs 4221 2192 407 285 MR c np
24 W
4294 2265 PD
24 W
4409 2403 PD
24 W
4554 2279 PD
24 W
4351 2334 PD
24 W
4481 2341 PD
24 W
4424 2272 PD
gr

116 62 116 62 -97 74 -98 74 -19 -136 -18 -136 4667 1751 7 MP stroke
gs 4362 1406 379 419 MR c np
24 W
4667 1751 PD
24 W
4630 1479 PD
24 W
4435 1627 PD
24 W
4649 1615 PD
24 W
4532 1553 PD
24 W
4551 1689 PD
gr

-93 -97 -93 -96 87 -3 86 -2 7 99 6 99 4554 2279 7 MP stroke
gs 4481 2206 333 345 MR c np
24 W
4554 2279 PD
24 W
4567 2477 PD
24 W
4740 2472 PD
24 W
4560 2378 PD
24 W
4653 2475 PD
24 W
4647 2376 PD
gr

68 67 68 67 -128 35 -127 35 59 -102 60 -102 4762 2820 7 MP stroke
gs 4553 2543 402 351 MR c np
24 W
4762 2820 PD
24 W
4881 2616 PD
24 W
4626 2686 PD
24 W
4822 2718 PD
24 W
4754 2651 PD
24 W
4694 2753 PD
gr

0 192 -81 7 -80 8 80 -104 81 -103 1463 4423 6 MP stroke
gr

gs 1390 4143 308 354 MR c np
24 W
1463 4423 PD
24 W
1624 4216 PD
24 W
1463 4231 PD
24 W
1544 4320 PD
24 W
1544 4224 PD
24 W
1463 4327 PD
gr

gs 1463 388 4228 4228 MR c np
53 110 53 110 -115 -17 -115 -17 62 -93 62 -93 1799 3183 7 MP stroke
gs 1620 2890 377 367 MR c np
24 W
1799 3183 PD
24 W
1923 2997 PD
24 W
1693 2963 PD
24 W
1861 3090 PD
24 W
1808 2980 PD
24 W
1746 3073 PD
gr

110 53 110 53 -92 62 -93 63 -17 -116 -18 -115 3116 4385 7 MP stroke
gs 2823 4081 367 378 MR c np
24 W
3116 4385 PD
24 W
3081 4154 PD
24 W
2896 4279 PD
24 W
3098 4270 PD
24 W
2988 4217 PD
24 W
3006 4332 PD
gr

88 -95 88 -96 18 136 19 136 -107 -41 -106 -40 4843 1560 7 MP stroke
gs 4557 1406 360 419 MR c np
24 W
4843 1560 PD
24 W
4630 1479 PD
24 W
4667 1751 PD
24 W
4737 1520 PD
24 W
4649 1615 PD
24 W
4755 1655 PD
gr

-31 -118 -31 -119 89 68 89 69 -58 50 -58 50 2912 3709 7 MP stroke
gs 2723 3636 325 384 MR c np
24 W
2912 3709 PD
24 W
2796 3809 PD
24 W
2974 3946 PD
24 W
2854 3759 PD
24 W
2885 3878 PD
24 W
2943 3827 PD
gr

96 0 96 0 -103 80 -104 80 7 -80 8 -80 1847 4615 7 MP stroke
gr

gs 1582 4382 354 307 MR c np
24 W
1847 4615 PD
24 W
1862 4455 PD
24 W
1655 4615 PD
24 W
1855 4535 PD
24 W
1758 4535 PD
24 W
1751 4615 PD
gr

gs 1463 388 4228 4228 MR c np
86 -96 86 -96 43 110 42 111 -129 -15 -128 -14 3607 670 7 MP stroke
gs 3277 568 404 368 MR c np
24 W
3607 670 PD
24 W
3350 641 PD
24 W
3435 862 PD
24 W
3479 656 PD
24 W
3392 752 PD
24 W
3521 766 PD
gr

-94 86 -93 87 -19 -119 -18 -120 112 33 112 33 5221 2644 7 MP stroke
gs 5148 2398 371 386 MR c np
24 W
5221 2644 PD
24 W
5445 2710 PD
24 W
5408 2471 PD
24 W
5333 2677 PD
24 W
5427 2590 PD
24 W
5315 2558 PD
gr

-62 66 -62 67 -45 -115 -45 -114 107 48 107 48 3699 3346 7 MP stroke
gs 3626 3140 361 376 MR c np
24 W
3699 3346 PD
24 W
3913 3442 PD
24 W
3823 3213 PD
24 W
3806 3394 PD
24 W
3868 3328 PD
24 W
3761 3280 PD
gr

38 107 38 106 -124 -56 -125 -56 86 -50 87 -51 3581 2512 7 MP stroke
gs 3432 2226 396 360 MR c np
24 W
3581 2512 PD
24 W
3754 2411 PD
24 W
3505 2299 PD
24 W
3668 2461 PD
24 W
3629 2355 PD
24 W
3543 2405 PD
gr

-108 -22 -107 -21 90 -87 90 -86 17 108 18 108 2324 3514 7 MP stroke
gs 2251 3441 362 363 MR c np
24 W
2324 3514 PD
24 W
2359 3730 PD
24 W
2539 3557 PD
24 W
2342 3622 PD
24 W
2449 3644 PD
24 W
2432 3536 PD
gr

-3 120 -3 121 -87 -20 -87 -19 90 -101 90 -101 3551 3929 7 MP stroke
gs 3478 3615 327 388 MR c np
24 W
3551 3929 PD
24 W
3731 3727 PD
24 W
3557 3688 PD
24 W
3641 3828 PD
24 W
3644 3708 PD
24 W
3554 3809 PD
gr

34 124 34 123 -113 -74 -114 -75 80 -49 79 -49 2212 2777 7 MP stroke
gs 2071 2457 374 394 MR c np
24 W
2212 2777 PD
24 W
2371 2679 PD
24 W
2144 2530 PD
24 W
2291 2728 PD
24 W
2257 2604 PD
24 W
2178 2653 PD
gr

-121 16 -122 15 8 -90 8 -90 114 75 113 74 2144 2530 7 MP stroke
gs 2071 2426 390 327 MR c np
24 W
2144 2530 PD
24 W
2371 2679 PD
24 W
2387 2499 PD
24 W
2257 2604 PD
24 W
2379 2589 PD
24 W
2265 2514 PD
gr

11 -116 12 -116 89 101 89 100 -100 15 -101 16 2708 1626 7 MP stroke
gs 2434 1553 348 379 MR c np
24 W
2708 1626 PD
24 W
2507 1657 PD
24 W
2685 1858 PD
24 W
2607 1642 PD
24 W
2596 1757 PD
24 W
2697 1742 PD
gr

-9 126 -9 127 -69 -83 -68 -83 78 -44 77 -43 4740 2472 7 MP stroke
gs 4667 2146 302 400 MR c np
24 W
4740 2472 PD
24 W
4895 2385 PD
24 W
4758 2219 PD
24 W
4817 2429 PD
24 W
4827 2302 PD
24 W
4749 2346 PD
gr

0 212 -106 0 -106 0 106 -106 106 -106 1463 600 6 MP stroke
gr

gs 1390 315 359 359 MR c np
24 W
1463 600 PD
24 W
1675 388 PD
24 W
1463 388 PD
24 W
1569 494 PD
24 W
1569 388 PD
24 W
1463 494 PD
gr

gs 1463 388 4228 4228 MR c np
117 62 118 63 -81 47 -81 48 -36 -110 -37 -110 1698 1353 7 MP stroke
gr

gs 1390 1060 382 367 MR c np
24 W
1698 1353 PD
24 W
1625 1133 PD
24 W
1463 1228 PD
24 W
1661 1243 PD
24 W
1544 1181 PD
24 W
1581 1291 PD
gr

gs 1463 388 4228 4228 MR c np
106 0 106 0 -106 106 -106 106 0 -212 5690 4615 6 MP stroke
gr

gs 5405 4330 359 359 MR c np
24 W
5690 4615 PD
24 W
5690 4403 PD
24 W
5478 4615 PD
24 W
5690 4509 PD
24 W
5584 4509 PD
24 W
5584 4615 PD
gr

gs 1463 388 4228 4228 MR c np
-112 38 -113 37 62 -121 63 -121 50 84 50 83 2977 1045 7 MP stroke
gs 2904 897 372 389 MR c np
24 W
2977 1045 PD
24 W
3077 1212 PD
24 W
3202 970 PD
24 W
3027 1128 PD
24 W
3140 1091 PD
24 W
3089 1007 PD
gr

63 118 62 118 -110 -37 -110 -37 48 -81 47 -81 4850 4615 7 MP stroke
gr

gs 4652 4306 367 383 MR c np
24 W
4850 4615 PD
24 W
4945 4453 PD
24 W
4725 4379 PD
24 W
4897 4534 PD
24 W
4835 4416 PD
24 W
4787 4497 PD
gr

gs 1463 388 4228 4228 MR c np
-31 -113 -30 -113 93 -8 93 -8 -63 121 -62 121 3202 970 7 MP stroke
gs 3004 897 333 389 MR c np
24 W
3202 970 PD
24 W
3077 1212 PD
24 W
3263 1196 PD
24 W
3140 1091 PD
24 W
3170 1204 PD
24 W
3233 1083 PD
gr

-63 64 -62 65 -45 -113 -45 -112 108 48 107 48 3107 1877 7 MP stroke
gs 3034 1675 362 372 MR c np
24 W
3107 1877 PD
24 W
3322 1973 PD
24 W
3232 1748 PD
24 W
3214 1925 PD
24 W
3277 1861 PD
24 W
3170 1813 PD
gr

106 106 106 106 -106 0 -106 0 0 -212 5690 600 6 MP stroke
gr

gs 5405 315 359 359 MR c np
24 W
5690 600 PD
24 W
5690 388 PD
24 W
5478 388 PD
24 W
5690 494 PD
24 W
5584 388 PD
24 W
5584 494 PD
gr

gs 1463 388 4228 4228 MR c np
-62 -105 -63 -105 82 -9 83 -10 -20 115 -20 114 2433 3957 7 MP stroke
gs 2320 3884 312 376 MR c np
24 W
2433 3957 PD
24 W
2393 4186 PD
24 W
2558 4167 PD
24 W
2413 4071 PD
24 W
2476 4176 PD
24 W
2495 4062 PD
gr

112 67 112 68 -79 46 -78 46 -33 -114 -34 -113 1687 3390 7 MP stroke
gr

gs 1390 3090 371 374 MR c np
24 W
1687 3390 PD
24 W
1620 3163 PD
24 W
1463 3255 PD
24 W
1653 3277 PD
24 W
1542 3209 PD
24 W
1575 3323 PD
gr

gs 1463 388 4228 4228 MR c np
10 131 10 130 -99 -82 -99 -81 89 -49 89 -49 3373 2798 7 MP stroke
gs 3280 2464 345 408 MR c np
24 W
3373 2798 PD
24 W
3551 2700 PD
24 W
3353 2537 PD
24 W
3462 2749 PD
24 W
3452 2619 PD
24 W
3363 2667 PD
gr

98 13 99 14 -90 101 -90 101 -8 -115 -9 -114 3748 3956 7 MP stroke
gs 3478 3654 344 376 MR c np
24 W
3748 3956 PD
24 W
3731 3727 PD
24 W
3551 3929 PD
24 W
3739 3842 PD
24 W
3641 3828 PD
24 W
3650 3943 PD
gr

123 -37 122 -37 -68 93 -69 92 -54 -56 -54 -55 3750 2225 7 MP stroke
gs 3432 2041 392 332 MR c np
24 W
3750 2225 PD
24 W
3642 2114 PD
24 W
3505 2299 PD
24 W
3696 2170 PD
24 W
3573 2206 PD
24 W
3627 2262 PD
gr

0 199 -115 -52 -115 -53 115 -47 115 -47 1463 3057 6 MP stroke
gr

gs 1390 2785 377 346 MR c np
24 W
1463 3057 PD
24 W
1693 2963 PD
24 W
1463 2858 PD
24 W
1578 3010 PD
24 W
1578 2910 PD
24 W
1463 2957 PD
gr

gs 1463 388 4228 4228 MR c np
-94 -66 -94 -65 111 -46 111 -45 -17 111 -17 111 1698 1353 7 MP stroke
gs 1591 1280 369 369 MR c np
24 W
1698 1353 PD
24 W
1664 1575 PD
24 W
1886 1484 PD
24 W
1681 1464 PD
24 W
1775 1530 PD
24 W
1792 1419 PD
gr

0 207 -118 -63 -117 -62 117 -41 118 -41 1463 1435 6 MP stroke
gr

gs 1390 1155 382 354 MR c np
24 W
1463 1435 PD
24 W
1698 1353 PD
24 W
1463 1228 PD
24 W
1581 1394 PD
24 W
1581 1291 PD
24 W
1463 1332 PD
gr

gs 1463 388 4228 4228 MR c np
-67 -106 -66 -107 111 -16 111 -17 -45 123 -44 123 4592 4166 7 MP stroke
gs 4430 4093 369 393 MR c np
24 W
4592 4166 PD
24 W
4503 4412 PD
24 W
4725 4379 PD
24 W
4548 4289 PD
24 W
4614 4395 PD
24 W
4659 4272 PD
gr

68 111 68 111 -114 -33 -114 -33 46 -78 46 -78 2823 4615 7 MP stroke
gr

gs 2614 4320 375 369 MR c np
24 W
2823 4615 PD
24 W
2915 4459 PD
24 W
2687 4393 PD
24 W
2869 4537 PD
24 W
2801 4426 PD
24 W
2755 4504 PD
gr

gs 1463 388 4228 4228 MR c np
99 0 100 0 -47 115 -48 115 -52 -115 -52 -115 3220 4615 7 MP stroke
gr

gs 2948 4312 346 377 MR c np
24 W
3220 4615 PD
24 W
3116 4385 PD
24 W
3021 4615 PD
24 W
3168 4500 PD
24 W
3068 4500 PD
24 W
3121 4615 PD
gr

gs 1463 388 4228 4228 MR c np
104 0 103 0 -41 118 -41 118 -62 -118 -63 -118 4850 4615 7 MP stroke
gr

gs 4570 4306 354 383 MR c np
24 W
4850 4615 PD
24 W
4725 4379 PD
24 W
4643 4615 PD
24 W
4787 4497 PD
24 W
4684 4497 PD
24 W
4746 4615 PD
gr

gs 1463 388 4228 4228 MR c np
98 63 98 63 -87 51 -86 50 -12 -113 -11 -114 3777 2638 7 MP stroke
gs 3508 2338 343 374 MR c np
24 W
3777 2638 PD
24 W
3754 2411 PD
24 W
3581 2512 PD
24 W
3766 2524 PD
24 W
3668 2461 PD
24 W
3679 2575 PD
gr

122 12 123 12 -41 102 -42 102 -81 -114 -81 -114 2953 1650 7 MP stroke
gs 2635 1349 392 375 MR c np
24 W
2953 1650 PD
24 W
2791 1422 PD
24 W
2708 1626 PD
24 W
2872 1536 PD
24 W
2749 1524 PD
24 W
2831 1638 PD
gr

-98 -63 -98 -63 113 -31 113 -31 -15 94 -15 94 3581 2512 7 MP stroke
gs 3478 2439 373 335 MR c np
24 W
3581 2512 PD
24 W
3551 2700 PD
24 W
3777 2638 PD
24 W
3566 2606 PD
24 W
3664 2669 PD
24 W
3679 2575 PD
gr

39 -109 39 -109 74 47 74 46 -113 63 -113 62 3991 2699 7 MP stroke
gs 3692 2626 373 365 MR c np
24 W
3991 2699 PD
24 W
3765 2824 PD
24 W
3913 2917 PD
24 W
3878 2761 PD
24 W
3839 2870 PD
24 W
3952 2808 PD
gr

-75 -119 -76 -119 110 7 109 6 -34 113 -34 112 1715 2530 7 MP stroke
gs 1574 2457 366 385 MR c np
24 W
1715 2530 PD
24 W
1647 2755 PD
24 W
1866 2768 PD
24 W
1681 2642 PD
24 W
1756 2761 PD
24 W
1790 2649 PD
gr

-119 -76 -119 -75 113 -34 112 -34 7 109 6 110 3311 4212 7 MP stroke
gs 3238 4139 385 366 MR c np
24 W
3311 4212 PD
24 W
3324 4431 PD
24 W
3549 4363 PD
24 W
3317 4322 PD
24 W
3436 4397 PD
24 W
3430 4288 PD
gr

29 -120 30 -120 81 114 81 114 -110 6 -111 6 3012 1410 7 MP stroke
gs 2718 1337 368 387 MR c np
24 W
3012 1410 PD
24 W
2791 1422 PD
24 W
2953 1650 PD
24 W
2901 1416 PD
24 W
2872 1536 PD
24 W
2983 1530 PD
gr

108 67 109 68 -122 44 -122 44 13 -112 14 -111 5461 3644 7 MP stroke
gs 5171 3348 391 370 MR c np
24 W
5461 3644 PD
24 W
5488 3421 PD
24 W
5244 3509 PD
24 W
5475 3533 PD
24 W
5366 3465 PD
24 W
5353 3577 PD
gr

68 109 67 108 -111 14 -112 13 44 -122 44 -122 2569 834 7 MP stroke
gs 2361 517 370 391 MR c np
24 W
2569 834 PD
24 W
2657 590 PD
24 W
2434 617 PD
24 W
2613 712 PD
24 W
2545 603 PD
24 W
2501 725 PD
gr

-79 49 -80 49 -31 -102 -31 -103 111 54 110 53 2212 2777 7 MP stroke
gs 2139 2606 368 352 MR c np
24 W
2212 2777 PD
24 W
2433 2884 PD
24 W
2371 2679 PD
24 W
2322 2830 PD
24 W
2402 2781 PD
24 W
2291 2728 PD
gr

41 82 41 83 -107 -48 -107 -48 66 -35 66 -34 3781 3511 7 MP stroke
gs 3626 3273 361 312 MR c np
24 W
3781 3511 PD
24 W
3913 3442 PD
24 W
3699 3346 PD
24 W
3847 3477 PD
24 W
3806 3394 PD
24 W
3740 3429 PD
gr

-57 107 -57 107 -71 -72 -70 -72 127 -35 128 -35 4626 2686 7 MP stroke
gs 4553 2399 402 361 MR c np
24 W
4626 2686 PD
24 W
4881 2616 PD
24 W
4740 2472 PD
24 W
4754 2651 PD
24 W
4811 2544 PD
24 W
4683 2579 PD
gr

91 -82 90 -82 11 114 12 113 -102 -31 -102 -32 3958 2474 7 MP stroke
gs 3681 2338 351 374 MR c np
24 W
3958 2474 PD
24 W
3754 2411 PD
24 W
3777 2638 PD
24 W
3856 2442 PD
24 W
3766 2524 PD
24 W
3867 2556 PD
gr

-73 106 -72 106 -17 -110 -17 -110 90 4 89 4 3001 2425 7 MP stroke
gs 2928 2140 326 367 MR c np
24 W
3001 2425 PD
24 W
3180 2433 PD
24 W
3146 2213 PD
24 W
3090 2429 PD
24 W
3163 2323 PD
24 W
3074 2319 PD
gr

-91 48 -91 47 -33 -97 -34 -98 125 50 124 50 4976 3893 7 MP stroke
gs 4903 3725 396 342 MR c np
24 W
4976 3893 PD
24 W
5225 3993 PD
24 W
5158 3798 PD
24 W
5100 3943 PD
24 W
5191 3895 PD
24 W
5067 3845 PD
gr

48 -91 47 -91 50 124 50 125 -98 -34 -97 -33 2280 920 7 MP stroke
gs 2012 780 342 396 MR c np
24 W
2280 920 PD
24 W
2085 853 PD
24 W
2185 1102 PD
24 W
2183 887 PD
24 W
2135 978 PD
24 W
2232 1011 PD
gr

42 79 42 79 -107 -48 -108 -48 66 -31 65 -31 3191 2035 7 MP stroke
gs 3034 1804 362 305 MR c np
24 W
3191 2035 PD
24 W
3322 1973 PD
24 W
3107 1877 PD
24 W
3256 2004 PD
24 W
3214 1925 PD
24 W
3149 1956 PD
gr

37 104 37 104 -110 -53 -111 -54 73 -50 74 -51 2286 2985 7 MP stroke
gs 2139 2704 368 355 MR c np
24 W
2286 2985 PD
24 W
2433 2884 PD
24 W
2212 2777 PD
24 W
2360 2934 PD
24 W
2322 2830 PD
24 W
2249 2881 PD
gr

-107 -30 -107 -31 113 -62 113 -63 -6 93 -6 93 3777 2638 7 MP stroke
gs 3692 2565 373 333 MR c np
24 W
3777 2638 PD
24 W
3765 2824 PD
24 W
3991 2699 PD
24 W
3771 2731 PD
24 W
3878 2761 PD
24 W
3884 2668 PD
gr

0 197 -112 -68 -112 -67 112 -31 112 -31 1463 3452 6 MP stroke
gr

gs 1390 3182 371 344 MR c np
24 W
1463 3452 PD
24 W
1687 3390 PD
24 W
1463 3255 PD
24 W
1575 3421 PD
24 W
1575 3323 PD
24 W
1463 3353 PD
gr

gs 1463 388 4228 4228 MR c np
78 76 79 77 -121 33 -121 33 42 -110 43 -109 2916 2644 7 MP stroke
gs 2686 2352 389 366 MR c np
24 W
2916 2644 PD
24 W
3001 2425 PD
24 W
2759 2491 PD
24 W
2959 2535 PD
24 W
2880 2458 PD
24 W
2838 2568 PD
gr

60 -117 59 -116 27 127 27 127 -86 -11 -87 -10 2569 834 7 MP stroke
gs 2323 740 320 401 MR c np
24 W
2569 834 PD
24 W
2396 813 PD
24 W
2450 1067 PD
24 W
2482 824 PD
24 W
2423 940 PD
24 W
2509 951 PD
gr

-11 -108 -11 -107 97 85 98 86 -87 22 -86 22 4302 4098 7 MP stroke
gs 4056 4025 342 362 MR c np
24 W
4302 4098 PD
24 W
4129 4142 PD
24 W
4324 4313 PD
24 W
4216 4120 PD
24 W
4227 4228 PD
24 W
4313 4206 PD
gr

-117 59 -117 59 -10 -86 -10 -86 127 27 127 27 5010 3627 7 MP stroke
gs 4937 3436 401 319 MR c np
24 W
5010 3627 PD
24 W
5264 3681 PD
24 W
5244 3509 PD
24 W
5137 3654 PD
24 W
5254 3595 PD
24 W
5127 3568 PD
gr

121 31 120 31 -48 68 -49 67 -72 -99 -72 -98 3551 3929 7 MP stroke
gs 3237 3659 388 344 MR c np
24 W
3551 3929 PD
24 W
3407 3732 PD
24 W
3310 3867 PD
24 W
3479 3831 PD
24 W
3358 3799 PD
24 W
3430 3898 PD
gr

17 106 16 106 -89 0 -89 0 72 -106 73 -106 3001 2425 7 MP stroke
gs 2895 2140 325 359 MR c np
24 W
3001 2425 PD
24 W
3146 2213 PD
24 W
2968 2213 PD
24 W
3074 2319 PD
24 W
3057 2213 PD
24 W
2984 2319 PD
gr

-99 -12 -98 -11 13 -86 13 -85 85 97 86 97 1764 1754 7 MP stroke
gs 1691 1681 344 341 MR c np
24 W
1764 1754 PD
24 W
1935 1948 PD
24 W
1961 1777 PD
24 W
1850 1851 PD
24 W
1948 1863 PD
24 W
1863 1766 PD
gr

92 -87 91 -88 37 83 36 83 -128 4 -128 5 1880 4207 7 MP stroke
gs 1551 4134 403 322 MR c np
24 W
1880 4207 PD
24 W
1624 4216 PD
24 W
1697 4382 PD
24 W
1752 4212 PD
24 W
1660 4299 PD
24 W
1788 4294 PD
gr

-91 88 -92 87 9 -124 9 -124 83 36 82 37 1697 4382 7 MP stroke
gs 1624 4134 330 395 MR c np
24 W
1697 4382 PD
24 W
1862 4455 PD
24 W
1880 4207 PD
24 W
1779 4419 PD
24 W
1871 4331 PD
24 W
1788 4294 PD
gr

98 0 99 0 -31 111 -30 111 -68 -111 -68 -111 2823 4615 7 MP stroke
gr

gs 2553 4320 344 369 MR c np
24 W
2823 4615 PD
24 W
2687 4393 PD
24 W
2626 4615 PD
24 W
2755 4504 PD
24 W
2657 4504 PD
24 W
2725 4615 PD
gr

gs 1463 388 4228 4228 MR c np
3 -121 3 -120 72 98 72 99 -75 22 -75 22 3557 3688 7 MP stroke
gs 3334 3615 297 388 MR c np
24 W
3557 3688 PD
24 W
3407 3732 PD
24 W
3551 3929 PD
24 W
3482 3710 PD
24 W
3479 3831 PD
24 W
3554 3809 PD
gr

-39 134 -39 133 -63 -103 -63 -104 102 -30 102 -30 4554 2279 7 MP stroke
gs 4481 1939 351 414 MR c np
24 W
4554 2279 PD
24 W
4758 2219 PD
24 W
4632 2012 PD
24 W
4656 2249 PD
24 W
4695 2115 PD
24 W
4593 2145 PD
gr

-62 -115 -63 -114 111 35 111 36 -48 79 -49 79 2309 388 7 MP stroke
gr

gs 2139 315 369 376 MR c np
24 W
2309 388 PD
24 W
2212 546 PD
24 W
2434 617 PD
24 W
2260 467 PD
24 W
2323 582 PD
24 W
2371 503 PD
gr

gs 1463 388 4228 4228 MR c np
-114 -63 -115 -62 79 -49 79 -48 36 111 35 111 5461 3644 7 MP stroke
gr

gs 5388 3571 376 369 MR c np
24 W
5461 3644 PD
24 W
5532 3866 PD
24 W
5690 3769 PD
24 W
5496 3755 PD
24 W
5611 3818 PD
24 W
5575 3707 PD
gr

gs 1463 388 4228 4228 MR c np
110 47 110 46 -60 78 -60 78 -50 -125 -50 -124 2185 1102 7 MP stroke
gs 1892 780 367 396 MR c np
24 W
2185 1102 PD
24 W
2085 853 PD
24 W
1965 1009 PD
24 W
2135 978 PD
24 W
2025 931 PD
24 W
2075 1055 PD
gr

46 110 47 110 -124 -50 -125 -50 78 -60 78 -60 5069 4113 7 MP stroke
gs 4903 3820 396 367 MR c np
24 W
5069 4113 PD
24 W
5225 3993 PD
24 W
4976 3893 PD
24 W
5147 4053 PD
24 W
5100 3943 PD
24 W
5023 4003 PD
gr

-111 45 -111 46 -3 -75 -4 -74 115 29 114 29 1664 1575 7 MP stroke
gs 1591 1411 376 296 MR c np
24 W
1664 1575 PD
24 W
1893 1633 PD
24 W
1886 1484 PD
24 W
1778 1604 PD
24 W
1889 1559 PD
24 W
1775 1530 PD
gr

44 -123 45 -123 33 107 33 107 -78 16 -77 16 4592 4166 7 MP stroke
gs 4364 4093 302 393 MR c np
24 W
4592 4166 PD
24 W
4437 4198 PD
24 W
4503 4412 PD
24 W
4515 4182 PD
24 W
4470 4305 PD
24 W
4548 4289 PD
gr

49 106 49 105 -90 16 -89 15 40 -121 41 -121 5452 2025 7 MP stroke
gs 5281 1710 326 389 MR c np
24 W
5452 2025 PD
24 W
5533 1783 PD
24 W
5354 1814 PD
24 W
5493 1904 PD
24 W
5444 1798 PD
24 W
5403 1919 PD
gr

104 50 105 50 -121 40 -121 41 17 -91 16 -90 4262 726 7 MP stroke
gs 3980 472 389 328 MR c np
24 W
4262 726 PD
24 W
4295 545 PD
24 W
4053 626 PD
24 W
4278 636 PD
24 W
4174 586 PD
24 W
4158 676 PD
gr

116 -63 116 -64 -37 112 -36 112 -79 -48 -80 -49 5690 1234 7 MP stroke
gr

gs 5385 1064 379 371 MR c np
24 W
5690 1234 PD
24 W
5531 1137 PD
24 W
5458 1361 PD
24 W
5610 1185 PD
24 W
5495 1249 PD
24 W
5574 1297 PD
gr

gs 1463 388 4228 4228 MR c np
-62 119 -62 119 -49 -81 -49 -80 111 -39 111 -38 4720 626 7 MP stroke
gr

gs 4647 315 369 385 MR c np
24 W
4720 626 PD
24 W
4942 549 PD
24 W
4844 388 PD
24 W
4831 588 PD
24 W
4893 469 PD
24 W
4782 507 PD
gr

gs 1463 388 4228 4228 MR c np
-105 0 -106 0 43 -115 43 -114 63 114 62 115 2309 388 7 MP stroke
gr

gs 2236 315 358 376 MR c np
24 W
2309 388 PD
24 W
2434 617 PD
24 W
2520 388 PD
24 W
2371 503 PD
24 W
2477 503 PD
24 W
2414 388 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 115 62 114 63 -114 43 -115 43 5690 3558 6 MP stroke
gr

gs 5388 3485 376 358 MR c np
24 W
5690 3558 PD
24 W
5461 3644 PD
24 W
5690 3769 PD
24 W
5575 3601 PD
24 W
5575 3707 PD
24 W
5690 3664 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 116 42 116 42 -116 64 -116 63 5690 1234 6 MP stroke
gr

gs 5385 1161 379 358 MR c np
24 W
5690 1234 PD
24 W
5458 1361 PD
24 W
5690 1445 PD
24 W
5574 1297 PD
24 W
5574 1403 PD
24 W
5690 1339 PD
gr

gs 1463 388 4228 4228 MR c np
-106 0 -105 0 62 -119 62 -119 44 119 43 119 4633 388 7 MP stroke
gr

gs 4560 315 358 385 MR c np
24 W
4633 388 PD
24 W
4720 626 PD
24 W
4844 388 PD
24 W
4676 507 PD
24 W
4782 507 PD
24 W
4739 388 PD
gr

gs 1463 388 4228 4228 MR c np
-43 -119 -44 -119 123 4 123 5 -80 114 -79 115 4633 388 7 MP stroke
gr

gs 4401 315 393 385 MR c np
24 W
4633 388 PD
24 W
4474 617 PD
24 W
4720 626 PD
24 W
4554 503 PD
24 W
4597 622 PD
24 W
4676 507 PD
gr

gs 1463 388 4228 4228 MR c np
113 23 113 22 -107 73 -107 73 -6 -95 -6 -96 2953 3171 7 MP stroke
gs 2654 2907 373 338 MR c np
24 W
2953 3171 PD
24 W
2941 2980 PD
24 W
2727 3126 PD
24 W
2947 3075 PD
24 W
2834 3053 PD
24 W
2840 3148 PD
gr

92 47 92 47 -124 50 -125 50 33 -97 32 -97 5160 1204 7 MP stroke
gs 4903 937 396 341 MR c np
24 W
5160 1204 PD
24 W
5225 1010 PD
24 W
4976 1110 PD
24 W
5192 1107 PD
24 W
5100 1060 PD
24 W
5068 1157 PD
gr

39 115 40 114 -118 -36 -119 -36 79 -78 79 -79 2201 3887 7 MP stroke
gs 2049 3585 384 376 MR c np
24 W
2201 3887 PD
24 W
2359 3730 PD
24 W
2122 3658 PD
24 W
2280 3808 PD
24 W
2240 3694 PD
24 W
2162 3772 PD
gr

-116 -42 -116 -42 113 -79 113 -79 3 121 3 121 5458 1361 7 MP stroke
gr

gs 5385 1288 379 389 MR c np
24 W
5458 1361 PD
24 W
5464 1603 PD
24 W
5690 1445 PD
24 W
5461 1482 PD
24 W
5577 1524 PD
24 W
5574 1403 PD
gr

gs 1463 388 4228 4228 MR c np
85 73 85 74 -58 53 -58 54 -27 -127 -27 -127 2450 1067 7 MP stroke
gs 2207 740 317 401 MR c np
24 W
2450 1067 PD
24 W
2396 813 PD
24 W
2280 920 PD
24 W
2423 940 PD
24 W
2338 867 PD
24 W
2365 994 PD
gr

-77 59 -78 59 20 -114 20 -115 58 56 57 55 2278 4075 7 MP stroke
gs 2205 3884 302 376 MR c np
24 W
2278 4075 PD
24 W
2393 4186 PD
24 W
2433 3957 PD
24 W
2335 4130 PD
24 W
2413 4071 PD
24 W
2355 4016 PD
gr

-77 83 -77 82 -26 -125 -26 -125 103 43 103 42 4033 3316 7 MP stroke
gs 3960 3078 353 397 MR c np
24 W
4033 3316 PD
24 W
4239 3401 PD
24 W
4187 3151 PD
24 W
4136 3358 PD
24 W
4213 3276 PD
24 W
4110 3233 PD
gr

-113 31 -113 31 6 -93 6 -93 107 62 107 62 3551 2700 7 MP stroke
gs 3478 2565 373 333 MR c np
24 W
3551 2700 PD
24 W
3765 2824 PD
24 W
3777 2638 PD
24 W
3658 2762 PD
24 W
3771 2731 PD
24 W
3664 2669 PD
gr

-31 -79 -30 -79 103 -16 104 -17 -73 96 -73 95 3135 2604 7 MP stroke
gs 2916 2531 354 338 MR c np
24 W
3135 2604 PD
24 W
2989 2795 PD
24 W
3196 2762 PD
24 W
3062 2699 PD
24 W
3093 2778 PD
24 W
3166 2683 PD
gr

74 86 74 85 -127 -27 -127 -27 53 -58 53 -59 5158 3798 7 MP stroke
gs 4937 3554 401 318 MR c np
24 W
5158 3798 PD
24 W
5264 3681 PD
24 W
5010 3627 PD
24 W
5211 3739 PD
24 W
5137 3654 PD
24 W
5084 3712 PD
gr

-80 85 -81 85 -23 -126 -22 -125 103 41 103 40 3443 1852 7 MP stroke
gs 3370 1609 353 398 MR c np
24 W
3443 1852 PD
24 W
3649 1933 PD
24 W
3604 1682 PD
24 W
3546 1892 PD
24 W
3627 1808 PD
24 W
3523 1767 PD
gr

106 62 107 62 -119 26 -119 25 12 -88 13 -87 5241 1496 7 MP stroke
gs 4955 1248 385 322 MR c np
24 W
5241 1496 PD
24 W
5266 1321 PD
24 W
5028 1372 PD
24 W
5254 1409 PD
24 W
5147 1346 PD
24 W
5135 1434 PD
gr

116 35 116 35 -79 79 -79 78 -37 -113 -37 -114 2433 3957 7 MP stroke
gs 2128 3657 379 374 MR c np
24 W
2433 3957 PD
24 W
2359 3730 PD
24 W
2201 3887 PD
24 W
2396 3843 PD
24 W
2280 3808 PD
24 W
2317 3922 PD
gr

-110 20 -109 20 73 -95 73 -96 36 76 37 75 2916 2644 7 MP stroke
gs 2843 2531 366 338 MR c np
24 W
2916 2644 PD
24 W
2989 2795 PD
24 W
3135 2604 PD
24 W
2953 2719 PD
24 W
3062 2699 PD
24 W
3026 2624 PD
gr

-1 -129 -2 -129 56 69 55 69 -54 60 -54 60 1712 2272 7 MP stroke
gs 1531 2199 258 405 MR c np
24 W
1712 2272 PD
24 W
1604 2392 PD
24 W
1715 2530 PD
24 W
1658 2332 PD
24 W
1659 2461 PD
24 W
1713 2401 PD
gr

-101 72 -101 72 -18 -108 -17 -108 119 36 118 36 2122 3658 7 MP stroke
gs 2049 3441 384 363 MR c np
24 W
2122 3658 PD
24 W
2359 3730 PD
24 W
2324 3514 PD
24 W
2240 3694 PD
24 W
2342 3622 PD
24 W
2223 3586 PD
gr

-22 113 -21 112 -76 -111 -76 -111 97 -1 98 -2 3504 3349 7 MP stroke
gs 3431 3051 342 372 MR c np
24 W
3504 3349 PD
24 W
3699 3346 PD
24 W
3547 3124 PD
24 W
3602 3347 PD
24 W
3623 3235 PD
24 W
3526 3236 PD
gr

76 119 75 119 -109 -21 -110 -21 34 -98 34 -98 1866 2768 7 MP stroke
gs 1642 2457 366 385 MR c np
24 W
1866 2768 PD
24 W
1934 2572 PD
24 W
1715 2530 PD
24 W
1900 2670 PD
24 W
1824 2551 PD
24 W
1790 2649 PD
gr

-129 -1 -129 -2 60 -54 61 -54 68 55 69 56 3549 4363 7 MP stroke
gs 3476 4290 405 258 MR c np
24 W
3549 4363 PD
24 W
3686 4474 PD
24 W
3807 4366 PD
24 W
3618 4419 PD
24 W
3747 4420 PD
24 W
3678 4364 PD
gr

119 75 119 76 -98 34 -97 35 -22 -110 -21 -110 3549 4363 7 MP stroke
gs 3238 4070 385 367 MR c np
24 W
3549 4363 PD
24 W
3506 4143 PD
24 W
3311 4212 PD
24 W
3528 4253 PD
24 W
3409 4178 PD
24 W
3430 4288 PD
gr

109 62 108 63 -114 59 -114 58 5 -121 6 -121 3151 3517 7 MP stroke
gs 2861 3202 375 389 MR c np
24 W
3151 3517 PD
24 W
3162 3275 PD
24 W
2934 3392 PD
24 W
3157 3396 PD
24 W
3048 3333 PD
24 W
3042 3455 PD
gr

-107 84 -108 84 -2 -105 -2 -105 110 21 109 21 1715 2530 7 MP stroke
gs 1642 2289 366 357 MR c np
24 W
1715 2530 PD
24 W
1934 2572 PD
24 W
1930 2362 PD
24 W
1824 2551 PD
24 W
1932 2467 PD
24 W
1822 2446 PD
gr

-10 111 -9 110 -105 -52 -104 -52 114 -58 114 -59 2934 3392 7 MP stroke
gs 2861 3098 375 368 MR c np
24 W
2934 3392 PD
24 W
3162 3275 PD
24 W
2953 3171 PD
24 W
3048 3333 PD
24 W
3058 3223 PD
24 W
2944 3281 PD
gr

-49 -105 -49 -106 113 9 114 8 -64 97 -65 97 5354 1814 7 MP stroke
gs 5152 1741 374 358 MR c np
24 W
5354 1814 PD
24 W
5225 2008 PD
24 W
5452 2025 PD
24 W
5289 1911 PD
24 W
5339 2016 PD
24 W
5403 1919 PD
gr

84 -108 84 -107 21 110 22 110 -106 -3 -105 -2 3717 4148 7 MP stroke
gs 3433 4070 358 367 MR c np
24 W
3717 4148 PD
24 W
3506 4143 PD
24 W
3549 4363 PD
24 W
3612 4146 PD
24 W
3528 4253 PD
24 W
3633 4256 PD
gr

64 113 65 113 -90 5 -91 4 26 -117 26 -118 2687 4393 7 MP stroke
gs 2485 4085 328 382 MR c np
24 W
2687 4393 PD
24 W
2739 4158 PD
24 W
2558 4167 PD
24 W
2713 4275 PD
24 W
2648 4162 PD
24 W
2623 4280 PD
gr

-105 -50 -104 -50 97 -63 96 -64 8 113 8 114 4053 626 7 MP stroke
gs 3980 553 356 374 MR c np
24 W
4053 626 PD
24 W
4069 853 PD
24 W
4262 726 PD
24 W
4061 740 PD
24 W
4165 789 PD
24 W
4158 676 PD
gr

-46 110 -47 111 -78 -61 -78 -60 125 -50 124 -50 4976 1110 7 MP stroke
gs 4903 816 396 368 MR c np
24 W
4976 1110 PD
24 W
5225 1010 PD
24 W
5069 889 PD
24 W
5100 1060 PD
24 W
5147 950 PD
24 W
5022 1000 PD
gr

-121 -9 -122 -9 86 -96 85 -96 36 105 36 105 2691 3374 7 MP stroke
gs 2618 3301 390 357 MR c np
24 W
2691 3374 PD
24 W
2763 3584 PD
24 W
2934 3392 PD
24 W
2727 3479 PD
24 W
2848 3488 PD
24 W
2812 3383 PD
gr

23 114 23 114 -110 -17 -110 -16 87 -98 87 -97 4630 1479 7 MP stroke
gs 4511 1178 367 375 MR c np
24 W
4630 1479 PD
24 W
4804 1284 PD
24 W
4584 1251 PD
24 W
4717 1382 PD
24 W
4694 1268 PD
24 W
4607 1365 PD
gr

-86 98 -87 97 -28 -115 -29 -114 115 17 115 17 1693 2963 7 MP stroke
gs 1620 2695 377 376 MR c np
24 W
1693 2963 PD
24 W
1923 2997 PD
24 W
1866 2768 PD
24 W
1808 2980 PD
24 W
1894 2883 PD
24 W
1779 2865 PD
gr

98 -87 97 -86 18 115 17 116 -115 -29 -115 -29 3311 4212 7 MP stroke
gs 3008 4081 377 378 MR c np
24 W
3311 4212 PD
24 W
3081 4154 PD
24 W
3116 4385 PD
24 W
3196 4183 PD
24 W
3098 4270 PD
24 W
3213 4299 PD
gr

-111 -10 -112 -11 58 -100 58 -100 54 111 53 110 2685 1858 7 MP stroke
gs 2612 1785 370 368 MR c np
24 W
2685 1858 PD
24 W
2792 2079 PD
24 W
2908 1879 PD
24 W
2738 1968 PD
24 W
2850 1979 PD
24 W
2796 1868 PD
gr

29 114 28 115 -108 -67 -108 -67 80 -47 79 -48 1923 2997 7 MP stroke
gs 1793 2695 363 376 MR c np
24 W
1923 2997 PD
24 W
2082 2902 PD
24 W
1866 2768 PD
24 W
2002 2949 PD
24 W
1974 2835 PD
24 W
1894 2883 PD
gr

115 29 115 29 -49 81 -49 82 -66 -111 -66 -110 3311 4212 7 MP stroke
gs 3008 3918 377 368 MR c np
24 W
3311 4212 PD
24 W
3179 3991 PD
24 W
3081 4154 PD
24 W
3245 4102 PD
24 W
3130 4073 PD
24 W
3196 4183 PD
gr

69 114 69 114 -99 -12 -100 -12 30 -102 31 -102 4825 3423 7 MP stroke
gs 4614 3122 346 375 MR c np
24 W
4825 3423 PD
24 W
4886 3219 PD
24 W
4687 3195 PD
24 W
4856 3321 PD
24 W
4786 3207 PD
24 W
4756 3309 PD
gr

-109 68 -108 67 -3 -121 -3 -121 111 53 112 54 5241 1496 7 MP stroke
gs 5168 1288 370 389 MR c np
24 W
5241 1496 PD
24 W
5464 1603 PD
24 W
5458 1361 PD
24 W
5353 1550 PD
24 W
5461 1482 PD
24 W
5350 1428 PD
gr

67 -110 67 -109 56 114 56 114 -123 -5 -123 -4 4720 626 7 MP stroke
gs 4401 544 393 375 MR c np
24 W
4720 626 PD
24 W
4474 617 PD
24 W
4586 845 PD
24 W
4597 622 PD
24 W
4530 731 PD
24 W
4653 736 PD
gr

-69 -114 -69 -114 107 39 108 38 -38 76 -39 75 4687 3195 7 MP stroke
gs 4537 3122 362 375 MR c np
24 W
4687 3195 PD
24 W
4610 3346 PD
24 W
4825 3423 PD
24 W
4648 3270 PD
24 W
4718 3384 PD
24 W
4756 3309 PD
gr

-42 -85 -42 -84 111 44 112 44 -70 40 -69 41 5404 3252 7 MP stroke
gs 5192 3179 370 316 MR c np
24 W
5404 3252 PD
24 W
5265 3333 PD
24 W
5488 3421 PD
24 W
5335 3293 PD
24 W
5377 3377 PD
24 W
5446 3337 PD
gr

122 59 121 59 -107 32 -108 33 -14 -91 -14 -92 1930 3508 7 MP stroke
gs 1614 3252 390 330 MR c np
24 W
1930 3508 PD
24 W
1902 3325 PD
24 W
1687 3390 PD
24 W
1916 3416 PD
24 W
1794 3358 PD
24 W
1808 3449 PD
gr

-105 -52 -105 -51 60 -63 60 -63 45 114 45 115 3823 3213 7 MP stroke
gs 3750 3140 357 376 MR c np
24 W
3823 3213 PD
24 W
3913 3442 PD
24 W
4033 3316 PD
24 W
3868 3328 PD
24 W
3973 3379 PD
24 W
3928 3265 PD
gr

-64 99 -64 98 -53 -110 -54 -111 118 12 117 12 2557 2055 7 MP stroke
gs 2484 1785 382 368 MR c np
24 W
2557 2055 PD
24 W
2792 2079 PD
24 W
2685 1858 PD
24 W
2674 2067 PD
24 W
2738 1968 PD
24 W
2621 1956 PD
gr

-86 76 -86 76 -3 -114 -2 -114 88 38 89 38 2387 2499 7 MP stroke
gs 2314 2274 324 375 MR c np
24 W
2387 2499 PD
24 W
2564 2575 PD
24 W
2559 2347 PD
24 W
2476 2537 PD
24 W
2562 2461 PD
24 W
2473 2423 PD
gr

108 67 108 67 -87 30 -87 29 -21 -96 -21 -97 2082 2902 7 MP stroke
gs 1793 2636 363 340 MR c np
24 W
2082 2902 PD
24 W
2040 2709 PD
24 W
1866 2768 PD
24 W
2061 2805 PD
24 W
1953 2738 PD
24 W
1974 2835 PD
gr

66 110 66 111 -96 -23 -96 -23 30 -88 30 -87 3311 4212 7 MP stroke
gs 3106 3918 339 368 MR c np
24 W
3311 4212 PD
24 W
3371 4037 PD
24 W
3179 3991 PD
24 W
3341 4125 PD
24 W
3275 4014 PD
24 W
3245 4102 PD
gr

-84 -42 -84 -42 40 -70 40 -69 44 111 44 112 2657 590 7 MP stroke
gs 2584 517 315 370 MR c np
24 W
2657 590 PD
24 W
2745 813 PD
24 W
2825 674 PD
24 W
2701 702 PD
24 W
2785 744 PD
24 W
2741 632 PD
gr

115 53 115 52 -92 52 -92 51 -23 -104 -23 -104 1693 2963 7 MP stroke
gr

gs 1390 2682 377 355 MR c np
24 W
1693 2963 PD
24 W
1647 2755 PD
24 W
1463 2858 PD
24 W
1670 2859 PD
24 W
1555 2806 PD
24 W
1578 2910 PD
gr

gs 1463 388 4228 4228 MR c np
-66 84 -66 84 -53 -59 -53 -58 119 -25 119 -26 5028 1372 7 MP stroke
gs 4955 1131 385 315 MR c np
24 W
5028 1372 PD
24 W
5266 1321 PD
24 W
5160 1204 PD
24 W
5147 1346 PD
24 W
5213 1263 PD
24 W
5094 1288 PD
gr

-100 -72 -100 -72 97 -42 98 -42 2 114 3 114 2559 2347 7 MP stroke
gs 2486 2274 347 375 MR c np
24 W
2559 2347 PD
24 W
2564 2575 PD
24 W
2759 2491 PD
24 W
2562 2461 PD
24 W
2662 2533 PD
24 W
2659 2419 PD
gr

-16 -106 -17 -106 106 68 105 67 -89 38 -89 39 2968 2213 7 MP stroke
gs 2717 2140 358 359 MR c np
24 W
2968 2213 PD
24 W
2790 2290 PD
24 W
3001 2425 PD
24 W
2879 2252 PD
24 W
2895 2357 PD
24 W
2984 2319 PD
gr

-22 114 -23 115 -77 -113 -77 -114 100 -1 99 -1 2908 1879 7 MP stroke
gs 2835 1577 346 376 MR c np
24 W
2908 1879 PD
24 W
3107 1877 PD
24 W
2953 1650 PD
24 W
3007 1878 PD
24 W
3030 1763 PD
24 W
2930 1765 PD
gr

17 97 18 98 -107 -62 -107 -62 89 -35 90 -36 3586 2895 7 MP stroke
gs 3478 2627 361 342 MR c np
24 W
3586 2895 PD
24 W
3765 2824 PD
24 W
3551 2700 PD
24 W
3676 2859 PD
24 W
3658 2762 PD
24 W
3569 2798 PD
gr

-87 -80 -87 -81 128 -5 128 -4 -41 85 -41 85 1706 4046 7 MP stroke
gs 1551 3973 403 317 MR c np
24 W
1706 4046 PD
24 W
1624 4216 PD
24 W
1880 4207 PD
24 W
1665 4131 PD
24 W
1752 4212 PD
24 W
1793 4126 PD
gr

52 115 52 115 -104 -23 -104 -23 52 -92 52 -92 3220 4615 7 MP stroke
gr

gs 3043 4312 355 377 MR c np
24 W
3220 4615 PD
24 W
3324 4431 PD
24 W
3116 4385 PD
24 W
3272 4523 PD
24 W
3220 4408 PD
24 W
3168 4500 PD
gr

gs 1463 388 4228 4228 MR c np
-74 -85 -74 -86 83 -39 83 -38 -9 124 -9 124 1880 4207 7 MP stroke
gs 1789 4134 313 395 MR c np
24 W
1880 4207 PD
24 W
1862 4455 PD
24 W
2028 4378 PD
24 W
1871 4331 PD
24 W
1945 4417 PD
24 W
1954 4292 PD
gr

117 17 117 16 -101 88 -102 87 -15 -104 -16 -104 2977 1045 7 MP stroke
gs 2670 764 381 355 MR c np
24 W
2977 1045 PD
24 W
2946 837 PD
24 W
2743 1012 PD
24 W
2961 941 PD
24 W
2844 924 PD
24 W
2860 1028 PD
gr

18 123 18 123 -107 -22 -106 -22 89 -101 88 -101 5066 3334 7 MP stroke
gs 4957 3015 360 393 MR c np
24 W
5066 3334 PD
24 W
5243 3132 PD
24 W
5030 3088 PD
24 W
5154 3233 PD
24 W
5137 3110 PD
24 W
5048 3211 PD
gr

-106 -52 -105 -52 61 -60 60 -61 45 112 45 113 3232 1748 7 MP stroke
gs 3159 1675 358 372 MR c np
24 W
3232 1748 PD
24 W
3322 1973 PD
24 W
3443 1852 PD
24 W
3277 1861 PD
24 W
3382 1912 PD
24 W
3338 1800 PD
gr

63 105 62 105 -84 -23 -85 -23 22 -82 22 -82 2558 4167 7 MP stroke
gs 2360 3884 316 357 MR c np
24 W
2558 4167 PD
24 W
2602 4003 PD
24 W
2433 3957 PD
24 W
2580 4085 PD
24 W
2517 3980 PD
24 W
2495 4062 PD
gr

-53 104 -52 104 -54 -126 -54 -126 106 22 107 22 5030 3088 7 MP stroke
gs 4957 2807 360 399 MR c np
24 W
5030 3088 PD
24 W
5243 3132 PD
24 W
5135 2880 PD
24 W
5137 3110 PD
24 W
5189 3006 PD
24 W
5083 2984 PD
gr

111 -6 110 -6 -37 103 -37 102 -73 -97 -74 -96 3012 1410 7 MP stroke
gs 2718 1144 368 352 MR c np
24 W
3012 1410 PD
24 W
2865 1217 PD
24 W
2791 1422 PD
24 W
2938 1314 PD
24 W
2828 1319 PD
24 W
2901 1416 PD
gr

113 24 113 23 -106 64 -107 63 -6 -87 -7 -87 4422 2577 7 MP stroke
gs 4123 2330 373 321 MR c np
24 W
4422 2577 PD
24 W
4409 2403 PD
24 W
4196 2530 PD
24 W
4415 2490 PD
24 W
4302 2466 PD
24 W
4309 2553 PD
gr

-104 -40 -105 -39 51 -87 50 -86 54 126 54 126 5135 2880 7 MP stroke
gs 5062 2807 356 399 MR c np
24 W
5135 2880 PD
24 W
5243 3132 PD
24 W
5344 2959 PD
24 W
5189 3006 PD
24 W
5293 3046 PD
24 W
5239 2920 PD
gr

-56 -114 -56 -114 94 1 94 1 -38 113 -38 113 4474 617 7 MP stroke
gs 4325 544 335 375 MR c np
24 W
4474 617 PD
24 W
4398 843 PD
24 W
4586 845 PD
24 W
4436 730 PD
24 W
4492 844 PD
24 W
4530 731 PD
gr

-102 -55 -102 -54 109 -57 110 -56 -8 111 -7 111 4422 2577 7 MP stroke
gs 4334 2504 366 369 MR c np
24 W
4422 2577 PD
24 W
4407 2799 PD
24 W
4626 2686 PD
24 W
4415 2688 PD
24 W
4517 2743 PD
24 W
4524 2632 PD
gr

72 -112 71 -112 15 90 15 91 -86 21 -87 22 4599 3743 7 MP stroke
gs 4353 3670 320 371 MR c np
24 W
4599 3743 PD
24 W
4426 3786 PD
24 W
4456 3967 PD
24 W
4512 3765 PD
24 W
4441 3877 PD
24 W
4527 3855 PD
gr

105 0 105 0 -34 115 -33 115 -71 -115 -72 -115 5268 4615 7 MP stroke
gr

gs 4985 4312 357 377 MR c np
24 W
5268 4615 PD
24 W
5125 4385 PD
24 W
5058 4615 PD
24 W
5196 4500 PD
24 W
5092 4500 PD
24 W
5163 4615 PD
gr

gs 1463 388 4228 4228 MR c np
0 210 -115 -72 -115 -71 115 -33 115 -34 1463 1020 6 MP stroke
gr

gs 1390 737 377 357 MR c np
24 W
1463 1020 PD
24 W
1693 953 PD
24 W
1463 810 PD
24 W
1578 986 PD
24 W
1578 882 PD
24 W
1463 915 PD
gr

gs 1463 388 4228 4228 MR c np
61 -99 60 -98 37 110 36 110 -97 -12 -97 -11 1819 1156 7 MP stroke
gs 1552 1060 341 367 MR c np
24 W
1819 1156 PD
24 W
1625 1133 PD
24 W
1698 1353 PD
24 W
1722 1145 PD
24 W
1661 1243 PD
24 W
1758 1255 PD
gr

-99 60 -98 60 -12 -97 -11 -97 110 37 110 37 4725 4379 7 MP stroke
gs 4652 4186 367 341 MR c np
24 W
4725 4379 PD
24 W
4945 4453 PD
24 W
4922 4259 PD
24 W
4835 4416 PD
24 W
4934 4356 PD
24 W
4824 4319 PD
gr

107 49 106 48 -89 49 -89 49 -18 -98 -17 -97 3586 2895 7 MP stroke
gs 3300 2627 360 342 MR c np
24 W
3586 2895 PD
24 W
3551 2700 PD
24 W
3373 2798 PD
24 W
3569 2798 PD
24 W
3462 2749 PD
24 W
3479 2846 PD
gr

22 125 23 126 -63 -54 -62 -54 40 -71 40 -72 3649 1933 7 MP stroke
gs 3531 1609 272 398 MR c np
24 W
3649 1933 PD
24 W
3729 1790 PD
24 W
3604 1682 PD
24 W
3689 1861 PD
24 W
3667 1736 PD
24 W
3627 1808 PD
gr

14 -129 14 -128 95 72 96 72 -110 56 -109 57 4626 2686 7 MP stroke
gs 4334 2613 366 404 MR c np
24 W
4626 2686 PD
24 W
4407 2799 PD
24 W
4598 2943 PD
24 W
4517 2743 PD
24 W
4503 2871 PD
24 W
4612 2815 PD
gr

-6 -118 -6 -119 89 80 89 80 -83 38 -83 39 2028 4378 7 MP stroke
gr

gs 1789 4305 325 384 MR c np
24 W
2028 4378 PD
24 W
1862 4455 PD
24 W
2040 4615 PD
24 W
1945 4417 PD
24 W
1951 4535 PD
24 W
2034 4496 PD
gr

gs 1463 388 4228 4228 MR c np
-58 69 -57 68 0 -116 -1 -115 58 47 58 47 2392 1794 7 MP stroke
gs 2319 1584 263 378 MR c np
24 W
2392 1794 PD
24 W
2508 1888 PD
24 W
2507 1657 PD
24 W
2450 1841 PD
24 W
2507 1773 PD
24 W
2450 1725 PD
gr

-122 -4 -121 -4 41 -85 41 -85 80 89 81 89 1463 4038 7 MP stroke
gr

gs 1390 3965 390 325 MR c np
24 W
1463 4038 PD
24 W
1624 4216 PD
24 W
1706 4046 PD
24 W
1544 4127 PD
24 W
1665 4131 PD
24 W
1585 4042 PD
gr

gs 1463 388 4228 4228 MR c np
87 -97 86 -98 23 104 23 104 -109 -6 -110 -7 1866 2768 7 MP stroke
gs 1574 2682 366 355 MR c np
24 W
1866 2768 PD
24 W
1647 2755 PD
24 W
1693 2963 PD
24 W
1756 2761 PD
24 W
1670 2859 PD
24 W
1779 2865 PD
gr

-106 -48 -107 -49 84 -36 84 -37 23 85 22 85 3373 2798 7 MP stroke
gs 3300 2725 360 317 MR c np
24 W
3373 2798 PD
24 W
3418 2968 PD
24 W
3586 2895 PD
24 W
3395 2883 PD
24 W
3502 2931 PD
24 W
3479 2846 PD
gr

-90 82 -91 82 -16 -113 -17 -112 107 31 107 30 3777 2638 7 MP stroke
gs 3704 2401 361 372 MR c np
24 W
3777 2638 PD
24 W
3991 2699 PD
24 W
3958 2474 PD
24 W
3884 2668 PD
24 W
3974 2587 PD
24 W
3867 2556 PD
gr

-97 86 -98 87 -6 -110 -7 -109 104 23 104 23 3116 4385 7 MP stroke
gs 3043 4139 355 366 MR c np
24 W
3116 4385 PD
24 W
3324 4431 PD
24 W
3311 4212 PD
24 W
3220 4408 PD
24 W
3317 4322 PD
24 W
3213 4299 PD
gr

63 117 64 118 -110 -5 -111 -6 47 -112 47 -112 5408 2471 7 MP stroke
gs 5208 2163 368 382 MR c np
24 W
5408 2471 PD
24 W
5502 2247 PD
24 W
5281 2236 PD
24 W
5455 2359 PD
24 W
5391 2241 PD
24 W
5345 2354 PD
gr

117 63 118 64 -112 47 -112 46 -6 -110 -5 -110 3842 797 7 MP stroke
gs 3534 504 382 367 MR c np
24 W
3842 797 PD
24 W
3831 577 PD
24 W
3607 670 PD
24 W
3837 687 PD
24 W
3719 623 PD
24 W
3725 734 PD
gr

-119 -27 -119 -27 94 -84 94 -84 25 111 25 111 5452 2025 7 MP stroke
gr

gs 5379 1952 385 369 MR c np
24 W
5452 2025 PD
24 W
5502 2247 PD
24 W
5690 2079 PD
24 W
5477 2136 PD
24 W
5596 2163 PD
24 W
5571 2052 PD
gr

gs 1463 388 4228 4228 MR c np
-27 -119 -27 -119 111 25 111 24 -84 94 -84 95 3999 388 7 MP stroke
gr

gs 3758 315 369 385 MR c np
24 W
3999 388 PD
24 W
3831 577 PD
24 W
4053 626 PD
24 W
3915 483 PD
24 W
3942 601 PD
24 W
4026 507 PD
gr

gs 1463 388 4228 4228 MR c np
84 -89 85 -89 37 112 38 111 -122 -22 -122 -23 4005 1490 7 MP stroke
gs 3688 1372 391 370 MR c np
24 W
4005 1490 PD
24 W
3761 1445 PD
24 W
3836 1668 PD
24 W
3883 1467 PD
24 W
3799 1556 PD
24 W
3921 1579 PD
gr

46 76 46 76 -90 34 -89 33 43 -110 44 -109 2629 2911 7 MP stroke
gs 2464 2619 326 366 MR c np
24 W
2629 2911 PD
24 W
2716 2692 PD
24 W
2537 2759 PD
24 W
2673 2802 PD
24 W
2627 2725 PD
24 W
2583 2835 PD
gr

56 -104 56 -103 34 113 33 114 -89 -10 -90 -10 1799 3183 7 MP stroke
gs 1547 3090 326 374 MR c np
24 W
1799 3183 PD
24 W
1620 3163 PD
24 W
1687 3390 PD
24 W
1709 3173 PD
24 W
1653 3277 PD
24 W
1743 3287 PD
gr

26 125 26 125 -67 -54 -67 -54 41 -71 41 -71 4239 3401 7 MP stroke
gs 4114 3078 281 397 MR c np
24 W
4239 3401 PD
24 W
4321 3259 PD
24 W
4187 3151 PD
24 W
4280 3330 PD
24 W
4254 3205 PD
24 W
4213 3276 PD
gr

-72 97 -73 97 -27 -109 -27 -109 100 12 99 12 4687 3195 7 MP stroke
gs 4614 2928 346 365 MR c np
24 W
4687 3195 PD
24 W
4886 3219 PD
24 W
4832 3001 PD
24 W
4786 3207 PD
24 W
4859 3110 PD
24 W
4759 3098 PD
gr

-105 57 -104 57 -9 -90 -10 -90 114 33 114 33 2687 4393 7 MP stroke
gs 2614 4206 375 327 MR c np
24 W
2687 4393 PD
24 W
2915 4459 PD
24 W
2896 4279 PD
24 W
2801 4426 PD
24 W
2905 4369 PD
24 W
2792 4336 PD
gr

-105 0 -106 0 79 -115 80 -114 26 114 26 115 4422 388 7 MP stroke
gr

gs 4349 315 358 376 MR c np
24 W
4422 388 PD
24 W
4474 617 PD
24 W
4633 388 PD
24 W
4448 503 PD
24 W
4554 503 PD
24 W
4527 388 PD
gr

gs 1463 388 4228 4228 MR c np
-89 96 -89 97 -20 -94 -20 -95 109 -2 109 -2 2314 3260 7 MP stroke
gs 2241 2994 365 340 MR c np
24 W
2314 3260 PD
24 W
2532 3256 PD
24 W
2492 3067 PD
24 W
2423 3258 PD
24 W
2512 3161 PD
24 W
2403 3164 PD
gr

0 -211 112 71 111 72 -111 34 -112 34 5690 3981 6 MP stroke
gr

gs 5394 3908 370 358 MR c np
24 W
5690 3981 PD
24 W
5467 4049 PD
24 W
5690 4192 PD
24 W
5578 4015 PD
24 W
5578 4121 PD
24 W
5690 4086 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 113 26 113 27 -113 79 -113 79 5690 1445 6 MP stroke
gr

gs 5391 1372 373 358 MR c np
24 W
5690 1445 PD
24 W
5464 1603 PD
24 W
5690 1656 PD
24 W
5577 1524 PD
24 W
5577 1630 PD
24 W
5690 1551 PD
gr

gs 1463 388 4228 4228 MR c np
-106 0 -105 0 34 -112 35 -111 71 111 71 112 1886 388 7 MP stroke
gr

gs 1813 315 358 370 MR c np
24 W
1886 388 PD
24 W
2028 611 PD
24 W
2097 388 PD
24 W
1957 500 PD
24 W
2063 500 PD
24 W
1992 388 PD
gr

gs 1463 388 4228 4228 MR c np
-105 0 -106 0 71 -115 71 -114 35 114 34 115 5056 388 7 MP stroke
gr

gs 4983 315 358 376 MR c np
24 W
5056 388 PD
24 W
5125 617 PD
24 W
5267 388 PD
24 W
5090 503 PD
24 W
5196 503 PD
24 W
5161 388 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 112 34 111 35 -111 71 -112 71 5690 811 6 MP stroke
gr

gs 5394 738 370 358 MR c np
24 W
5690 811 PD
24 W
5467 953 PD
24 W
5690 1022 PD
24 W
5578 882 PD
24 W
5578 988 PD
24 W
5690 917 PD
gr

gs 1463 388 4228 4228 MR c np
-124 10 -124 9 44 -80 45 -81 79 71 80 71 1463 3648 7 MP stroke
gr

gs 1390 3556 395 308 MR c np
24 W
1463 3648 PD
24 W
1622 3790 PD
24 W
1711 3629 PD
24 W
1543 3719 PD
24 W
1667 3709 PD
24 W
1587 3638 PD
gr

gs 1463 388 4228 4228 MR c np
9 -123 9 -123 71 80 71 80 -80 43 -80 43 2448 4369 7 MP stroke
gr

gs 2215 4296 307 393 MR c np
24 W
2448 4369 PD
24 W
2288 4455 PD
24 W
2430 4615 PD
24 W
2368 4412 PD
24 W
2359 4535 PD
24 W
2439 4492 PD
gr

gs 1463 388 4228 4228 MR c np
-86 3 -86 3 25 -108 25 -108 61 105 61 105 3609 3517 7 MP stroke
gs 3536 3438 319 363 MR c np
24 W
3609 3517 PD
24 W
3731 3727 PD
24 W
3781 3511 PD
24 W
3670 3622 PD
24 W
3756 3619 PD
24 W
3695 3514 PD
gr

119 14 119 15 -87 72 -87 72 -32 -87 -32 -86 3389 3546 7 MP stroke
gs 3078 3300 385 320 MR c np
24 W
3389 3546 PD
24 W
3325 3373 PD
24 W
3151 3517 PD
24 W
3357 3460 PD
24 W
3238 3445 PD
24 W
3270 3532 PD
gr

-116 -35 -116 -35 78 -59 77 -59 39 94 38 94 2201 3887 7 MP stroke
gs 2128 3814 379 335 MR c np
24 W
2201 3887 PD
24 W
2278 4075 PD
24 W
2433 3957 PD
24 W
2239 3981 PD
24 W
2355 4016 PD
24 W
2317 3922 PD
gr

-104 13 -105 13 11 -102 12 -102 93 89 93 89 4239 3401 7 MP stroke
gs 4166 3302 356 351 MR c np
24 W
4239 3401 PD
24 W
4425 3579 PD
24 W
4448 3375 PD
24 W
4332 3490 PD
24 W
4437 3477 PD
24 W
4343 3388 PD
gr

-85 96 -86 96 -21 -89 -21 -88 107 -8 106 -7 2763 3584 7 MP stroke
gs 2690 3319 360 339 MR c np
24 W
2763 3584 PD
24 W
2976 3569 PD
24 W
2934 3392 PD
24 W
2869 3577 PD
24 W
2955 3481 PD
24 W
2848 3488 PD
gr

-57 98 -56 99 -35 -111 -36 -111 92 12 92 13 5348 3841 7 MP stroke
gs 5275 3571 331 369 MR c np
24 W
5348 3841 PD
24 W
5532 3866 PD
24 W
5461 3644 PD
24 W
5440 3854 PD
24 W
5496 3755 PD
24 W
5405 3743 PD
gr

99 -56 99 -57 12 92 12 92 -111 -36 -111 -35 2434 617 7 MP stroke
gs 2139 473 369 331 MR c np
24 W
2434 617 PD
24 W
2212 546 PD
24 W
2236 730 PD
24 W
2323 582 PD
24 W
2224 638 PD
24 W
2335 673 PD
gr

84 84 84 85 -114 20 -115 20 31 -104 30 -105 4398 2056 7 MP stroke
gs 4157 1774 376 356 MR c np
24 W
4398 2056 PD
24 W
4459 1847 PD
24 W
4230 1887 PD
24 W
4428 1951 PD
24 W
4344 1867 PD
24 W
4314 1972 PD
gr

95 -33 94 -33 15 101 14 100 -109 -67 -109 -68 5281 2236 7 MP stroke
gs 4990 2028 365 348 MR c np
24 W
5281 2236 PD
24 W
5063 2101 PD
24 W
5092 2302 PD
24 W
5172 2168 PD
24 W
5077 2201 PD
24 W
5186 2269 PD
gr

-107 -84 -107 -84 105 -21 105 -21 2 105 2 105 1930 2362 7 MP stroke
gs 1857 2289 361 357 MR c np
24 W
1930 2362 PD
24 W
1934 2572 PD
24 W
2144 2530 PD
24 W
1932 2467 PD
24 W
2039 2551 PD
24 W
2037 2446 PD
gr

-28 -114 -28 -114 109 68 109 67 -81 47 -81 46 5225 2008 7 MP stroke
gs 4990 1935 365 375 MR c np
24 W
5225 2008 PD
24 W
5063 2101 PD
24 W
5281 2236 PD
24 W
5144 2054 PD
24 W
5172 2168 PD
24 W
5253 2122 PD
gr

-96 -75 -96 -75 111 -16 111 -16 -15 91 -15 91 1930 3508 7 MP stroke
gs 1827 3435 369 329 MR c np
24 W
1930 3508 PD
24 W
1900 3690 PD
24 W
2122 3658 PD
24 W
1915 3599 PD
24 W
2011 3674 PD
24 W
2026 3583 PD
gr

-29 86 -28 87 -68 -109 -68 -110 97 23 96 23 3785 970 7 MP stroke
gs 3712 724 340 366 MR c np
24 W
3785 970 PD
24 W
3978 1016 PD
24 W
3842 797 PD
24 W
3881 993 PD
24 W
3910 906 PD
24 W
3814 884 PD
gr

-83 -110 -83 -109 105 2 106 3 -23 107 -22 107 3551 3929 7 MP stroke
gs 3433 3856 358 366 MR c np
24 W
3551 3929 PD
24 W
3506 4143 PD
24 W
3717 4148 PD
24 W
3529 4036 PD
24 W
3612 4146 PD
24 W
3634 4039 PD
gr

-113 -28 -114 -28 46 -81 45 -82 68 110 68 109 3842 797 7 MP stroke
gs 3769 724 374 366 MR c np
24 W
3842 797 PD
24 W
3978 1016 PD
24 W
4069 853 PD
24 W
3910 906 PD
24 W
4023 934 PD
24 W
3955 825 PD
gr

71 89 71 89 -112 13 -113 13 42 -102 41 -102 2708 1626 7 MP stroke
gs 2493 1349 372 351 MR c np
24 W
2708 1626 PD
24 W
2791 1422 PD
24 W
2566 1448 PD
24 W
2749 1524 PD
24 W
2678 1435 PD
24 W
2637 1537 PD
gr

-97 52 -97 53 37 -103 36 -103 60 50 61 51 2028 4378 7 MP stroke
gs 1955 4200 341 353 MR c np
24 W
2028 4378 PD
24 W
2149 4479 PD
24 W
2222 4273 PD
24 W
2089 4429 PD
24 W
2185 4376 PD
24 W
2125 4326 PD
gr

-40 104 -39 105 -73 -91 -73 -92 113 -13 112 -13 2566 1448 7 MP stroke
gs 2493 1166 372 356 MR c np
24 W
2566 1448 PD
24 W
2791 1422 PD
24 W
2645 1239 PD
24 W
2678 1435 PD
24 W
2718 1330 PD
24 W
2606 1344 PD
gr

46 -100 45 -100 54 59 53 59 -99 41 -99 41 1797 3846 7 MP stroke
gs 1526 3773 345 347 MR c np
24 W
1797 3846 PD
24 W
1599 3928 PD
24 W
1706 4046 PD
24 W
1698 3887 PD
24 W
1652 3987 PD
24 W
1751 3946 PD
gr

-6 121 -5 121 -82 -49 -81 -49 87 -72 87 -72 3151 3517 7 MP stroke
gs 3078 3202 321 389 MR c np
24 W
3151 3517 PD
24 W
3325 3373 PD
24 W
3162 3275 PD
24 W
3238 3445 PD
24 W
3244 3324 PD
24 W
3157 3396 PD
gr

-71 90 -71 90 -41 -68 -42 -67 112 -22 113 -23 3162 3275 7 MP stroke
gs 3089 3022 372 327 MR c np
24 W
3162 3275 PD
24 W
3387 3230 PD
24 W
3304 3095 PD
24 W
3275 3252 PD
24 W
3345 3163 PD
24 W
3233 3185 PD
gr

48 -115 47 -115 53 78 53 78 -101 37 -100 37 3116 4385 7 MP stroke
gr

gs 2842 4312 348 377 MR c np
24 W
3116 4385 PD
24 W
2915 4459 PD
24 W
3021 4615 PD
24 W
3016 4422 PD
24 W
2968 4537 PD
24 W
3068 4500 PD
gr

gs 1463 388 4228 4228 MR c np
-115 47 -115 47 37 -100 36 -100 78 53 79 53 1463 3057 7 MP stroke
gr

gs 1390 2890 377 347 MR c np
24 W
1463 3057 PD
24 W
1620 3163 PD
24 W
1693 2963 PD
24 W
1542 3110 PD
24 W
1656 3063 PD
24 W
1578 3010 PD
gr

gs 1463 388 4228 4228 MR c np
107 -26 106 -26 -70 90 -70 91 -37 -65 -36 -64 4299 3713 7 MP stroke
gs 4013 3511 360 328 MR c np
24 W
4299 3713 PD
24 W
4226 3584 PD
24 W
4086 3765 PD
24 W
4263 3649 PD
24 W
4156 3675 PD
24 W
4192 3739 PD
gr

17 -133 17 -133 81 72 81 72 -98 61 -98 61 5010 3627 7 MP stroke
gs 4741 3554 343 413 MR c np
24 W
5010 3627 PD
24 W
4814 3749 PD
24 W
4976 3893 PD
24 W
4912 3688 PD
24 W
4895 3821 PD
24 W
4993 3760 PD
gr

-133 17 -132 18 61 -98 61 -97 71 80 72 80 2185 1102 7 MP stroke
gs 2112 994 412 342 MR c np
24 W
2185 1102 PD
24 W
2328 1262 PD
24 W
2450 1067 PD
24 W
2257 1182 PD
24 W
2389 1165 PD
24 W
2318 1085 PD
gr

-90 87 -90 88 6 -111 5 -110 85 23 84 23 2433 3957 7 MP stroke
gs 2360 3709 327 368 MR c np
24 W
2433 3957 PD
24 W
2602 4003 PD
24 W
2613 3782 PD
24 W
2517 3980 PD
24 W
2607 3893 PD
24 W
2523 3870 PD
gr

-68 -99 -68 -100 77 -16 78 -16 -9 115 -10 116 4456 3967 7 MP stroke
gs 4364 3894 302 378 MR c np
24 W
4456 3967 PD
24 W
4437 4198 PD
24 W
4592 4166 PD
24 W
4446 4083 PD
24 W
4515 4182 PD
24 W
4524 4066 PD
gr

55 100 55 100 -92 12 -91 12 36 -112 37 -112 5458 1361 7 MP stroke
gs 5275 1064 330 371 MR c np
24 W
5458 1361 PD
24 W
5531 1137 PD
24 W
5348 1161 PD
24 W
5495 1249 PD
24 W
5440 1149 PD
24 W
5403 1261 PD
gr

-110 -53 -110 -53 100 -37 101 -37 10 90 9 90 2896 4279 7 MP stroke
gs 2823 4206 367 327 MR c np
24 W
2896 4279 PD
24 W
2915 4459 PD
24 W
3116 4385 PD
24 W
2905 4369 PD
24 W
3016 4422 PD
24 W
3006 4332 PD
gr

101 58 101 59 -111 38 -111 39 10 -97 10 -97 4922 743 7 MP stroke
gs 4647 476 369 341 MR c np
24 W
4922 743 PD
24 W
4942 549 PD
24 W
4720 626 PD
24 W
4932 646 PD
24 W
4831 588 PD
24 W
4821 685 PD
gr

72 115 71 115 -90 -28 -91 -29 19 -86 19 -87 5268 4615 7 MP stroke
gr

gs 5052 4312 328 377 MR c np
24 W
5268 4615 PD
24 W
5306 4442 PD
24 W
5125 4385 PD
24 W
5287 4528 PD
24 W
5215 4413 PD
24 W
5196 4500 PD
gr

gs 1463 388 4228 4228 MR c np
-53 -110 -53 -110 90 10 89 10 -36 100 -37 100 1693 2963 7 MP stroke
gs 1547 2890 326 367 MR c np
24 W
1693 2963 PD
24 W
1620 3163 PD
24 W
1799 3183 PD
24 W
1656 3063 PD
24 W
1709 3173 PD
24 W
1746 3073 PD
gr

115 71 115 72 -87 19 -86 19 -29 -91 -28 -90 1693 953 7 MP stroke
gr

gs 1390 699 377 328 MR c np
24 W
1693 953 PD
24 W
1636 772 PD
24 W
1463 810 PD
24 W
1665 863 PD
24 W
1550 791 PD
24 W
1578 882 PD
gr

gs 1463 388 4228 4228 MR c np
100 72 100 72 -116 29 -115 28 15 -101 16 -100 2759 2491 7 MP stroke
gs 2486 2217 378 348 MR c np
24 W
2759 2491 PD
24 W
2790 2290 PD
24 W
2559 2347 PD
24 W
2775 2391 PD
24 W
2675 2318 PD
24 W
2659 2419 PD
gr

109 -15 109 -16 -20 84 -20 84 -89 -69 -89 -68 2974 3946 7 MP stroke
gs 2683 3736 365 315 MR c np
24 W
2974 3946 PD
24 W
2796 3809 PD
24 W
2756 3977 PD
24 W
2885 3878 PD
24 W
2776 3893 PD
24 W
2865 3961 PD
gr

92 -29 93 -29 -44 109 -43 110 -49 -81 -49 -80 2814 2853 7 MP stroke
gs 2556 2619 332 366 MR c np
24 W
2814 2853 PD
24 W
2716 2692 PD
24 W
2629 2911 PD
24 W
2765 2773 PD
24 W
2673 2802 PD
24 W
2722 2882 PD
gr

-108 -38 -108 -38 36 -73 36 -73 72 111 72 111 4068 1243 7 MP stroke
gs 3995 1170 363 369 MR c np
24 W
4068 1243 PD
24 W
4212 1465 PD
24 W
4284 1319 PD
24 W
4140 1354 PD
24 W
4248 1392 PD
24 W
4176 1281 PD
gr

74 96 73 97 -106 2 -106 3 32 -99 33 -99 3012 1410 7 MP stroke
gs 2792 1139 359 345 MR c np
24 W
3012 1410 PD
24 W
3077 1212 PD
24 W
2865 1217 PD
24 W
3045 1311 PD
24 W
2971 1215 PD
24 W
2938 1314 PD
gr

12 111 12 110 -99 -52 -98 -52 86 -58 87 -59 3860 1889 7 MP stroke
gs 3763 1595 344 368 MR c np
24 W
3860 1889 PD
24 W
4033 1772 PD
24 W
3836 1668 PD
24 W
3947 1830 PD
24 W
3935 1720 PD
24 W
3848 1778 PD
gr

84 -8 84 -7 -60 102 -59 102 -25 -94 -24 -95 4930 2805 7 MP stroke
gs 4689 2543 315 351 MR c np
24 W
4930 2805 PD
24 W
4881 2616 PD
24 W
4762 2820 PD
24 W
4906 2710 PD
24 W
4822 2718 PD
24 W
4846 2813 PD
gr

66 107 66 106 -107 -3 -108 -3 42 -103 41 -104 4731 3956 7 MP stroke
gs 4526 3670 362 360 MR c np
24 W
4731 3956 PD
24 W
4814 3749 PD
24 W
4599 3743 PD
24 W
4772 3852 PD
24 W
4706 3746 PD
24 W
4665 3849 PD
gr

92 78 93 78 -96 32 -96 32 3 -110 4 -110 2321 1482 7 MP stroke
gs 2063 1189 339 367 MR c np
24 W
2321 1482 PD
24 W
2328 1262 PD
24 W
2136 1326 PD
24 W
2325 1372 PD
24 W
2232 1294 PD
24 W
2229 1404 PD
gr

17 -130 18 -131 87 83 86 82 -104 48 -104 48 4667 1751 7 MP stroke
gs 4386 1678 355 408 MR c np
24 W
4667 1751 PD
24 W
4459 1847 PD
24 W
4632 2012 PD
24 W
4563 1799 PD
24 W
4545 1929 PD
24 W
4650 1881 PD
gr

5 127 5 127 -77 -72 -77 -71 72 -56 72 -55 2324 3514 7 MP stroke
gs 2241 3187 301 401 MR c np
24 W
2324 3514 PD
24 W
2468 3403 PD
24 W
2314 3260 PD
24 W
2396 3459 PD
24 W
2391 3332 PD
24 W
2319 3387 PD
gr

-86 96 -86 96 -21 -97 -20 -97 106 1 107 1 3435 862 7 MP stroke
gs 3362 597 360 341 MR c np
24 W
3435 862 PD
24 W
3648 864 PD
24 W
3607 670 PD
24 W
3542 863 PD
24 W
3628 767 PD
24 W
3521 766 PD
gr

93 -87 94 -86 2 105 2 106 -96 -19 -95 -19 5408 2471 7 MP stroke
gs 5144 2360 338 358 MR c np
24 W
5408 2471 PD
24 W
5217 2433 PD
24 W
5221 2644 PD
24 W
5313 2452 PD
24 W
5219 2539 PD
24 W
5315 2558 PD
gr

3 -114 4 -114 79 58 79 57 -83 57 -82 56 2126 1664 7 MP stroke
gs 1888 1591 312 375 MR c np
24 W
2126 1664 PD
24 W
1961 1777 PD
24 W
2119 1892 PD
24 W
2044 1720 PD
24 W
2040 1834 PD
24 W
2123 1778 PD
gr

123 -31 122 -32 -41 104 -42 103 -81 -72 -81 -72 4976 3893 7 MP stroke
gs 4658 3676 392 354 MR c np
24 W
4976 3893 PD
24 W
4814 3749 PD
24 W
4731 3956 PD
24 W
4895 3821 PD
24 W
4772 3852 PD
24 W
4853 3924 PD
gr

87 81 87 80 -100 21 -101 21 14 -101 13 -102 1880 4207 7 MP stroke
gs 1633 3931 348 350 MR c np
24 W
1880 4207 PD
24 W
1907 4004 PD
24 W
1706 4046 PD
24 W
1893 4105 PD
24 W
1806 4025 PD
24 W
1793 4126 PD
gr

66 107 67 106 -93 8 -93 7 27 -114 26 -114 4725 4379 7 MP stroke
gs 4519 4078 333 375 MR c np
24 W
4725 4379 PD
24 W
4778 4151 PD
24 W
4592 4166 PD
24 W
4751 4265 PD
24 W
4685 4158 PD
24 W
4659 4272 PD
gr

-70 98 -69 98 -33 -121 -33 -120 103 22 102 23 2974 3946 7 MP stroke
gs 2901 3677 352 388 MR c np
24 W
2974 3946 PD
24 W
3179 3991 PD
24 W
3113 3750 PD
24 W
3076 3969 PD
24 W
3146 3871 PD
24 W
3044 3848 PD
gr

-24 112 -25 112 -72 -80 -71 -80 96 -32 96 -32 2136 1326 7 MP stroke
gs 2063 1029 339 371 MR c np
24 W
2136 1326 PD
24 W
2328 1262 PD
24 W
2185 1102 PD
24 W
2232 1294 PD
24 W
2257 1182 PD
24 W
2160 1214 PD
gr

94 65 94 66 -121 19 -121 19 27 -85 27 -84 1886 1484 7 MP stroke
gs 1625 1242 389 316 MR c np
24 W
1886 1484 PD
24 W
1940 1315 PD
24 W
1698 1353 PD
24 W
1913 1400 PD
24 W
1819 1334 PD
24 W
1792 1419 PD
gr

-103 -72 -103 -73 107 -18 106 -18 -4 90 -3 91 3649 1933 7 MP stroke
gs 3569 1860 360 328 MR c np
24 W
3649 1933 PD
24 W
3642 2114 PD
24 W
3855 2078 PD
24 W
3646 2024 PD
24 W
3748 2096 PD
24 W
3752 2005 PD
gr

-45 100 -46 100 -55 -79 -55 -79 101 -21 100 -21 1706 4046 7 MP stroke
gs 1633 3773 348 347 MR c np
24 W
1706 4046 PD
24 W
1907 4004 PD
24 W
1797 3846 PD
24 W
1806 4025 PD
24 W
1852 3925 PD
24 W
1751 3946 PD
gr

96 75 96 75 -113 19 -112 18 16 -93 17 -94 2122 3658 7 MP stroke
gs 1857 3398 372 334 MR c np
24 W
2122 3658 PD
24 W
2155 3471 PD
24 W
1930 3508 PD
24 W
2139 3564 PD
24 W
2043 3489 PD
24 W
2026 3583 PD
gr

98 -60 99 -60 -26 114 -27 114 -72 -54 -72 -54 4922 4259 7 MP stroke
gs 4652 4078 344 375 MR c np
24 W
4922 4259 PD
24 W
4778 4151 PD
24 W
4725 4379 PD
24 W
4850 4205 PD
24 W
4751 4265 PD
24 W
4824 4319 PD
gr

-60 98 -61 99 -60 -80 -61 -79 121 -19 121 -19 1698 1353 7 MP stroke
gs 1625 1083 389 344 MR c np
24 W
1698 1353 PD
24 W
1940 1315 PD
24 W
1819 1156 PD
24 W
1819 1334 PD
24 W
1879 1236 PD
24 W
1758 1255 PD
gr

97 -91 98 -91 30 86 31 86 -128 5 -128 5 2321 1482 7 MP stroke
gs 1992 1409 403 329 MR c np
24 W
2321 1482 PD
24 W
2065 1492 PD
24 W
2126 1664 PD
24 W
2193 1487 PD
24 W
2096 1578 PD
24 W
2224 1573 PD
gr

-93 -89 -93 -89 99 -2 100 -3 -6 92 -7 91 4239 3401 7 MP stroke
gs 4153 3328 346 330 MR c np
24 W
4239 3401 PD
24 W
4226 3584 PD
24 W
4425 3579 PD
24 W
4232 3492 PD
24 W
4326 3581 PD
24 W
4332 3490 PD
gr

18 -124 18 -124 80 59 79 59 -97 65 -98 65 2727 3126 7 MP stroke
gs 2459 3053 342 395 MR c np
24 W
2727 3126 PD
24 W
2532 3256 PD
24 W
2691 3374 PD
24 W
2629 3191 PD
24 W
2611 3315 PD
24 W
2709 3250 PD
gr

-117 -29 -118 -30 98 -65 97 -65 20 95 20 94 2492 3067 7 MP stroke
gs 2419 2994 382 336 MR c np
24 W
2492 3067 PD
24 W
2532 3256 PD
24 W
2727 3126 PD
24 W
2512 3161 PD
24 W
2629 3191 PD
24 W
2609 3096 PD
gr

-118 -64 -117 -63 97 -34 97 -33 20 97 21 97 3607 670 7 MP stroke
gs 3534 597 382 341 MR c np
24 W
3607 670 PD
24 W
3648 864 PD
24 W
3842 797 PD
24 W
3628 767 PD
24 W
3745 831 PD
24 W
3725 734 PD
gr

-20 116 -19 117 -63 -98 -62 -98 82 -19 82 -18 3576 1293 7 MP stroke
gs 3503 987 311 380 MR c np
24 W
3576 1293 PD
24 W
3740 1256 PD
24 W
3615 1060 PD
24 W
3658 1275 PD
24 W
3678 1158 PD
24 W
3596 1177 PD
gr

125 -7 126 -7 -48 95 -49 95 -77 -88 -77 -88 4438 3137 7 MP stroke
gs 4114 2888 398 337 MR c np
24 W
4438 3137 PD
24 W
4284 2961 PD
24 W
4187 3151 PD
24 W
4361 3049 PD
24 W
4235 3056 PD
24 W
4313 3144 PD
gr

-64 -118 -63 -117 95 19 96 19 -32 99 -32 98 5281 2236 7 MP stroke
gs 5144 2163 338 382 MR c np
24 W
5281 2236 PD
24 W
5217 2433 PD
24 W
5408 2471 PD
24 W
5249 2334 PD
24 W
5313 2452 PD
24 W
5345 2354 PD
gr

-75 99 -75 99 -17 -112 -16 -113 91 13 92 14 2613 3782 7 MP stroke
gs 2540 3511 330 372 MR c np
24 W
2613 3782 PD
24 W
2796 3809 PD
24 W
2763 3584 PD
24 W
2705 3796 PD
24 W
2780 3696 PD
24 W
2688 3683 PD
gr

116 15 117 16 -86 70 -86 71 -31 -86 -30 -86 2126 1664 7 MP stroke
gs 1820 1419 380 319 MR c np
24 W
2126 1664 PD
24 W
2065 1492 PD
24 W
1893 1633 PD
24 W
2096 1578 PD
24 W
1979 1563 PD
24 W
2010 1649 PD
gr

129 4 128 4 -39 72 -39 73 -89 -77 -90 -76 4427 1045 7 MP stroke
gs 4097 819 404 300 MR c np
24 W
4427 1045 PD
24 W
4248 892 PD
24 W
4170 1037 PD
24 W
4337 969 PD
24 W
4209 965 PD
24 W
4298 1041 PD
gr

-120 -31 -121 -31 90 -54 90 -54 31 85 30 85 3310 3867 7 MP stroke
gs 3237 3794 388 317 MR c np
24 W
3310 3867 PD
24 W
3371 4037 PD
24 W
3551 3929 PD
24 W
3340 3952 PD
24 W
3461 3983 PD
24 W
3430 3898 PD
gr

-34 -123 -34 -124 86 34 86 34 -52 90 -52 89 2144 2530 7 MP stroke
gs 1967 2457 319 394 MR c np
24 W
2144 2530 PD
24 W
2040 2709 PD
24 W
2212 2777 PD
24 W
2092 2619 PD
24 W
2126 2743 PD
24 W
2178 2653 PD
gr

-74 93 -74 92 -38 -74 -39 -74 112 -18 113 -19 1930 3508 7 MP stroke
gs 1857 3250 372 332 MR c np
24 W
1930 3508 PD
24 W
2155 3471 PD
24 W
2078 3323 PD
24 W
2043 3489 PD
24 W
2116 3397 PD
24 W
2004 3415 PD
gr

-116 -38 -115 -38 53 -60 53 -60 62 98 63 98 3615 1060 7 MP stroke
gs 3542 987 378 343 MR c np
24 W
3615 1060 PD
24 W
3740 1256 PD
24 W
3846 1136 PD
24 W
3678 1158 PD
24 W
3793 1196 PD
24 W
3731 1098 PD
gr

-106 22 -105 22 3 -94 2 -95 103 73 103 72 3649 1933 7 MP stroke
gs 3576 1816 358 336 MR c np
24 W
3649 1933 PD
24 W
3855 2078 PD
24 W
3860 1889 PD
24 W
3752 2005 PD
24 W
3857 1983 PD
24 W
3755 1911 PD
gr

102 -87 101 -88 -1 100 -1 99 -100 -12 -101 -12 2946 837 7 MP stroke
gs 2670 740 350 346 MR c np
24 W
2946 837 PD
24 W
2745 813 PD
24 W
2743 1012 PD
24 W
2845 825 PD
24 W
2744 912 PD
24 W
2844 924 PD
gr

33 108 33 107 -109 12 -109 11 76 -119 76 -119 3353 2537 7 MP stroke
gs 3214 2226 365 385 MR c np
24 W
3353 2537 PD
24 W
3505 2299 PD
24 W
3287 2322 PD
24 W
3429 2418 PD
24 W
3396 2310 PD
24 W
3320 2429 PD
gr

-71 114 -71 115 -19 -87 -20 -86 91 -28 90 -28 5125 617 7 MP stroke
gr

gs 5052 315 328 376 MR c np
24 W
5125 617 PD
24 W
5306 561 PD
24 W
5267 388 PD
24 W
5215 589 PD
24 W
5286 475 PD
24 W
5196 503 PD
gr

gs 1463 388 4228 4228 MR c np
114 -12 114 -13 -76 119 -76 119 -38 -106 -38 -107 3581 2512 7 MP stroke
gs 3280 2226 375 385 MR c np
24 W
3581 2512 PD
24 W
3505 2299 PD
24 W
3353 2537 PD
24 W
3543 2405 PD
24 W
3429 2418 PD
24 W
3467 2524 PD
gr

-71 -112 -71 -111 90 26 90 25 -19 86 -19 86 1886 388 7 MP stroke
gr

gs 1775 315 327 370 MR c np
24 W
1886 388 PD
24 W
1848 560 PD
24 W
2028 611 PD
24 W
1867 474 PD
24 W
1938 585 PD
24 W
1957 500 PD
gr

gs 1463 388 4228 4228 MR c np
-88 101 -89 101 -11 -101 -11 -100 99 -1 100 0 5066 3334 7 MP stroke
gs 4993 3059 346 349 MR c np
24 W
5066 3334 PD
24 W
5265 3333 PD
24 W
5243 3132 PD
24 W
5166 3334 PD
24 W
5254 3233 PD
24 W
5154 3233 PD
gr

-93 -76 -92 -76 119 -21 120 -21 -27 97 -27 97 3576 1293 7 MP stroke
gs 3449 1220 386 341 MR c np
24 W
3576 1293 PD
24 W
3522 1487 PD
24 W
3761 1445 PD
24 W
3549 1390 PD
24 W
3642 1466 PD
24 W
3669 1369 PD
gr

-62 93 -62 93 -20 -91 -21 -91 83 -2 82 -2 1799 3183 7 MP stroke
gs 1726 2924 312 333 MR c np
24 W
1799 3183 PD
24 W
1964 3179 PD
24 W
1923 2997 PD
24 W
1881 3181 PD
24 W
1943 3088 PD
24 W
1861 3090 PD
gr

-26 -131 -26 -131 112 44 112 44 -86 87 -86 87 4976 1110 7 MP stroke
gs 4731 1037 371 409 MR c np
24 W
4976 1110 PD
24 W
4804 1284 PD
24 W
5028 1372 PD
24 W
4890 1197 PD
24 W
4916 1328 PD
24 W
5002 1241 PD
gr

-111 -72 -112 -71 86 -19 86 -19 25 90 26 91 5467 4049 7 MP stroke
gr

gs 5394 3976 370 328 MR c np
24 W
5467 4049 PD
24 W
5518 4230 PD
24 W
5690 4192 PD
24 W
5493 4140 PD
24 W
5604 4211 PD
24 W
5578 4121 PD
gr

gs 1463 388 4228 4228 MR c np
93 -63 92 -62 -1 85 -2 85 -91 -22 -91 -23 3081 4154 7 MP stroke
gs 2823 4036 332 317 MR c np
24 W
3081 4154 PD
24 W
2899 4109 PD
24 W
2896 4279 PD
24 W
2990 4131 PD
24 W
2897 4194 PD
24 W
2988 4217 PD
gr

112 -71 111 -71 -26 90 -25 91 -86 -20 -86 -19 5690 811 7 MP stroke
gr

gs 5394 699 370 328 MR c np
24 W
5690 811 PD
24 W
5518 772 PD
24 W
5467 953 PD
24 W
5604 792 PD
24 W
5493 863 PD
24 W
5578 882 PD
gr

gs 1463 388 4228 4228 MR c np
-116 -62 -116 -62 104 -48 104 -48 12 110 12 110 4435 1627 7 MP stroke
gs 4362 1554 379 367 MR c np
24 W
4435 1627 PD
24 W
4459 1847 PD
24 W
4667 1751 PD
24 W
4447 1737 PD
24 W
4563 1799 PD
24 W
4551 1689 PD
gr

119 28 119 28 -69 84 -70 83 -49 -111 -50 -112 4196 2530 7 MP stroke
gs 3885 2234 385 370 MR c np
24 W
4196 2530 PD
24 W
4097 2307 PD
24 W
3958 2474 PD
24 W
4146 2418 PD
24 W
4027 2390 PD
24 W
4077 2502 PD
gr

81 49 82 49 -113 23 -112 22 31 -72 31 -71 3325 3373 7 MP stroke
gs 3089 3157 372 290 MR c np
24 W
3325 3373 PD
24 W
3387 3230 PD
24 W
3162 3275 PD
24 W
3356 3302 PD
24 W
3275 3252 PD
24 W
3244 3324 PD
gr

109 -20 110 -20 -43 109 -42 110 -67 -89 -67 -90 3135 2604 7 MP stroke
gs 2843 2352 366 366 MR c np
24 W
3135 2604 PD
24 W
3001 2425 PD
24 W
2916 2644 PD
24 W
3068 2514 PD
24 W
2959 2535 PD
24 W
3026 2624 PD
gr

107 84 107 84 -91 13 -92 13 -15 -97 -16 -97 2144 2530 7 MP stroke
gs 1857 2263 361 341 MR c np
24 W
2144 2530 PD
24 W
2113 2336 PD
24 W
1930 2362 PD
24 W
2128 2433 PD
24 W
2021 2349 PD
24 W
2037 2446 PD
gr

-112 -54 -111 -53 106 -36 105 -36 6 90 6 89 5241 1496 7 MP stroke
gs 5168 1423 370 326 MR c np
24 W
5241 1496 PD
24 W
5253 1675 PD
24 W
5464 1603 PD
24 W
5247 1585 PD
24 W
5358 1639 PD
24 W
5353 1550 PD
gr

-31 124 -32 123 -72 -111 -72 -111 104 -12 103 -13 4005 1490 7 MP stroke
gs 3932 1170 354 394 MR c np
24 W
4005 1490 PD
24 W
4212 1465 PD
24 W
4068 1243 PD
24 W
4108 1477 PD
24 W
4140 1354 PD
24 W
4036 1366 PD
gr

-71 -97 -72 -98 77 -13 77 -13 -5 110 -6 111 2613 3782 7 MP stroke
gs 2529 3709 301 368 MR c np
24 W
2613 3782 PD
24 W
2602 4003 PD
24 W
2756 3977 PD
24 W
2607 3893 PD
24 W
2679 3990 PD
24 W
2684 3879 PD
gr

83 109 83 110 -99 -14 -98 -13 16 -96 15 -96 3717 4148 7 MP stroke
gs 3478 3856 344 366 MR c np
24 W
3717 4148 PD
24 W
3748 3956 PD
24 W
3551 3929 PD
24 W
3732 4052 PD
24 W
3650 3943 PD
24 W
3634 4039 PD
gr

-81 -82 -81 -83 71 -35 71 -35 10 118 10 117 5286 4207 7 MP stroke
gs 5213 4134 309 382 MR c np
24 W
5286 4207 PD
24 W
5306 4442 PD
24 W
5448 4372 PD
24 W
5296 4324 PD
24 W
5377 4407 PD
24 W
5367 4289 PD
gr

32 121 31 120 -68 -38 -68 -37 37 -83 36 -83 3202 970 7 MP stroke
gs 3066 656 283 388 MR c np
24 W
3202 970 PD
24 W
3275 804 PD
24 W
3139 729 PD
24 W
3238 887 PD
24 W
3207 767 PD
24 W
3170 849 PD
gr

92 -58 92 -58 -9 118 -10 118 -82 -60 -83 -60 5041 1907 7 MP stroke
gs 4784 1714 331 383 MR c np
24 W
5041 1907 PD
24 W
4876 1787 PD
24 W
4857 2023 PD
24 W
4958 1847 PD
24 W
4866 1905 PD
24 W
4949 1965 PD
gr

-82 -81 -83 -81 117 10 118 10 -35 71 -35 71 1706 630 7 MP stroke
gs 1563 557 382 309 MR c np
24 W
1706 630 PD
24 W
1636 772 PD
24 W
1871 792 PD
24 W
1671 701 PD
24 W
1754 782 PD
24 W
1788 711 PD
gr

81 83 81 82 -116 -11 -116 -12 35 -71 35 -71 5448 4372 7 MP stroke
gs 5213 4134 379 312 MR c np
24 W
5448 4372 PD
24 W
5518 4230 PD
24 W
5286 4207 PD
24 W
5483 4301 PD
24 W
5402 4218 PD
24 W
5367 4289 PD
gr

104 -57 105 -57 -26 118 -26 117 -78 -61 -79 -60 2896 4279 7 MP stroke
gs 2614 4085 356 382 MR c np
24 W
2896 4279 PD
24 W
2739 4158 PD
24 W
2687 4393 PD
24 W
2817 4219 PD
24 W
2713 4275 PD
24 W
2792 4336 PD
gr

83 81 82 81 -71 35 -71 35 -12 -116 -11 -116 1871 792 7 MP stroke
gs 1633 487 312 379 MR c np
24 W
1871 792 PD
24 W
1848 560 PD
24 W
1706 630 PD
24 W
1860 676 PD
24 W
1777 595 PD
24 W
1788 711 PD
gr

-96 64 -97 63 7 -83 7 -83 90 20 89 19 4069 853 7 MP stroke
gs 3996 653 340 313 MR c np
24 W
4069 853 PD
24 W
4248 892 PD
24 W
4262 726 PD
24 W
4158 872 PD
24 W
4255 809 PD
24 W
4165 789 PD
gr

96 0 97 0 -8 80 -7 80 -89 -80 -89 -80 2040 4615 7 MP stroke
gr

gs 1774 4382 340 307 MR c np
24 W
2040 4615 PD
24 W
1862 4455 PD
24 W
1847 4615 PD
24 W
1951 4535 PD
24 W
1855 4535 PD
24 W
1944 4615 PD
gr

gs 1463 388 4228 4228 MR c np
-4 114 -3 114 -59 -64 -59 -65 62 -49 63 -50 2119 1892 7 MP stroke
gs 2046 1591 272 375 MR c np
24 W
2119 1892 PD
24 W
2244 1793 PD
24 W
2126 1664 PD
24 W
2182 1842 PD
24 W
2185 1728 PD
24 W
2123 1778 PD
gr

41 -118 41 -118 70 102 70 101 -111 17 -111 16 4725 4379 7 MP stroke
gr

gs 4430 4306 369 383 MR c np
24 W
4725 4379 PD
24 W
4503 4412 PD
24 W
4643 4615 PD
24 W
4614 4395 PD
24 W
4573 4513 PD
24 W
4684 4497 PD
gr

gs 1463 388 4228 4228 MR c np
-118 41 -117 41 17 -111 17 -111 100 70 101 70 1463 1435 7 MP stroke
gr

gs 1390 1280 382 369 MR c np
24 W
1463 1435 PD
24 W
1664 1575 PD
24 W
1698 1353 PD
24 W
1564 1505 PD
24 W
1681 1464 PD
24 W
1581 1394 PD
gr

gs 1463 388 4228 4228 MR c np
108 38 108 38 -108 38 -108 38 0 -152 4284 1319 6 MP stroke
gs 3995 1094 363 299 MR c np
24 W
4284 1319 PD
24 W
4284 1167 PD
24 W
4068 1243 PD
24 W
4284 1243 PD
24 W
4176 1205 PD
24 W
4176 1281 PD
gr

0 193 -81 -89 -80 -89 80 -8 81 -7 1463 4231 6 MP stroke
gr

gs 1390 3965 308 340 MR c np
24 W
1463 4231 PD
24 W
1624 4216 PD
24 W
1463 4038 PD
24 W
1544 4224 PD
24 W
1544 4127 PD
24 W
1463 4134 PD
gr

gs 1463 388 4228 4228 MR c np
-33 -91 -33 -91 70 -12 69 -12 -36 103 -37 103 2222 4273 7 MP stroke
gs 2076 4200 286 353 MR c np
24 W
2222 4273 PD
24 W
2149 4479 PD
24 W
2288 4455 PD
24 W
2185 4376 PD
24 W
2218 4467 PD
24 W
2255 4364 PD
gr

-106 55 -106 54 38 -113 38 -113 68 59 68 58 4262 726 7 MP stroke
gs 4189 544 359 373 MR c np
24 W
4262 726 PD
24 W
4398 843 PD
24 W
4474 617 PD
24 W
4330 784 PD
24 W
4436 730 PD
24 W
4368 671 PD
gr

122 -15 121 -16 -74 82 -74 82 -47 -66 -48 -67 2387 2499 7 MP stroke
gs 2071 2293 390 311 MR c np
24 W
2387 2499 PD
24 W
2292 2366 PD
24 W
2144 2530 PD
24 W
2339 2432 PD
24 W
2218 2448 PD
24 W
2265 2514 PD
gr

132 -18 133 -17 -47 91 -48 91 -85 -74 -85 -73 2450 1067 7 MP stroke
gs 2112 847 412 329 MR c np
24 W
2450 1067 PD
24 W
2280 920 PD
24 W
2185 1102 PD
24 W
2365 994 PD
24 W
2232 1011 PD
24 W
2318 1085 PD
gr

-106 26 -107 26 3 -82 4 -81 103 55 103 56 4086 3765 7 MP stroke
gs 4013 3640 360 310 MR c np
24 W
4086 3765 PD
24 W
4292 3876 PD
24 W
4299 3713 PD
24 W
4189 3821 PD
24 W
4296 3795 PD
24 W
4192 3739 PD
gr

10 112 10 113 -80 -22 -80 -22 70 -91 70 -90 4086 3765 7 MP stroke
gs 3993 3467 307 372 MR c np
24 W
4086 3765 PD
24 W
4226 3584 PD
24 W
4066 3540 PD
24 W
4156 3675 PD
24 W
4146 3562 PD
24 W
4076 3653 PD
gr

-88 -28 -87 -28 99 -41 99 -41 -12 69 -11 69 1622 3790 7 MP stroke
gs 1526 3717 345 285 MR c np
24 W
1622 3790 PD
24 W
1599 3928 PD
24 W
1797 3846 PD
24 W
1611 3859 PD
24 W
1698 3887 PD
24 W
1710 3818 PD
gr

-17 133 -17 133 -74 -85 -74 -86 91 -47 91 -48 4976 3893 7 MP stroke
gs 4903 3554 329 413 MR c np
24 W
4976 3893 PD
24 W
5158 3798 PD
24 W
5010 3627 PD
24 W
5067 3845 PD
24 W
5084 3712 PD
24 W
4993 3760 PD
gr

118 30 117 29 -68 78 -69 78 -49 -108 -49 -107 2727 3126 7 MP stroke
gs 2419 2838 382 362 MR c np
24 W
2727 3126 PD
24 W
2629 2911 PD
24 W
2492 3067 PD
24 W
2678 3019 PD
24 W
2560 2989 PD
24 W
2609 3096 PD
gr

-15 -114 -15 -115 98 57 99 58 -84 57 -83 57 4200 1658 7 MP stroke
gs 3960 1585 344 376 MR c np
24 W
4200 1658 PD
24 W
4033 1772 PD
24 W
4230 1887 PD
24 W
4117 1715 PD
24 W
4132 1830 PD
24 W
4215 1772 PD
gr

16 112 17 112 -103 -42 -103 -43 87 -69 86 -70 4066 3540 7 MP stroke
gs 3960 3243 353 371 MR c np
24 W
4066 3540 PD
24 W
4239 3401 PD
24 W
4033 3316 PD
24 W
4152 3470 PD
24 W
4136 3358 PD
24 W
4050 3428 PD
gr

-101 -59 -101 -58 73 -55 73 -55 28 113 28 114 4720 626 7 MP stroke
gs 4647 553 349 374 MR c np
24 W
4720 626 PD
24 W
4776 853 PD
24 W
4922 743 PD
24 W
4748 740 PD
24 W
4849 798 PD
24 W
4821 685 PD
gr

-67 109 -67 110 -28 -114 -28 -113 95 4 95 4 4586 845 7 MP stroke
gs 4513 553 337 374 MR c np
24 W
4586 845 PD
24 W
4776 853 PD
24 W
4720 626 PD
24 W
4681 849 PD
24 W
4748 740 PD
24 W
4653 736 PD
gr

-15 -121 -15 -122 86 87 86 86 -71 35 -71 35 5448 4372 7 MP stroke
gr

gs 5233 4299 319 390 MR c np
24 W
5448 4372 PD
24 W
5306 4442 PD
24 W
5478 4615 PD
24 W
5377 4407 PD
24 W
5392 4528 PD
24 W
5463 4493 PD
gr

gs 1463 388 4228 4228 MR c np
-49 114 -49 113 -61 -102 -61 -103 110 -11 110 -11 2645 1239 7 MP stroke
gs 2572 939 367 374 MR c np
24 W
2645 1239 PD
24 W
2865 1217 PD
24 W
2743 1012 PD
24 W
2755 1228 PD
24 W
2804 1114 PD
24 W
2694 1125 PD
gr

-122 -15 -121 -15 35 -71 35 -71 86 86 87 86 1463 600 7 MP stroke
gr

gs 1390 527 390 319 MR c np
24 W
1463 600 PD
24 W
1636 772 PD
24 W
1706 630 PD
24 W
1550 686 PD
24 W
1671 701 PD
24 W
1585 615 PD
gr

gs 1463 388 4228 4228 MR c np
-125 -31 -124 -31 86 -87 86 -87 39 118 38 118 4727 1048 7 MP stroke
gs 4654 975 396 383 MR c np
24 W
4727 1048 PD
24 W
4804 1284 PD
24 W
4976 1110 PD
24 W
4765 1166 PD
24 W
4890 1197 PD
24 W
4852 1079 PD
gr

-72 101 -71 102 -38 -118 -39 -118 110 16 110 17 4584 1251 7 MP stroke
gs 4511 975 367 383 MR c np
24 W
4584 1251 PD
24 W
4804 1284 PD
24 W
4727 1048 PD
24 W
4694 1268 PD
24 W
4765 1166 PD
24 W
4656 1150 PD
gr

-30 120 -29 120 -82 -71 -83 -71 112 -49 112 -49 2953 1650 7 MP stroke
gs 2880 1337 371 387 MR c np
24 W
2953 1650 PD
24 W
3177 1552 PD
24 W
3012 1410 PD
24 W
3065 1601 PD
24 W
3094 1481 PD
24 W
2983 1530 PD
gr

-117 -16 -117 -17 56 -86 56 -86 61 103 61 102 2743 1012 7 MP stroke
gs 2670 939 381 352 MR c np
24 W
2743 1012 PD
24 W
2865 1217 PD
24 W
2977 1045 PD
24 W
2804 1114 PD
24 W
2921 1131 PD
24 W
2860 1028 PD
gr

-40 -114 -39 -115 98 25 98 25 -58 90 -59 89 2122 3658 7 MP stroke
gs 1932 3585 343 376 MR c np
24 W
2122 3658 PD
24 W
2005 3837 PD
24 W
2201 3887 PD
24 W
2063 3747 PD
24 W
2103 3862 PD
24 W
2162 3772 PD
gr

-81 82 -81 83 -35 -71 -35 -71 116 -12 116 -11 5286 795 7 MP stroke
gs 5213 557 379 312 MR c np
24 W
5286 795 PD
24 W
5518 772 PD
24 W
5448 630 PD
24 W
5402 784 PD
24 W
5483 701 PD
24 W
5367 713 PD
gr

81 -83 81 -82 -10 117 -10 117 -71 -34 -71 -35 5448 630 7 MP stroke
gs 5213 488 309 381 MR c np
24 W
5448 630 PD
24 W
5306 561 PD
24 W
5286 795 PD
24 W
5377 595 PD
24 W
5296 678 PD
24 W
5367 713 PD
gr

85 -105 86 -106 28 114 28 114 -114 -8 -113 -9 5452 2025 7 MP stroke
gs 5152 1935 374 375 MR c np
24 W
5452 2025 PD
24 W
5225 2008 PD
24 W
5281 2236 PD
24 W
5339 2016 PD
24 W
5253 2122 PD
24 W
5367 2130 PD
gr

-106 85 -105 86 -8 -114 -8 -113 114 28 113 28 3842 797 7 MP stroke
gs 3769 553 374 374 MR c np
24 W
3842 797 PD
24 W
4069 853 PD
24 W
4053 626 PD
24 W
3955 825 PD
24 W
4061 740 PD
24 W
3948 712 PD
gr

65 -97 64 -97 18 93 18 93 -83 4 -82 4 5354 1814 7 MP stroke
gs 5116 1741 312 341 MR c np
24 W
5354 1814 PD
24 W
5189 1822 PD
24 W
5225 2008 PD
24 W
5272 1818 PD
24 W
5207 1915 PD
24 W
5289 1911 PD
gr

76 -92 76 -91 35 77 36 77 -111 15 -112 14 2691 3374 7 MP stroke
gs 2395 3301 370 330 MR c np
24 W
2691 3374 PD
24 W
2468 3403 PD
24 W
2539 3557 PD
24 W
2579 3388 PD
24 W
2504 3480 PD
24 W
2615 3466 PD
gr

121 15 121 16 -35 71 -35 71 -86 -87 -86 -86 5690 4403 7 MP stroke
gr

gs 5375 4157 389 320 MR c np
24 W
5690 4403 PD
24 W
5518 4230 PD
24 W
5448 4372 PD
24 W
5604 4317 PD
24 W
5483 4301 PD
24 W
5569 4388 PD
gr

gs 1463 388 4228 4228 MR c np
-26 85 -26 86 -61 -105 -61 -105 87 19 87 20 3557 3688 7 MP stroke
gs 3484 3444 321 357 MR c np
24 W
3557 3688 PD
24 W
3731 3727 PD
24 W
3609 3517 PD
24 W
3644 3708 PD
24 W
3670 3622 PD
24 W
3583 3603 PD
gr

16 121 15 121 -86 -86 -87 -86 71 -35 71 -35 1706 630 7 MP stroke
gr

gs 1602 315 320 389 MR c np
24 W
1706 630 PD
24 W
1848 560 PD
24 W
1675 388 PD
24 W
1777 595 PD
24 W
1761 474 PD
24 W
1690 509 PD
gr

gs 1463 388 4228 4228 MR c np
-12 113 -13 113 -76 -40 -77 -39 89 -74 89 -73 4599 3743 7 MP stroke
gs 4526 3444 325 373 MR c np
24 W
4599 3743 PD
24 W
4777 3596 PD
24 W
4624 3517 PD
24 W
4688 3670 PD
24 W
4700 3557 PD
24 W
4611 3630 PD
gr

-56 103 -56 104 -51 -71 -52 -71 108 -33 107 -32 1687 3390 7 MP stroke
gs 1614 3110 362 354 MR c np
24 W
1687 3390 PD
24 W
1902 3325 PD
24 W
1799 3183 PD
24 W
1794 3358 PD
24 W
1850 3254 PD
24 W
1743 3287 PD
gr

-70 -54 -71 -55 54 -56 53 -55 17 110 17 110 3146 2213 7 MP stroke
gs 3073 2140 288 367 MR c np
24 W
3146 2213 PD
24 W
3180 2433 PD
24 W
3287 2322 PD
24 W
3163 2323 PD
24 W
3233 2378 PD
24 W
3216 2267 PD
gr

123 -17 122 -17 -79 92 -79 91 -43 -75 -44 -74 2566 1448 7 MP stroke
gs 2248 1226 392 330 MR c np
24 W
2566 1448 PD
24 W
2479 1299 PD
24 W
2321 1482 PD
24 W
2522 1374 PD
24 W
2400 1390 PD
24 W
2443 1465 PD
gr

101 20 100 21 -32 70 -32 70 -68 -91 -69 -90 3113 3750 7 MP stroke
gs 2839 3496 348 328 MR c np
24 W
3113 3750 PD
24 W
2976 3569 PD
24 W
2912 3709 PD
24 W
3044 3660 PD
24 W
2944 3639 PD
24 W
3012 3730 PD
gr

90 99 90 99 -107 -1 -106 -1 16 -98 17 -98 3615 1060 7 MP stroke
gs 3362 789 360 345 MR c np
24 W
3615 1060 PD
24 W
3648 864 PD
24 W
3435 862 PD
24 W
3632 962 PD
24 W
3542 863 PD
24 W
3525 961 PD
gr

89 75 90 75 -88 30 -87 31 -2 -106 -2 -105 5221 2644 7 MP stroke
gs 4969 2360 326 358 MR c np
24 W
5221 2644 PD
24 W
5217 2433 PD
24 W
5042 2494 PD
24 W
5219 2539 PD
24 W
5130 2464 PD
24 W
5132 2569 PD
gr

19 -117 19 -116 69 90 68 91 -87 26 -88 26 3151 3517 7 MP stroke
gs 2903 3444 322 380 MR c np
24 W
3151 3517 PD
24 W
2976 3569 PD
24 W
3113 3750 PD
24 W
3063 3543 PD
24 W
3044 3660 PD
24 W
3132 3634 PD
gr

15 -121 15 -121 71 35 71 34 -86 86 -86 87 5478 388 7 MP stroke
gr

gs 5233 315 319 389 MR c np
24 W
5478 388 PD
24 W
5306 561 PD
24 W
5448 630 PD
24 W
5392 475 PD
24 W
5377 595 PD
24 W
5463 509 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 94 22 94 21 -94 84 -94 84 5690 2079 6 MP stroke
gr

gs 5429 2006 335 358 MR c np
24 W
5690 2079 PD
24 W
5502 2247 PD
24 W
5690 2290 PD
24 W
5596 2163 PD
24 W
5596 2268 PD
24 W
5690 2185 PD
gr

gs 1463 388 4228 4228 MR c np
-105 0 -106 0 84 -95 84 -94 21 94 22 95 3788 388 7 MP stroke
gr

gs 3715 315 358 336 MR c np
24 W
3788 388 PD
24 W
3831 577 PD
24 W
3999 388 PD
24 W
3810 483 PD
24 W
3915 483 PD
24 W
3893 388 PD
gr

gs 1463 388 4228 4228 MR c np
-121 15 -121 15 86 -86 86 -86 35 71 35 71 5448 630 7 MP stroke
gr

gs 5375 527 389 319 MR c np
24 W
5448 630 PD
24 W
5518 772 PD
24 W
5690 600 PD
24 W
5483 701 PD
24 W
5604 686 PD
24 W
5569 615 PD
gr

gs 1463 388 4228 4228 MR c np
37 112 37 113 -112 -14 -112 -13 75 -99 75 -99 2613 3782 7 MP stroke
gs 2466 3484 371 372 MR c np
24 W
2613 3782 PD
24 W
2763 3584 PD
24 W
2539 3557 PD
24 W
2688 3683 PD
24 W
2651 3571 PD
24 W
2576 3670 PD
gr

-114 13 -114 12 15 -94 15 -94 99 81 99 82 3353 2537 7 MP stroke
gs 3280 2439 375 335 MR c np
24 W
3353 2537 PD
24 W
3551 2700 PD
24 W
3581 2512 PD
24 W
3452 2619 PD
24 W
3566 2606 PD
24 W
3467 2524 PD
gr

3 -122 4 -123 99 38 99 38 -103 85 -102 84 4196 2530 7 MP stroke
gs 3918 2457 352 392 MR c np
24 W
4196 2530 PD
24 W
3991 2699 PD
24 W
4189 2775 PD
24 W
4094 2614 PD
24 W
4090 2737 PD
24 W
4193 2652 PD
gr

17 111 16 111 -103 -40 -103 -41 87 -70 86 -71 3476 2074 7 MP stroke
gs 3370 1779 353 369 MR c np
24 W
3476 2074 PD
24 W
3649 1933 PD
24 W
3443 1852 PD
24 W
3562 2003 PD
24 W
3546 1892 PD
24 W
3459 1963 PD
gr

4 74 3 75 -89 -4 -90 -4 86 -71 86 -70 1893 1633 7 MP stroke
gs 1813 1411 326 296 MR c np
24 W
1893 1633 PD
24 W
2065 1492 PD
24 W
1886 1484 PD
24 W
1979 1563 PD
24 W
1975 1488 PD
24 W
1889 1559 PD
gr

84 71 84 71 -110 14 -110 15 26 -86 26 -85 3557 3688 7 MP stroke
gs 3316 3444 367 318 MR c np
24 W
3557 3688 PD
24 W
3609 3517 PD
24 W
3389 3546 PD
24 W
3583 3603 PD
24 W
3499 3532 PD
24 W
3473 3617 PD
gr

-119 -28 -119 -28 102 -84 103 -85 17 112 16 113 3958 2474 7 MP stroke
gs 3885 2401 385 372 MR c np
24 W
3958 2474 PD
24 W
3991 2699 PD
24 W
4196 2530 PD
24 W
3974 2587 PD
24 W
4094 2614 PD
24 W
4077 2502 PD
gr

97 -54 96 -54 -25 128 -25 127 -71 -73 -72 -74 3139 729 7 MP stroke
gs 2873 509 340 402 MR c np
24 W
3139 729 PD
24 W
2996 582 PD
24 W
2946 837 PD
24 W
3067 655 PD
24 W
2971 709 PD
24 W
3042 783 PD
gr

60 82 61 81 -86 46 -85 46 25 -127 25 -128 2946 837 7 MP stroke
gs 2752 509 318 402 MR c np
24 W
2946 837 PD
24 W
2996 582 PD
24 W
2825 674 PD
24 W
2971 709 PD
24 W
2911 628 PD
24 W
2886 755 PD
gr

-81 89 -80 89 -10 -117 -10 -118 91 29 90 28 5125 4385 7 MP stroke
gs 5052 4134 328 382 MR c np
24 W
5125 4385 PD
24 W
5306 4442 PD
24 W
5286 4207 PD
24 W
5215 4413 PD
24 W
5296 4324 PD
24 W
5206 4296 PD
gr

89 -80 89 -81 28 90 29 91 -118 -10 -117 -10 1871 792 7 MP stroke
gs 1563 699 382 328 MR c np
24 W
1871 792 PD
24 W
1636 772 PD
24 W
1693 953 PD
24 W
1754 782 PD
24 W
1665 863 PD
24 W
1782 872 PD
gr

-50 86 -51 87 -76 -62 -76 -63 127 -24 126 -24 5243 3132 7 MP stroke
gs 5170 2886 400 320 MR c np
24 W
5243 3132 PD
24 W
5496 3084 PD
24 W
5344 2959 PD
24 W
5369 3108 PD
24 W
5420 3021 PD
24 W
5293 3046 PD
gr

-93 -102 -92 -102 116 15 117 16 -24 87 -24 86 4825 3423 7 MP stroke
gs 4704 3350 380 351 MR c np
24 W
4825 3423 PD
24 W
4777 3596 PD
24 W
5010 3627 PD
24 W
4801 3509 PD
24 W
4894 3612 PD
24 W
4918 3525 PD
gr

9 125 8 124 -81 -42 -81 -43 73 -82 72 -82 3824 4615 7 MP stroke
gr

gs 3734 4293 309 396 MR c np
24 W
3824 4615 PD
24 W
3969 4451 PD
24 W
3807 4366 PD
24 W
3896 4533 PD
24 W
3888 4408 PD
24 W
3815 4490 PD
gr

gs 1463 388 4228 4228 MR c np
80 60 81 60 -126 24 -127 24 46 -84 46 -84 5404 3252 7 MP stroke
gs 5170 3011 400 315 MR c np
24 W
5404 3252 PD
24 W
5496 3084 PD
24 W
5243 3132 PD
24 W
5450 3168 PD
24 W
5369 3108 PD
24 W
5324 3192 PD
gr

-98 -86 -97 -86 83 -30 83 -30 14 116 15 116 2450 1067 7 MP stroke
gs 2377 994 342 379 MR c np
24 W
2450 1067 PD
24 W
2479 1299 PD
24 W
2645 1239 PD
24 W
2465 1183 PD
24 W
2562 1269 PD
24 W
2548 1153 PD
gr

124 9 125 9 -82 72 -82 73 -43 -82 -42 -81 1712 2272 7 MP stroke
gr

gs 1390 2036 396 310 MR c np
24 W
1712 2272 PD
24 W
1627 2109 PD
24 W
1463 2254 PD
24 W
1670 2191 PD
24 W
1545 2182 PD
24 W
1588 2263 PD
gr

gs 1463 388 4228 4228 MR c np
-58 98 -57 99 -53 -84 -52 -84 110 -15 110 -14 3389 3546 7 MP stroke
gs 3316 3276 367 344 MR c np
24 W
3389 3546 PD
24 W
3609 3517 PD
24 W
3504 3349 PD
24 W
3499 3532 PD
24 W
3557 3433 PD
24 W
3447 3448 PD
gr

7 -127 8 -126 79 43 79 44 -87 83 -86 83 3365 388 7 MP stroke
gr

gs 3119 315 320 400 MR c np
24 W
3365 388 PD
24 W
3192 554 PD
24 W
3350 641 PD
24 W
3279 471 PD
24 W
3271 598 PD
24 W
3358 515 PD
gr

gs 1463 388 4228 4228 MR c np
-99 -44 -99 -43 72 -66 72 -65 27 109 27 109 4832 3001 7 MP stroke
gs 4759 2928 345 365 MR c np
24 W
4832 3001 PD
24 W
4886 3219 PD
24 W
5030 3088 PD
24 W
4859 3110 PD
24 W
4958 3154 PD
24 W
4931 3045 PD
gr

-122 -1 -123 -2 93 -83 93 -84 29 85 30 85 5445 2710 7 MP stroke
gr

gs 5372 2637 392 317 MR c np
24 W
5445 2710 PD
24 W
5504 2880 PD
24 W
5690 2713 PD
24 W
5475 2795 PD
24 W
5597 2796 PD
24 W
5567 2711 PD
gr

gs 1463 388 4228 4228 MR c np
-91 79 -90 79 -26 -91 -25 -90 116 12 116 11 5286 4207 7 MP stroke
gs 5213 3976 379 328 MR c np
24 W
5286 4207 PD
24 W
5518 4230 PD
24 W
5467 4049 PD
24 W
5402 4218 PD
24 W
5493 4140 PD
24 W
5377 4128 PD
gr

18 120 19 119 -72 -52 -72 -52 53 -68 54 -67 5445 2710 7 MP stroke
gs 5335 2398 291 386 MR c np
24 W
5445 2710 PD
24 W
5552 2575 PD
24 W
5408 2471 PD
24 W
5499 2643 PD
24 W
5480 2523 PD
24 W
5427 2590 PD
gr

-98 91 -97 91 1 -91 1 -91 96 0 97 0 2126 1664 7 MP stroke
gs 2053 1409 342 329 MR c np
24 W
2126 1664 PD
24 W
2319 1664 PD
24 W
2321 1482 PD
24 W
2223 1664 PD
24 W
2320 1573 PD
24 W
2224 1573 PD
gr

128 14 129 15 -75 57 -76 57 -53 -71 -53 -72 3607 670 7 MP stroke
gs 3277 454 404 290 MR c np
24 W
3607 670 PD
24 W
3501 527 PD
24 W
3350 641 PD
24 W
3554 598 PD
24 W
3425 584 PD
24 W
3479 656 PD
gr

78 -90 79 -91 11 116 12 116 -90 -25 -90 -26 2028 611 7 MP stroke
gs 1775 487 327 379 MR c np
24 W
2028 611 PD
24 W
1848 560 PD
24 W
1871 792 PD
24 W
1938 585 PD
24 W
1860 676 PD
24 W
1950 701 PD
gr

34 85 33 85 -83 22 -83 23 50 -107 49 -108 4097 2307 7 MP stroke
gs 3957 2019 313 362 MR c np
24 W
4097 2307 PD
24 W
4196 2092 PD
24 W
4030 2137 PD
24 W
4146 2199 PD
24 W
4113 2115 PD
24 W
4063 2222 PD
gr

-74 -62 -75 -63 58 -50 58 -50 16 113 17 112 2763 3584 7 MP stroke
gs 2690 3511 296 372 MR c np
24 W
2763 3584 PD
24 W
2796 3809 PD
24 W
2912 3709 PD
24 W
2780 3696 PD
24 W
2854 3759 PD
24 W
2837 3646 PD
gr

98 -21 99 -21 -49 108 -50 107 -49 -87 -49 -86 4294 2265 7 MP stroke
gs 4024 2019 344 362 MR c np
24 W
4294 2265 PD
24 W
4196 2092 PD
24 W
4097 2307 PD
24 W
4245 2179 PD
24 W
4146 2199 PD
24 W
4196 2286 PD
gr

-20 115 -19 114 -85 -62 -86 -63 105 -52 105 -52 3547 3124 7 MP stroke
gs 3474 2822 357 376 MR c np
24 W
3547 3124 PD
24 W
3757 3020 PD
24 W
3586 2895 PD
24 W
3652 3072 PD
24 W
3671 2957 PD
24 W
3567 3009 PD
gr

-93 -78 -92 -78 128 -5 128 -5 -36 83 -35 83 2136 1326 7 MP stroke
gs 1992 1253 403 313 MR c np
24 W
2136 1326 PD
24 W
2065 1492 PD
24 W
2321 1482 PD
24 W
2101 1409 PD
24 W
2193 1487 PD
24 W
2229 1404 PD
gr

-18 131 -17 130 -43 -73 -44 -74 61 -57 61 -57 4632 2012 7 MP stroke
gs 4559 1678 269 408 MR c np
24 W
4632 2012 PD
24 W
4754 1898 PD
24 W
4667 1751 PD
24 W
4693 1955 PD
24 W
4710 1824 PD
24 W
4650 1881 PD
gr

-88 96 -88 95 -16 -114 -17 -113 105 18 104 18 4667 1751 7 MP stroke
gs 4594 1487 356 374 MR c np
24 W
4667 1751 PD
24 W
4876 1787 PD
24 W
4843 1560 PD
24 W
4771 1769 PD
24 W
4859 1674 PD
24 W
4755 1655 PD
gr

117 -22 117 -22 -30 105 -31 104 -86 -82 -87 -83 4632 2012 7 MP stroke
gs 4325 1774 381 356 MR c np
24 W
4632 2012 PD
24 W
4459 1847 PD
24 W
4398 2056 PD
24 W
4545 1929 PD
24 W
4428 1951 PD
24 W
4515 2034 PD
gr

26 131 26 131 -92 -47 -92 -47 66 -84 66 -84 5028 1372 7 MP stroke
gs 4903 1037 331 409 MR c np
24 W
5028 1372 PD
24 W
5160 1204 PD
24 W
4976 1110 PD
24 W
5094 1288 PD
24 W
5068 1157 PD
24 W
5002 1241 PD
gr

108 3 107 3 -89 73 -89 74 -19 -77 -18 -76 4814 3749 7 MP stroke
gs 4526 3523 362 300 MR c np
24 W
4814 3749 PD
24 W
4777 3596 PD
24 W
4599 3743 PD
24 W
4796 3673 PD
24 W
4688 3670 PD
24 W
4706 3746 PD
gr

-113 -48 -113 -48 80 -43 80 -43 33 91 33 91 2222 4273 7 MP stroke
gs 2149 4200 373 329 MR c np
24 W
2222 4273 PD
24 W
2288 4455 PD
24 W
2448 4369 PD
24 W
2255 4364 PD
24 W
2368 4412 PD
24 W
2335 4321 PD
gr

-43 -109 -43 -108 87 28 88 28 -45 81 -44 80 1711 3629 7 MP stroke
gs 1549 3556 322 364 MR c np
24 W
1711 3629 PD
24 W
1622 3790 PD
24 W
1797 3846 PD
24 W
1667 3709 PD
24 W
1710 3818 PD
24 W
1754 3738 PD
gr

-4 110 -3 110 -76 -18 -75 -19 79 -91 79 -92 2321 1482 7 MP stroke
gs 2248 1189 305 367 MR c np
24 W
2321 1482 PD
24 W
2479 1299 PD
24 W
2328 1262 PD
24 W
2400 1390 PD
24 W
2404 1280 PD
24 W
2325 1372 PD
gr

43 108 43 109 -94 -31 -95 -30 52 -78 51 -78 1797 3846 7 MP stroke
gs 1638 3556 336 364 MR c np
24 W
1797 3846 PD
24 W
1900 3690 PD
24 W
1711 3629 PD
24 W
1848 3768 PD
24 W
1805 3660 PD
24 W
1754 3738 PD
gr

13 -113 12 -113 87 82 87 82 -100 31 -99 31 4624 3517 7 MP stroke
gs 4352 3444 346 373 MR c np
24 W
4624 3517 PD
24 W
4425 3579 PD
24 W
4599 3743 PD
24 W
4525 3548 PD
24 W
4512 3661 PD
24 W
4611 3630 PD
gr

77 -59 77 -58 33 96 33 97 -110 -38 -110 -38 3977 3096 7 MP stroke
gs 3684 2947 367 340 MR c np
24 W
3977 3096 PD
24 W
3757 3020 PD
24 W
3823 3213 PD
24 W
3867 3058 PD
24 W
3790 3117 PD
24 W
3900 3155 PD
gr

-32 -90 -32 -89 110 38 110 38 -78 51 -78 52 3913 2917 7 MP stroke
gs 3684 2844 367 326 MR c np
24 W
3913 2917 PD
24 W
3757 3020 PD
24 W
3977 3096 PD
24 W
3835 2969 PD
24 W
3867 3058 PD
24 W
3945 3007 PD
gr

91 79 90 79 -116 11 -116 12 25 -91 26 -90 5467 953 7 MP stroke
gs 5213 699 379 328 MR c np
24 W
5467 953 PD
24 W
5518 772 PD
24 W
5286 795 PD
24 W
5493 863 PD
24 W
5402 784 PD
24 W
5376 874 PD
gr

81 89 80 89 -90 28 -91 28 10 -117 10 -117 5286 795 7 MP stroke
gs 5052 488 328 381 MR c np
24 W
5286 795 PD
24 W
5306 561 PD
24 W
5125 617 PD
24 W
5296 678 PD
24 W
5215 589 PD
24 W
5205 706 PD
gr

124 -9 124 -10 -63 61 -63 60 -61 -51 -61 -51 1711 3629 7 MP stroke
gr

gs 1390 3454 395 268 MR c np
24 W
1711 3629 PD
24 W
1589 3527 PD
24 W
1463 3648 PD
24 W
1650 3578 PD
24 W
1526 3587 PD
24 W
1587 3638 PD
gr

gs 1463 388 4228 4228 MR c np
-9 123 -9 123 -52 -60 -52 -60 61 -63 61 -63 2430 4615 7 MP stroke
gr

gs 2357 4296 269 393 MR c np
24 W
2430 4615 PD
24 W
2552 4489 PD
24 W
2448 4369 PD
24 W
2491 4552 PD
24 W
2500 4429 PD
24 W
2439 4492 PD
gr

gs 1463 388 4228 4228 MR c np
-109 16 -109 15 37 -81 38 -82 72 66 71 66 2756 3977 7 MP stroke
gs 2683 3873 365 310 MR c np
24 W
2756 3977 PD
24 W
2899 4109 PD
24 W
2974 3946 PD
24 W
2827 4043 PD
24 W
2937 4027 PD
24 W
2865 3961 PD
gr

-58 100 -58 100 -54 -81 -55 -82 113 -18 112 -19 2792 2079 7 MP stroke
gs 2719 1806 372 347 MR c np
24 W
2792 2079 PD
24 W
3017 2042 PD
24 W
2908 1879 PD
24 W
2904 2060 PD
24 W
2962 1960 PD
24 W
2850 1979 PD
gr

27 98 28 98 -109 -47 -108 -46 81 -51 81 -52 3232 1748 7 MP stroke
gs 3104 1479 364 343 MR c np
24 W
3232 1748 PD
24 W
3394 1645 PD
24 W
3177 1552 PD
24 W
3313 1696 PD
24 W
3286 1599 PD
24 W
3205 1650 PD
gr

-98 -58 -99 -59 66 -62 65 -62 33 120 33 121 3113 3750 7 MP stroke
gs 3040 3677 344 388 MR c np
24 W
3113 3750 PD
24 W
3179 3991 PD
24 W
3310 3867 PD
24 W
3146 3871 PD
24 W
3244 3929 PD
24 W
3211 3808 PD
gr

104 52 105 52 -82 55 -81 54 -23 -106 -23 -107 3162 3275 7 MP stroke
gs 2880 2989 356 360 MR c np
24 W
3162 3275 PD
24 W
3116 3062 PD
24 W
2953 3171 PD
24 W
3139 3168 PD
24 W
3035 3116 PD
24 W
3058 3223 PD
gr

-82 37 -83 38 -26 -84 -26 -84 108 46 109 47 3177 1552 7 MP stroke
gs 3104 1404 364 315 MR c np
24 W
3177 1552 PD
24 W
3394 1645 PD
24 W
3342 1477 PD
24 W
3286 1599 PD
24 W
3368 1561 PD
24 W
3259 1515 PD
gr

-122 17 -123 17 30 -105 29 -104 93 88 93 87 2321 1482 7 MP stroke
gs 2248 1375 392 356 MR c np
24 W
2321 1482 PD
24 W
2507 1657 PD
24 W
2566 1448 PD
24 W
2414 1569 PD
24 W
2536 1553 PD
24 W
2443 1465 PD
gr

-90 -99 -90 -99 103 -13 104 -13 -14 112 -13 112 3435 862 7 MP stroke
gs 3335 789 354 371 MR c np
24 W
3435 862 PD
24 W
3408 1086 PD
24 W
3615 1060 PD
24 W
3422 974 PD
24 W
3512 1073 PD
24 W
3525 961 PD
gr

113 48 113 48 -86 43 -85 44 -28 -92 -27 -91 2448 4369 7 MP stroke
gs 2149 4113 373 330 MR c np
24 W
2448 4369 PD
24 W
2393 4186 PD
24 W
2222 4273 PD
24 W
2421 4278 PD
24 W
2308 4230 PD
24 W
2335 4321 PD
gr

-51 103 -51 103 -57 -65 -57 -65 108 -38 108 -38 4068 1243 7 MP stroke
gs 3995 964 363 353 MR c np
24 W
4068 1243 PD
24 W
4284 1167 PD
24 W
4170 1037 PD
24 W
4176 1205 PD
24 W
4227 1102 PD
24 W
4119 1140 PD
gr

-109 61 -110 60 15 -91 15 -91 95 30 94 31 1711 3629 7 MP stroke
gs 1638 3435 366 329 MR c np
24 W
1711 3629 PD
24 W
1900 3690 PD
24 W
1930 3508 PD
24 W
1805 3660 PD
24 W
1915 3599 PD
24 W
1820 3568 PD
gr

71 -90 71 -90 23 107 23 106 -94 -16 -94 -17 3304 3095 7 MP stroke
gs 3043 2989 335 360 MR c np
24 W
3304 3095 PD
24 W
3116 3062 PD
24 W
3162 3275 PD
24 W
3210 3078 PD
24 W
3139 3168 PD
24 W
3233 3185 PD
gr

104 53 104 53 -63 50 -62 49 -42 -102 -41 -103 2327 1998 7 MP stroke
gs 2046 1720 355 352 MR c np
24 W
2327 1998 PD
24 W
2244 1793 PD
24 W
2119 1892 PD
24 W
2286 1895 PD
24 W
2182 1842 PD
24 W
2223 1945 PD
gr

74 86 74 85 -81 -12 -81 -13 7 -73 7 -73 2028 4378 7 MP stroke
gs 1807 4134 309 318 MR c np
24 W
2028 4378 PD
24 W
2042 4232 PD
24 W
1880 4207 PD
24 W
2035 4305 PD
24 W
1961 4219 PD
24 W
1954 4292 PD
gr

80 -97 80 -97 1 88 0 88 -80 9 -81 9 4598 2943 7 MP stroke
gs 4364 2870 308 341 MR c np
24 W
4598 2943 PD
24 W
4437 2961 PD
24 W
4438 3137 PD
24 W
4517 2952 PD
24 W
4437 3049 PD
24 W
4518 3040 PD
gr

115 -20 114 -20 -48 64 -48 64 -66 -44 -67 -44 4459 1847 7 MP stroke
gs 4157 1686 376 275 MR c np
24 W
4459 1847 PD
24 W
4326 1759 PD
24 W
4230 1887 PD
24 W
4392 1803 PD
24 W
4278 1823 PD
24 W
4344 1867 PD
gr

-43 114 -43 115 -68 -101 -69 -101 112 -13 111 -14 2434 617 7 MP stroke
gr

gs 2361 315 370 376 MR c np
24 W
2434 617 PD
24 W
2657 590 PD
24 W
2520 388 PD
24 W
2545 603 PD
24 W
2588 489 PD
24 W
2477 503 PD
gr

gs 1463 388 4228 4228 MR c np
105 51 105 52 -77 58 -77 59 -28 -110 -28 -110 4033 3316 7 MP stroke
gs 3750 3023 357 367 MR c np
24 W
4033 3316 PD
24 W
3977 3096 PD
24 W
3823 3213 PD
24 W
4005 3206 PD
24 W
3900 3155 PD
24 W
3928 3265 PD
gr

115 -43 114 -43 -14 111 -13 112 -101 -68 -101 -69 5690 3558 7 MP stroke
gr

gs 5388 3348 376 370 MR c np
24 W
5690 3558 PD
24 W
5488 3421 PD
24 W
5461 3644 PD
24 W
5589 3489 PD
24 W
5475 3533 PD
24 W
5575 3601 PD
gr

gs 1463 388 4228 4228 MR c np
90 -79 91 -79 31 107 30 107 -121 -28 -121 -28 5467 4049 7 MP stroke
gs 5152 3920 389 361 MR c np
24 W
5467 4049 PD
24 W
5225 3993 PD
24 W
5286 4207 PD
24 W
5346 4021 PD
24 W
5255 4100 PD
24 W
5377 4128 PD
gr

88 67 88 67 -112 19 -113 18 25 -86 24 -85 2968 2213 7 MP stroke
gs 2719 1969 372 318 MR c np
24 W
2968 2213 PD
24 W
3017 2042 PD
24 W
2792 2079 PD
24 W
2992 2128 PD
24 W
2904 2060 PD
24 W
2880 2146 PD
gr

-79 -59 -80 -59 112 -14 111 -15 -32 74 -32 73 2532 3256 7 MP stroke
gs 2395 3183 370 294 MR c np
24 W
2532 3256 PD
24 W
2468 3403 PD
24 W
2691 3374 PD
24 W
2500 3329 PD
24 W
2579 3388 PD
24 W
2611 3315 PD
gr

-60 -104 -59 -104 121 28 121 28 -62 76 -61 76 5348 3841 7 MP stroke
gs 5152 3768 389 355 MR c np
24 W
5348 3841 PD
24 W
5225 3993 PD
24 W
5467 4049 PD
24 W
5287 3917 PD
24 W
5346 4021 PD
24 W
5408 3945 PD
gr

-79 91 -78 90 -29 -121 -28 -121 107 30 107 31 1871 792 7 MP stroke
gs 1798 538 361 389 MR c np
24 W
1871 792 PD
24 W
2085 853 PD
24 W
2028 611 PD
24 W
1978 823 PD
24 W
2057 732 PD
24 W
1950 701 PD
gr

77 -82 77 -83 28 110 28 110 -105 -27 -105 -28 4187 3151 7 MP stroke
gs 3904 3023 357 367 MR c np
24 W
4187 3151 PD
24 W
3977 3096 PD
24 W
4033 3316 PD
24 W
4082 3123 PD
24 W
4005 3206 PD
24 W
4110 3233 PD
gr

-104 -59 -104 -60 75 -61 76 -62 28 121 29 121 2028 611 7 MP stroke
gs 1955 538 355 389 MR c np
24 W
2028 611 PD
24 W
2085 853 PD
24 W
2236 730 PD
24 W
2057 732 PD
24 W
2161 791 PD
24 W
2132 670 PD
gr

55 -101 55 -101 27 91 28 92 -83 10 -82 9 2558 4167 7 MP stroke
gs 2320 4094 312 349 MR c np
24 W
2558 4167 PD
24 W
2393 4186 PD
24 W
2448 4369 PD
24 W
2476 4176 PD
24 W
2421 4278 PD
24 W
2503 4268 PD
gr

69 67 68 67 -63 44 -64 44 -5 -111 -5 -111 4302 4098 7 MP stroke
gs 4092 3803 284 369 MR c np
24 W
4302 4098 PD
24 W
4292 3876 PD
24 W
4165 3964 PD
24 W
4297 3987 PD
24 W
4228 3920 PD
24 W
4233 4031 PD
gr

77 -66 77 -65 5 111 5 111 -82 -46 -82 -45 4456 3967 7 MP stroke
gs 4219 3803 311 369 MR c np
24 W
4456 3967 PD
24 W
4292 3876 PD
24 W
4302 4098 PD
24 W
4374 3922 PD
24 W
4297 3987 PD
24 W
4379 4033 PD
gr

-86 106 -85 105 -25 -111 -25 -111 111 6 110 5 5281 2236 7 MP stroke
gs 5208 1952 368 369 MR c np
24 W
5281 2236 PD
24 W
5502 2247 PD
24 W
5452 2025 PD
24 W
5391 2241 PD
24 W
5477 2136 PD
24 W
5367 2130 PD
gr

105 -86 106 -85 5 110 6 110 -111 -24 -111 -25 4053 626 7 MP stroke
gs 3758 504 369 367 MR c np
24 W
4053 626 PD
24 W
3831 577 PD
24 W
3842 797 PD
24 W
3942 601 PD
24 W
3837 687 PD
24 W
3948 712 PD
gr

115 38 116 38 -85 45 -85 45 -31 -83 -30 -83 3846 1136 7 MP stroke
gs 3542 897 378 313 MR c np
24 W
3846 1136 PD
24 W
3785 970 PD
24 W
3615 1060 PD
24 W
3816 1053 PD
24 W
3700 1015 PD
24 W
3731 1098 PD
gr

32 -102 33 -102 41 103 42 102 -74 0 -74 -1 2392 1794 7 MP stroke
gs 2171 1720 295 352 MR c np
24 W
2392 1794 PD
24 W
2244 1793 PD
24 W
2327 1998 PD
24 W
2318 1793 PD
24 W
2286 1895 PD
24 W
2360 1896 PD
gr

19 -112 18 -113 57 72 57 72 -75 41 -76 40 2115 3098 7 MP stroke
gs 1891 3025 298 372 MR c np
24 W
2115 3098 PD
24 W
1964 3179 PD
24 W
2078 3323 PD
24 W
2039 3138 PD
24 W
2021 3251 PD
24 W
2096 3210 PD
gr

-59 97 -59 96 -38 -94 -39 -94 98 -2 97 -3 2083 4080 7 MP stroke
gs 2010 3814 342 340 MR c np
24 W
2083 4080 PD
24 W
2278 4075 PD
24 W
2201 3887 PD
24 W
2180 4077 PD
24 W
2239 3981 PD
24 W
2142 3983 PD
gr

120 -44 121 -45 -31 102 -30 102 -90 -58 -90 -57 5066 3334 7 MP stroke
gs 4752 3146 388 351 MR c np
24 W
5066 3334 PD
24 W
4886 3219 PD
24 W
4825 3423 PD
24 W
4976 3277 PD
24 W
4856 3321 PD
24 W
4946 3378 PD
gr

-75 -49 -75 -49 111 -24 111 -24 -36 73 -36 73 4284 1319 7 MP stroke
gs 4139 1246 369 293 MR c np
24 W
4284 1319 PD
24 W
4212 1465 PD
24 W
4434 1417 PD
24 W
4248 1392 PD
24 W
4323 1441 PD
24 W
4359 1368 PD
gr

-90 -75 -89 -75 87 -21 87 -20 2 95 3 96 5042 2494 7 MP stroke
gs 4969 2421 326 338 MR c np
24 W
5042 2494 PD
24 W
5047 2685 PD
24 W
5221 2644 PD
24 W
5045 2590 PD
24 W
5134 2665 PD
24 W
5132 2569 PD
gr

-128 -4 -129 -4 72 -61 71 -61 57 65 57 65 4170 1037 7 MP stroke
gs 4097 964 404 277 MR c np
24 W
4170 1037 PD
24 W
4284 1167 PD
24 W
4427 1045 PD
24 W
4227 1102 PD
24 W
4355 1106 PD
24 W
4298 1041 PD
gr

-88 -67 -88 -67 89 -39 89 -38 -1 106 -1 105 2792 2079 7 MP stroke
gs 2717 2006 325 358 MR c np
24 W
2792 2079 PD
24 W
2790 2290 PD
24 W
2968 2213 PD
24 W
2791 2184 PD
24 W
2879 2252 PD
24 W
2880 2146 PD
gr

-105 0 -106 0 79 -97 79 -97 27 97 26 97 2943 388 7 MP stroke
gr

gs 2870 315 358 341 MR c np
24 W
2943 388 PD
24 W
2996 582 PD
24 W
3154 388 PD
24 W
2969 485 PD
24 W
3075 485 PD
24 W
3048 388 PD
gr

gs 1463 388 4228 4228 MR c np
101 -72 101 -72 -17 94 -16 93 -85 -22 -84 -21 2324 3514 7 MP stroke
gs 2049 3398 349 334 MR c np
24 W
2324 3514 PD
24 W
2155 3471 PD
24 W
2122 3658 PD
24 W
2240 3493 PD
24 W
2139 3564 PD
24 W
2223 3586 PD
gr

69 96 70 97 -97 3 -98 2 28 -99 28 -99 2222 4273 7 MP stroke
gs 2010 4002 342 345 MR c np
24 W
2222 4273 PD
24 W
2278 4075 PD
24 W
2083 4080 PD
24 W
2250 4174 PD
24 W
2180 4077 PD
24 W
2153 4177 PD
gr

-18 -123 -18 -123 90 57 90 58 -72 65 -72 66 5030 3088 7 MP stroke
gs 4813 3015 327 393 MR c np
24 W
5030 3088 PD
24 W
4886 3219 PD
24 W
5066 3334 PD
24 W
4958 3154 PD
24 W
4976 3277 PD
24 W
5048 3211 PD
gr

0 -211 97 25 97 26 -97 80 -97 80 5690 2924 6 MP stroke
gr

gs 5423 2851 341 358 MR c np
24 W
5690 2924 PD
24 W
5496 3084 PD
24 W
5690 3135 PD
24 W
5593 3004 PD
24 W
5593 3110 PD
24 W
5690 3030 PD
gr

gs 1463 388 4228 4228 MR c np
82 -56 83 -57 34 72 34 72 -117 -16 -116 -15 2126 1664 7 MP stroke
gs 1820 1560 380 291 MR c np
24 W
2126 1664 PD
24 W
1893 1633 PD
24 W
1961 1777 PD
24 W
2010 1649 PD
24 W
1927 1705 PD
24 W
2044 1720 PD
gr

-125 -9 -124 -9 54 -60 54 -60 70 69 71 69 1463 2254 7 MP stroke
gr

gs 1390 2181 396 285 MR c np
24 W
1463 2254 PD
24 W
1604 2392 PD
24 W
1712 2272 PD
24 W
1534 2323 PD
24 W
1658 2332 PD
24 W
1588 2263 PD
gr

gs 1463 388 4228 4228 MR c np
-8 -124 -9 -125 69 71 69 70 -61 54 -60 54 3807 4366 7 MP stroke
gr

gs 3613 4293 285 396 MR c np
24 W
3807 4366 PD
24 W
3686 4474 PD
24 W
3824 4615 PD
24 W
3747 4420 PD
24 W
3755 4544 PD
24 W
3815 4490 PD
gr

gs 1463 388 4228 4228 MR c np
10 -118 9 -118 52 63 51 62 -61 55 -61 56 4876 1787 7 MP stroke
gs 4681 1714 269 383 MR c np
24 W
4876 1787 PD
24 W
4754 1898 PD
24 W
4857 2023 PD
24 W
4815 1843 PD
24 W
4805 1960 PD
24 W
4866 1905 PD
gr

59 -104 60 -104 62 76 61 75 -121 29 -121 28 5467 953 7 MP stroke
gs 5152 880 389 355 MR c np
24 W
5467 953 PD
24 W
5225 1010 PD
24 W
5348 1161 PD
24 W
5346 981 PD
24 W
5286 1085 PD
24 W
5408 1057 PD
gr

-90 -79 -91 -79 121 -28 121 -29 -30 108 -31 107 5286 795 7 MP stroke
gs 5152 722 389 362 MR c np
24 W
5286 795 PD
24 W
5225 1010 PD
24 W
5467 953 PD
24 W
5255 902 PD
24 W
5346 981 PD
24 W
5376 874 PD
gr

72 98 71 97 -92 -14 -91 -13 20 -84 20 -84 2756 3977 7 MP stroke
gs 2540 3709 330 342 MR c np
24 W
2756 3977 PD
24 W
2796 3809 PD
24 W
2613 3782 PD
24 W
2776 3893 PD
24 W
2705 3796 PD
24 W
2684 3879 PD
gr

-73 55 -72 55 6 -115 7 -115 66 60 66 60 3263 1196 7 MP stroke
gs 3190 1013 292 377 MR c np
24 W
3263 1196 PD
24 W
3395 1316 PD
24 W
3408 1086 PD
24 W
3329 1256 PD
24 W
3402 1201 PD
24 W
3336 1141 PD
gr

74 -92 74 -93 14 92 14 91 -88 1 -88 1 2078 3323 7 MP stroke
gs 1829 3250 323 332 MR c np
24 W
2078 3323 PD
24 W
1902 3325 PD
24 W
1930 3508 PD
24 W
1990 3324 PD
24 W
1916 3416 PD
24 W
2004 3415 PD
gr

102 54 102 55 -72 50 -73 50 -29 -105 -30 -104 4626 2686 7 MP stroke
gs 4349 2404 351 356 MR c np
24 W
4626 2686 PD
24 W
4567 2477 PD
24 W
4422 2577 PD
24 W
4596 2582 PD
24 W
4494 2527 PD
24 W
4524 2632 PD
gr

-77 65 -77 66 10 -116 9 -115 68 50 67 50 4302 4098 7 MP stroke
gs 4229 3894 301 378 MR c np
24 W
4302 4098 PD
24 W
4437 4198 PD
24 W
4456 3967 PD
24 W
4369 4148 PD
24 W
4446 4083 PD
24 W
4379 4033 PD
gr

40 100 39 99 -103 -56 -103 -55 64 -44 63 -44 4165 3964 7 MP stroke
gs 4013 3692 353 346 MR c np
24 W
4165 3964 PD
24 W
4292 3876 PD
24 W
4086 3765 PD
24 W
4228 3920 PD
24 W
4189 3821 PD
24 W
4125 3864 PD
gr

6 119 6 118 -61 -51 -60 -50 54 -68 55 -68 2040 4615 7 MP stroke
gr

gs 1955 4305 268 384 MR c np
24 W
2040 4615 PD
24 W
2149 4479 PD
24 W
2028 4378 PD
24 W
2095 4547 PD
24 W
2089 4429 PD
24 W
2034 4496 PD
gr

gs 1463 388 4228 4228 MR c np
57 -107 57 -107 30 104 29 105 -86 2 -87 3 4740 2472 7 MP stroke
gs 4494 2399 320 361 MR c np
24 W
4740 2472 PD
24 W
4567 2477 PD
24 W
4626 2686 PD
24 W
4653 2475 PD
24 W
4596 2582 PD
24 W
4683 2579 PD
gr

73 92 73 91 -110 11 -110 11 37 -102 37 -103 2791 1422 7 MP stroke
gs 2572 1144 367 352 MR c np
24 W
2791 1422 PD
24 W
2865 1217 PD
24 W
2645 1239 PD
24 W
2828 1319 PD
24 W
2755 1228 PD
24 W
2718 1330 PD
gr

121 4 122 4 -68 55 -68 55 -53 -59 -54 -59 1706 4046 7 MP stroke
gr

gs 1390 3855 390 265 MR c np
24 W
1706 4046 PD
24 W
1599 3928 PD
24 W
1463 4038 PD
24 W
1652 3987 PD
24 W
1531 3983 PD
24 W
1585 4042 PD
gr

gs 1463 388 4228 4228 MR c np
59 -89 58 -90 53 74 52 73 -111 16 -111 16 2122 3658 7 MP stroke
gs 1827 3585 369 326 MR c np
24 W
2122 3658 PD
24 W
1900 3690 PD
24 W
2005 3837 PD
24 W
2011 3674 PD
24 W
1952 3763 PD
24 W
2063 3747 PD
gr

80 -100 79 -100 15 101 14 101 -94 -1 -94 -1 4586 845 7 MP stroke
gs 4325 770 335 349 MR c np
24 W
4586 845 PD
24 W
4398 843 PD
24 W
4427 1045 PD
24 W
4492 844 PD
24 W
4412 944 PD
24 W
4506 945 PD
gr

-126 7 -125 7 59 -61 58 -61 67 54 67 54 4187 3151 7 MP stroke
gs 4114 3064 398 269 MR c np
24 W
4187 3151 PD
24 W
4321 3259 PD
24 W
4438 3137 PD
24 W
4254 3205 PD
24 W
4379 3198 PD
24 W
4313 3144 PD
gr

98 0 97 0 -26 80 -27 80 -71 -80 -71 -80 2430 4615 7 MP stroke
gr

gs 2162 4382 342 307 MR c np
24 W
2430 4615 PD
24 W
2288 4455 PD
24 W
2235 4615 PD
24 W
2359 4535 PD
24 W
2261 4535 PD
24 W
2332 4615 PD
gr

gs 1463 388 4228 4228 MR c np
104 -40 103 -39 -15 96 -16 96 -88 -57 -88 -56 3924 4069 7 MP stroke
gs 3644 3883 354 339 MR c np
24 W
3924 4069 PD
24 W
3748 3956 PD
24 W
3717 4148 PD
24 W
3836 4013 PD
24 W
3732 4052 PD
24 W
3820 4109 PD
gr

0 195 -80 -71 -79 -71 79 -27 80 -26 1463 3843 6 MP stroke
gr

gs 1390 3575 306 342 MR c np
24 W
1463 3843 PD
24 W
1622 3790 PD
24 W
1463 3648 PD
24 W
1543 3817 PD
24 W
1543 3719 PD
24 W
1463 3746 PD
gr

gs 1463 388 4228 4228 MR c np
-39 103 -40 103 -52 -90 -52 -90 92 -13 91 -13 1930 2362 7 MP stroke
gs 1857 2083 330 353 MR c np
24 W
1930 2362 PD
24 W
2113 2336 PD
24 W
2009 2156 PD
24 W
2021 2349 PD
24 W
2061 2246 PD
24 W
1969 2259 PD
gr

-78 -103 -79 -103 85 4 84 4 -6 99 -6 99 4427 1045 7 MP stroke
gs 4342 972 316 353 MR c np
24 W
4427 1045 PD
24 W
4415 1243 PD
24 W
4584 1251 PD
24 W
4421 1144 PD
24 W
4499 1247 PD
24 W
4505 1148 PD
gr

15 115 15 114 -63 -50 -63 -51 48 -64 48 -64 4230 1887 7 MP stroke
gs 4127 1585 273 376 MR c np
24 W
4230 1887 PD
24 W
4326 1759 PD
24 W
4200 1658 PD
24 W
4278 1823 PD
24 W
4263 1708 PD
24 W
4215 1772 PD
gr

-5 -119 -5 -119 64 58 63 58 -58 61 -59 61 4438 3137 7 MP stroke
gs 4248 3064 274 385 MR c np
24 W
4438 3137 PD
24 W
4321 3259 PD
24 W
4448 3375 PD
24 W
4379 3198 PD
24 W
4384 3317 PD
24 W
4443 3256 PD
gr

-109 -12 -109 -12 61 -81 62 -81 47 93 48 93 4189 2775 7 MP stroke
gs 4116 2702 365 333 MR c np
24 W
4189 2775 PD
24 W
4284 2961 PD
24 W
4407 2799 PD
24 W
4237 2868 PD
24 W
4346 2880 PD
24 W
4298 2787 PD
gr

-22 -110 -22 -110 88 56 88 57 -66 53 -66 54 3880 3849 7 MP stroke
gs 3675 3776 323 367 MR c np
24 W
3880 3849 PD
24 W
3748 3956 PD
24 W
3924 4069 PD
24 W
3814 3903 PD
24 W
3836 4013 PD
24 W
3902 3959 PD
gr

-107 -24 -107 -24 55 -66 55 -66 52 90 52 90 2009 2156 7 MP stroke
gs 1936 2083 361 327 MR c np
24 W
2009 2156 PD
24 W
2113 2336 PD
24 W
2223 2204 PD
24 W
2061 2246 PD
24 W
2168 2270 PD
24 W
2116 2180 PD
gr

-111 -52 -112 -51 95 -62 95 -62 17 113 16 114 4843 1560 7 MP stroke
gs 4770 1487 370 374 MR c np
24 W
4843 1560 PD
24 W
4876 1787 PD
24 W
5066 1663 PD
24 W
4859 1674 PD
24 W
4971 1725 PD
24 W
4954 1612 PD
gr

13 -122 12 -122 83 60 82 60 -95 62 -95 62 5066 1663 7 MP stroke
gs 4803 1590 337 391 MR c np
24 W
5066 1663 PD
24 W
4876 1787 PD
24 W
5041 1907 PD
24 W
4971 1725 PD
24 W
4958 1847 PD
24 W
5053 1785 PD
gr

37 104 37 104 -103 -53 -104 -53 67 -51 66 -51 2009 2156 7 MP stroke
gs 1862 1875 354 355 MR c np
24 W
2009 2156 PD
24 W
2142 2054 PD
24 W
1935 1948 PD
24 W
2075 2105 PD
24 W
2038 2001 PD
24 W
1972 2052 PD
gr

-92 28 -92 28 -11 -81 -12 -81 104 53 103 53 1935 1948 7 MP stroke
gs 1862 1819 354 309 MR c np
24 W
1935 1948 PD
24 W
2142 2054 PD
24 W
2119 1892 PD
24 W
2038 2001 PD
24 W
2130 1973 PD
24 W
2027 1920 PD
gr

99 59 98 58 -75 40 -75 41 -24 -99 -23 -99 3310 3867 7 MP stroke
gs 3040 3596 344 345 MR c np
24 W
3310 3867 PD
24 W
3263 3669 PD
24 W
3113 3750 PD
24 W
3287 3768 PD
24 W
3188 3710 PD
24 W
3211 3808 PD
gr

97 -53 97 -52 -7 73 -7 73 -90 -21 -90 -20 2222 4273 7 MP stroke
gs 1955 4159 341 293 MR c np
24 W
2222 4273 PD
24 W
2042 4232 PD
24 W
2028 4378 PD
24 W
2132 4253 PD
24 W
2035 4305 PD
24 W
2125 4326 PD
gr

0 210 -87 -86 -86 -86 86 -19 87 -19 1463 810 6 MP stroke
gr

gs 1390 527 320 357 MR c np
24 W
1463 810 PD
24 W
1636 772 PD
24 W
1463 600 PD
24 W
1550 791 PD
24 W
1550 686 PD
24 W
1463 705 PD
gr

gs 1463 388 4228 4228 MR c np
105 0 105 0 -19 87 -19 86 -86 -86 -86 -87 5478 4615 7 MP stroke
gr

gs 5195 4369 357 320 MR c np
24 W
5478 4615 PD
24 W
5306 4442 PD
24 W
5268 4615 PD
24 W
5392 4528 PD
24 W
5287 4528 PD
24 W
5373 4615 PD
gr

gs 1463 388 4228 4228 MR c np
97 84 98 84 -103 13 -104 12 6 -96 6 -97 4200 1658 7 MP stroke
gs 3932 1392 354 340 MR c np
24 W
4200 1658 PD
24 W
4212 1465 PD
24 W
4005 1490 PD
24 W
4206 1561 PD
24 W
4108 1477 PD
24 W
4103 1574 PD
gr

100 -47 101 -47 7 86 7 85 -108 -38 -107 -39 4825 3423 7 MP stroke
gs 4537 3273 362 318 MR c np
24 W
4825 3423 PD
24 W
4610 3346 PD
24 W
4624 3517 PD
24 W
4718 3384 PD
24 W
4617 3431 PD
24 W
4725 3470 PD
gr

-23 -114 -23 -114 98 31 98 31 -75 83 -75 83 4584 1251 7 MP stroke
gs 4361 1178 343 375 MR c np
24 W
4584 1251 PD
24 W
4434 1417 PD
24 W
4630 1479 PD
24 W
4509 1334 PD
24 W
4532 1448 PD
24 W
4607 1365 PD
gr

15 113 14 112 -83 -20 -83 -20 69 -92 68 -93 3505 2299 7 MP stroke
gs 3403 2001 313 372 MR c np
24 W
3505 2299 PD
24 W
3642 2114 PD
24 W
3476 2074 PD
24 W
3573 2206 PD
24 W
3559 2094 PD
24 W
3490 2186 PD
gr

-14 -101 -15 -101 90 76 89 77 -75 25 -75 24 4398 843 7 MP stroke
gs 4175 770 326 349 MR c np
24 W
4398 843 PD
24 W
4248 892 PD
24 W
4427 1045 PD
24 W
4323 867 PD
24 W
4337 969 PD
24 W
4412 944 PD
gr

100 0 101 0 -52 92 -52 92 -48 -92 -49 -92 3421 4615 7 MP stroke
gr

gs 3147 4358 348 331 MR c np
24 W
3421 4615 PD
24 W
3324 4431 PD
24 W
3220 4615 PD
24 W
3372 4523 PD
24 W
3272 4523 PD
24 W
3321 4615 PD
gr

gs 1463 388 4228 4228 MR c np
19 -114 20 -115 65 78 64 78 -84 37 -84 36 3586 2895 7 MP stroke
gs 3345 2822 315 376 MR c np
24 W
3586 2895 PD
24 W
3418 2968 PD
24 W
3547 3124 PD
24 W
3502 2931 PD
24 W
3482 3046 PD
24 W
3567 3009 PD
gr

-116 7 -116 7 53 -61 54 -61 62 54 63 54 3604 1682 7 MP stroke
gs 3531 1595 379 269 MR c np
24 W
3604 1682 PD
24 W
3729 1790 PD
24 W
3836 1668 PD
24 W
3667 1736 PD
24 W
3783 1729 PD
24 W
3720 1675 PD
gr

0 201 -92 -49 -92 -49 92 -51 92 -52 1463 2858 6 MP stroke
gr

gs 1390 2584 331 348 MR c np
24 W
1463 2858 PD
24 W
1647 2755 PD
24 W
1463 2657 PD
24 W
1555 2806 PD
24 W
1555 2706 PD
24 W
1463 2757 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 86 86 86 87 -86 19 -86 19 5690 4192 6 MP stroke
gr

gs 5445 4119 319 358 MR c np
24 W
5690 4192 PD
24 W
5518 4230 PD
24 W
5690 4403 PD
24 W
5604 4211 PD
24 W
5604 4317 PD
24 W
5690 4298 PD
gr

gs 1463 388 4228 4228 MR c np
102 0 102 0 -64 98 -65 98 -37 -98 -38 -98 4231 4615 7 MP stroke
gr

gs 3954 4346 351 343 MR c np
24 W
4231 4615 PD
24 W
4156 4419 PD
24 W
4027 4615 PD
24 W
4193 4517 PD
24 W
4091 4517 PD
24 W
4129 4615 PD
gr

gs 1463 388 4228 4228 MR c np
-117 16 -118 15 55 -66 54 -66 63 51 63 50 4200 1658 7 MP stroke
gs 4127 1554 382 279 MR c np
24 W
4200 1658 PD
24 W
4326 1759 PD
24 W
4435 1627 PD
24 W
4263 1708 PD
24 W
4380 1693 PD
24 W
4317 1642 PD
gr

57 -99 58 -98 32 86 32 87 -90 12 -89 12 3504 3349 7 MP stroke
gs 3252 3276 326 344 MR c np
24 W
3504 3349 PD
24 W
3325 3373 PD
24 W
3389 3546 PD
24 W
3415 3361 PD
24 W
3357 3460 PD
24 W
3447 3448 PD
gr

-12 -110 -12 -111 65 50 66 49 -54 61 -53 61 3836 1668 7 MP stroke
gs 3656 1595 278 368 MR c np
24 W
3836 1668 PD
24 W
3729 1790 PD
24 W
3860 1889 PD
24 W
3783 1729 PD
24 W
3795 1839 PD
24 W
3848 1778 PD
gr

-70 105 -69 105 -23 -97 -24 -98 93 -7 93 -8 4592 4166 7 MP stroke
gs 4519 3883 333 357 MR c np
24 W
4592 4166 PD
24 W
4778 4151 PD
24 W
4731 3956 PD
24 W
4685 4158 PD
24 W
4754 4053 PD
24 W
4662 4061 PD
gr

-105 0 -106 0 19 -86 19 -86 87 86 86 86 1675 388 7 MP stroke
gr

gs 1602 315 358 319 MR c np
24 W
1675 388 PD
24 W
1848 560 PD
24 W
1886 388 PD
24 W
1761 474 PD
24 W
1867 474 PD
24 W
1780 388 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 93 22 93 22 -93 84 -93 83 5690 2713 6 MP stroke
gr

gs 5431 2640 333 358 MR c np
24 W
5690 2713 PD
24 W
5504 2880 PD
24 W
5690 2924 PD
24 W
5597 2796 PD
24 W
5597 2902 PD
24 W
5690 2818 PD
gr

gs 1463 388 4228 4228 MR c np
-52 103 -52 103 -49 -101 -50 -100 101 -3 102 -2 2223 2204 7 MP stroke
gs 2150 1925 350 353 MR c np
24 W
2223 2204 PD
24 W
2426 2199 PD
24 W
2327 1998 PD
24 W
2325 2202 PD
24 W
2376 2099 PD
24 W
2275 2101 PD
gr

-106 0 -105 0 86 -83 87 -83 19 83 19 83 3154 388 7 MP stroke
gr

gs 3081 315 358 313 MR c np
24 W
3154 388 PD
24 W
3192 554 PD
24 W
3365 388 PD
24 W
3173 471 PD
24 W
3279 471 PD
24 W
3260 388 PD
gr

gs 1463 388 4228 4228 MR c np
-106 0 -105 0 86 -87 86 -86 20 86 19 87 5267 388 7 MP stroke
gr

gs 5194 315 358 320 MR c np
24 W
5267 388 PD
24 W
5306 561 PD
24 W
5478 388 PD
24 W
5286 475 PD
24 W
5392 475 PD
24 W
5373 388 PD
gr

gs 1463 388 4228 4228 MR c np
-112 -5 -113 -6 49 -98 50 -98 63 104 63 103 4632 2012 7 MP stroke
gs 4559 1939 372 354 MR c np
24 W
4632 2012 PD
24 W
4758 2219 PD
24 W
4857 2023 PD
24 W
4695 2115 PD
24 W
4808 2121 PD
24 W
4744 2017 PD
gr

0 204 -98 -38 -98 -38 98 -64 98 -64 1463 2051 6 MP stroke
gr

gs 1390 1774 343 351 MR c np
24 W
1463 2051 PD
24 W
1659 1923 PD
24 W
1463 1847 PD
24 W
1561 1987 PD
24 W
1561 1885 PD
24 W
1463 1949 PD
gr

gs 1463 388 4228 4228 MR c np
-115 -28 -115 -29 66 -72 65 -72 50 100 49 101 2327 1998 7 MP stroke
gs 2254 1925 377 348 MR c np
24 W
2327 1998 PD
24 W
2426 2199 PD
24 W
2557 2055 PD
24 W
2376 2099 PD
24 W
2491 2127 PD
24 W
2442 2026 PD
gr

45 109 45 109 -75 -34 -76 -34 31 -75 30 -75 3807 4366 7 MP stroke
gs 3644 4075 298 365 MR c np
24 W
3807 4366 PD
24 W
3868 4216 PD
24 W
3717 4148 PD
24 W
3837 4291 PD
24 W
3792 4182 PD
24 W
3762 4257 PD
gr

109 45 109 45 -75 31 -75 30 -34 -75 -34 -76 1930 2362 7 MP stroke
gs 1639 2138 365 298 MR c np
24 W
1930 2362 PD
24 W
1862 2211 PD
24 W
1712 2272 PD
24 W
1896 2286 PD
24 W
1787 2241 PD
24 W
1821 2317 PD
gr

0 -211 86 19 86 20 -86 86 -86 86 5690 600 6 MP stroke
gr

gs 5445 527 319 358 MR c np
24 W
5690 600 PD
24 W
5518 772 PD
24 W
5690 811 PD
24 W
5604 686 PD
24 W
5604 792 PD
24 W
5690 705 PD
gr

gs 1463 388 4228 4228 MR c np
13 -92 14 -92 83 40 83 40 -97 52 -96 52 2564 2575 7 MP stroke
gs 2298 2502 340 331 MR c np
24 W
2564 2575 PD
24 W
2371 2679 PD
24 W
2537 2759 PD
24 W
2468 2627 PD
24 W
2454 2719 PD
24 W
2551 2667 PD
gr

97 -80 97 -80 -4 102 -4 102 -93 -22 -93 -22 5690 2924 7 MP stroke
gr

gs 5423 2807 341 351 MR c np
24 W
5690 2924 PD
24 W
5504 2880 PD
24 W
5496 3084 PD
24 W
5597 2902 PD
24 W
5500 2982 PD
24 W
5593 3004 PD
gr

gs 1463 388 4228 4228 MR c np
-79 97 -79 97 -19 -83 -19 -83 98 -14 98 -14 2996 582 7 MP stroke
gr

gs 2923 315 343 341 MR c np
24 W
2996 582 PD
24 W
3192 554 PD
24 W
3154 388 PD
24 W
3094 568 PD
24 W
3173 471 PD
24 W
3075 485 PD
gr

gs 1463 388 4228 4228 MR c np
-89 -38 -88 -38 96 -52 97 -52 -8 90 -8 90 2387 2499 7 MP stroke
gs 2298 2426 340 327 MR c np
24 W
2387 2499 PD
24 W
2371 2679 PD
24 W
2564 2575 PD
24 W
2379 2589 PD
24 W
2468 2627 PD
24 W
2476 2537 PD
gr

-100 45 -101 45 19 -87 20 -88 81 43 81 42 3807 4366 7 MP stroke
gs 3734 4203 348 322 MR c np
24 W
3807 4366 PD
24 W
3969 4451 PD
24 W
4008 4276 PD
24 W
3888 4408 PD
24 W
3989 4363 PD
24 W
3907 4321 PD
gr

45 -101 45 -101 42 81 43 82 -88 19 -87 20 1802 2070 7 MP stroke
gs 1554 1997 322 349 MR c np
24 W
1802 2070 PD
24 W
1627 2109 PD
24 W
1712 2272 PD
24 W
1715 2090 PD
24 W
1670 2191 PD
24 W
1757 2171 PD
gr

-76 91 -76 92 -36 -105 -36 -105 112 13 112 14 2539 3557 7 MP stroke
gs 2466 3301 371 357 MR c np
24 W
2539 3557 PD
24 W
2763 3584 PD
24 W
2691 3374 PD
24 W
2651 3571 PD
24 W
2727 3479 PD
24 W
2615 3466 PD
gr

101 -45 100 -45 -30 75 -31 75 -70 -30 -70 -30 4008 4276 7 MP stroke
gs 3734 4143 348 297 MR c np
24 W
4008 4276 PD
24 W
3868 4216 PD
24 W
3807 4366 PD
24 W
3938 4246 PD
24 W
3837 4291 PD
24 W
3907 4321 PD
gr

-45 101 -45 101 -30 -71 -30 -70 75 -30 75 -31 1712 2272 7 MP stroke
gs 1639 1997 297 349 MR c np
24 W
1712 2272 PD
24 W
1862 2211 PD
24 W
1802 2070 PD
24 W
1787 2241 PD
24 W
1832 2141 PD
24 W
1757 2171 PD
gr

51 -105 51 -104 49 80 49 81 -100 24 -100 24 2916 2644 7 MP stroke
gs 2643 2571 347 356 MR c np
24 W
2916 2644 PD
24 W
2716 2692 PD
24 W
2814 2853 PD
24 W
2816 2668 PD
24 W
2765 2773 PD
24 W
2865 2749 PD
gr

102 -63 101 -64 -13 102 -14 101 -88 -38 -88 -38 2083 4080 7 MP stroke
gs 1807 3931 350 350 MR c np
24 W
2083 4080 PD
24 W
1907 4004 PD
24 W
1880 4207 PD
24 W
1995 4042 PD
24 W
1893 4105 PD
24 W
1981 4143 PD
gr

-79 -77 -78 -76 100 -24 100 -24 -22 100 -21 101 2759 2491 7 MP stroke
gs 2643 2418 347 348 MR c np
24 W
2759 2491 PD
24 W
2716 2692 PD
24 W
2916 2644 PD
24 W
2738 2592 PD
24 W
2816 2668 PD
24 W
2838 2568 PD
gr

103 0 104 0 -34 102 -33 101 -70 -101 -70 -102 4643 4615 7 MP stroke
gr

gs 4363 4339 354 350 MR c np
24 W
4643 4615 PD
24 W
4503 4412 PD
24 W
4436 4615 PD
24 W
4573 4513 PD
24 W
4470 4513 PD
24 W
4540 4615 PD
gr

gs 1463 388 4228 4228 MR c np
0 207 -101 -70 -100 -70 100 -33 101 -34 1463 1642 6 MP stroke
gr

gs 1390 1362 348 354 MR c np
24 W
1463 1642 PD
24 W
1664 1575 PD
24 W
1463 1435 PD
24 W
1564 1608 PD
24 W
1564 1505 PD
24 W
1463 1538 PD
gr

gs 1463 388 4228 4228 MR c np
-87 -82 -87 -82 87 -22 86 -21 0 103 1 104 4425 3579 7 MP stroke
gs 4352 3506 321 354 MR c np
24 W
4425 3579 PD
24 W
4426 3786 PD
24 W
4599 3743 PD
24 W
4426 3683 PD
24 W
4512 3765 PD
24 W
4512 3661 PD
gr

-63 -68 -62 -68 88 -40 87 -40 -25 108 -25 108 3781 3511 7 MP stroke
gs 3658 3438 322 363 MR c np
24 W
3781 3511 PD
24 W
3731 3727 PD
24 W
3906 3647 PD
24 W
3756 3619 PD
24 W
3818 3687 PD
24 W
3844 3579 PD
gr

30 113 31 113 -103 -58 -103 -58 72 -55 73 -55 3263 1196 7 MP stroke
gs 3129 897 353 373 MR c np
24 W
3263 1196 PD
24 W
3408 1086 PD
24 W
3202 970 PD
24 W
3336 1141 PD
24 W
3305 1028 PD
24 W
3233 1083 PD
gr

-84 -71 -84 -71 75 -22 75 -22 9 93 9 93 3389 3546 7 MP stroke
gs 3316 3473 315 333 MR c np
24 W
3389 3546 PD
24 W
3407 3732 PD
24 W
3557 3688 PD
24 W
3398 3639 PD
24 W
3482 3710 PD
24 W
3473 3617 PD
gr

-27 84 -27 85 -62 -89 -63 -88 90 4 89 4 1886 1484 7 MP stroke
gs 1813 1242 326 324 MR c np
24 W
1886 1484 PD
24 W
2065 1492 PD
24 W
1940 1315 PD
24 W
1975 1488 PD
24 W
2002 1404 PD
24 W
1913 1400 PD
gr

-98 -6 -98 -5 35 -83 36 -83 63 88 62 89 1940 1315 7 MP stroke
gs 1867 1242 343 324 MR c np
24 W
1940 1315 PD
24 W
2065 1492 PD
24 W
2136 1326 PD
24 W
2002 1404 PD
24 W
2101 1409 PD
24 W
2038 1321 PD
gr

103 36 102 37 -50 64 -51 65 -52 -101 -52 -101 4129 4142 7 MP stroke
gs 3851 3867 352 349 MR c np
24 W
4129 4142 PD
24 W
4025 3940 PD
24 W
3924 4069 PD
24 W
4077 4041 PD
24 W
3974 4005 PD
24 W
4026 4106 PD
gr

-116 54 -117 54 13 -112 14 -112 103 58 103 58 3202 970 7 MP stroke
gs 3129 789 380 371 MR c np
24 W
3202 970 PD
24 W
3408 1086 PD
24 W
3435 862 PD
24 W
3305 1028 PD
24 W
3422 974 PD
24 W
3318 916 PD
gr

-119 -15 -119 -14 63 -62 63 -61 56 76 56 76 3151 3517 7 MP stroke
gs 3078 3444 385 299 MR c np
24 W
3151 3517 PD
24 W
3263 3669 PD
24 W
3389 3546 PD
24 W
3207 3593 PD
24 W
3326 3608 PD
24 W
3270 3532 PD
gr

43 -118 43 -118 44 97 44 98 -87 20 -87 21 5221 2644 7 MP stroke
gs 4974 2571 321 383 MR c np
24 W
5221 2644 PD
24 W
5047 2685 PD
24 W
5135 2880 PD
24 W
5134 2665 PD
24 W
5091 2783 PD
24 W
5178 2762 PD
gr

25 -96 25 -96 73 55 74 54 -99 42 -98 41 5092 2302 7 MP stroke
gs 4822 2229 344 339 MR c np
24 W
5092 2302 PD
24 W
4895 2385 PD
24 W
5042 2494 PD
24 W
4994 2343 PD
24 W
4969 2439 PD
24 W
5067 2398 PD
gr

66 -54 66 -53 9 114 8 115 -74 -61 -75 -61 3880 3849 7 MP stroke
gs 3658 3654 296 376 MR c np
24 W
3880 3849 PD
24 W
3731 3727 PD
24 W
3748 3956 PD
24 W
3805 3788 PD
24 W
3739 3842 PD
24 W
3814 3903 PD
gr

-122 32 -123 31 37 -83 37 -83 85 52 86 51 4731 3956 7 MP stroke
gs 4658 3820 392 313 MR c np
24 W
4731 3956 PD
24 W
4902 4059 PD
24 W
4976 3893 PD
24 W
4817 4007 PD
24 W
4939 3976 PD
24 W
4853 3924 PD
gr

25 -112 24 -112 57 75 58 76 -82 36 -82 37 2185 1102 7 MP stroke
gs 1948 1029 311 371 MR c np
24 W
2185 1102 PD
24 W
2021 1175 PD
24 W
2136 1326 PD
24 W
2103 1139 PD
24 W
2079 1251 PD
24 W
2160 1214 PD
gr

67 74 66 74 -108 4 -108 5 41 -78 42 -79 2559 2347 7 MP stroke
gs 2353 2117 363 304 MR c np
24 W
2559 2347 PD
24 W
2642 2190 PD
24 W
2426 2199 PD
24 W
2601 2268 PD
24 W
2534 2195 PD
24 W
2492 2273 PD
gr

-65 72 -66 72 -43 -67 -42 -68 108 -5 108 -4 2426 2199 7 MP stroke
gs 2353 1982 363 291 MR c np
24 W
2426 2199 PD
24 W
2642 2190 PD
24 W
2557 2055 PD
24 W
2534 2195 PD
24 W
2600 2122 PD
24 W
2491 2127 PD
gr

115 29 115 28 -90 55 -91 55 -25 -83 -24 -84 2557 2055 7 MP stroke
gs 2254 1815 377 314 MR c np
24 W
2557 2055 PD
24 W
2508 1888 PD
24 W
2327 1998 PD
24 W
2533 1971 PD
24 W
2417 1943 PD
24 W
2442 2026 PD
gr

-33 102 -32 102 -58 -47 -58 -47 91 -55 90 -55 2327 1998 7 MP stroke
gs 2254 1721 328 351 MR c np
24 W
2327 1998 PD
24 W
2508 1888 PD
24 W
2392 1794 PD
24 W
2417 1943 PD
24 W
2450 1841 PD
24 W
2360 1896 PD
gr

-108 -63 -109 -62 88 -26 87 -26 21 88 21 89 2934 3392 7 MP stroke
gs 2861 3319 364 324 MR c np
24 W
2934 3392 PD
24 W
2976 3569 PD
24 W
3151 3517 PD
24 W
2955 3481 PD
24 W
3063 3543 PD
24 W
3042 3455 PD
gr

18 -89 18 -89 52 101 52 101 -70 -12 -70 -12 4165 3964 7 MP stroke
gs 3952 3867 287 349 MR c np
24 W
4165 3964 PD
24 W
4025 3940 PD
24 W
4129 4142 PD
24 W
4095 3952 PD
24 W
4077 4041 PD
24 W
4147 4053 PD
gr

122 15 121 14 -57 63 -57 64 -64 -78 -65 -78 3547 3124 7 MP stroke
gs 3231 2895 390 303 MR c np
24 W
3547 3124 PD
24 W
3418 2968 PD
24 W
3304 3095 PD
24 W
3482 3046 PD
24 W
3361 3032 PD
24 W
3425 3109 PD
gr

55 -106 55 -105 50 70 51 69 -105 36 -106 36 5464 1603 7 MP stroke
gs 5180 1530 358 358 MR c np
24 W
5464 1603 PD
24 W
5253 1675 PD
24 W
5354 1814 PD
24 W
5358 1639 PD
24 W
5304 1744 PD
24 W
5409 1709 PD
gr

111 54 111 53 -66 60 -66 60 -45 -113 -45 -114 4068 1243 7 MP stroke
gs 3773 943 369 374 MR c np
24 W
4068 1243 PD
24 W
3978 1016 PD
24 W
3846 1136 PD
24 W
4023 1129 PD
24 W
3912 1076 PD
24 W
3957 1189 PD
gr

64 -98 64 -99 24 84 25 83 -89 15 -88 15 2685 1858 7 MP stroke
gs 2435 1785 324 344 MR c np
24 W
2685 1858 PD
24 W
2508 1888 PD
24 W
2557 2055 PD
24 W
2597 1873 PD
24 W
2533 1971 PD
24 W
2621 1956 PD
gr

122 9 121 9 -68 54 -68 53 -53 -62 -54 -63 2934 3392 7 MP stroke
gs 2618 3194 390 272 MR c np
24 W
2934 3392 PD
24 W
2827 3267 PD
24 W
2691 3374 PD
24 W
2880 3329 PD
24 W
2759 3320 PD
24 W
2812 3383 PD
gr

-18 124 -18 124 -50 -70 -50 -71 68 -53 68 -54 2691 3374 7 MP stroke
gs 2618 3053 283 395 MR c np
24 W
2691 3374 PD
24 W
2827 3267 PD
24 W
2727 3126 PD
24 W
2759 3320 PD
24 W
2777 3196 PD
24 W
2709 3250 PD
gr

-75 -44 -76 -43 98 -41 99 -42 -23 85 -23 85 4941 2215 7 MP stroke
gs 4822 2142 344 317 MR c np
24 W
4941 2215 PD
24 W
4895 2385 PD
24 W
5092 2302 PD
24 W
4918 2300 PD
24 W
4994 2343 PD
24 W
5016 2259 PD
gr

51 -103 51 -103 45 114 45 113 -96 -11 -96 -10 4170 1037 7 MP stroke
gs 3905 943 339 374 MR c np
24 W
4170 1037 PD
24 W
3978 1016 PD
24 W
4068 1243 PD
24 W
4074 1027 PD
24 W
4023 1129 PD
24 W
4119 1140 PD
gr

70 101 71 102 -95 -4 -95 -4 24 -97 25 -98 4727 1048 7 MP stroke
gs 4513 772 337 350 MR c np
24 W
4727 1048 PD
24 W
4776 853 PD
24 W
4586 845 PD
24 W
4752 950 PD
24 W
4681 849 PD
24 W
4657 947 PD
gr

105 52 106 52 -81 52 -81 51 -25 -103 -24 -104 3443 1852 7 MP stroke
gs 3159 1572 358 354 MR c np
24 W
3443 1852 PD
24 W
3394 1645 PD
24 W
3232 1748 PD
24 W
3419 1748 PD
24 W
3313 1696 PD
24 W
3338 1800 PD
gr

51 -67 51 -67 52 51 53 50 -104 17 -103 16 3196 2762 7 MP stroke
gs 2916 2689 354 281 MR c np
24 W
3196 2762 PD
24 W
2989 2795 PD
24 W
3094 2896 PD
24 W
3093 2778 PD
24 W
3042 2845 PD
24 W
3145 2829 PD
gr

-121 -14 -122 -15 80 -53 80 -53 42 67 41 68 3304 3095 7 MP stroke
gs 3231 3022 390 282 MR c np
24 W
3304 3095 PD
24 W
3387 3230 PD
24 W
3547 3124 PD
24 W
3345 3163 PD
24 W
3467 3177 PD
24 W
3425 3109 PD
gr

-67 -108 -68 -109 87 10 86 11 -19 98 -19 98 2434 617 7 MP stroke
gs 2323 544 320 364 MR c np
24 W
2434 617 PD
24 W
2396 813 PD
24 W
2569 834 PD
24 W
2415 715 PD
24 W
2482 824 PD
24 W
2501 725 PD
gr

-109 -68 -108 -67 98 -19 99 -18 10 86 10 86 5244 3509 7 MP stroke
gs 5171 3436 364 319 MR c np
24 W
5244 3509 PD
24 W
5264 3681 PD
24 W
5461 3644 PD
24 W
5254 3595 PD
24 W
5363 3663 PD
24 W
5353 3577 PD
gr

103 -42 103 -42 -13 101 -13 101 -90 -59 -90 -59 4086 3765 7 MP stroke
gs 3807 3574 353 349 MR c np
24 W
4086 3765 PD
24 W
3906 3647 PD
24 W
3880 3849 PD
24 W
3996 3706 PD
24 W
3893 3748 PD
24 W
3983 3807 PD
gr

9 -110 10 -111 54 63 53 62 -63 48 -63 48 2953 3171 7 MP stroke
gs 2754 3098 273 368 MR c np
24 W
2953 3171 PD
24 W
2827 3267 PD
24 W
2934 3392 PD
24 W
2890 3219 PD
24 W
2880 3329 PD
24 W
2944 3281 PD
gr

-113 -22 -113 -23 63 -48 63 -48 50 71 50 70 2727 3126 7 MP stroke
gs 2654 3053 373 288 MR c np
24 W
2727 3126 PD
24 W
2827 3267 PD
24 W
2953 3171 PD
24 W
2777 3196 PD
24 W
2890 3219 PD
24 W
2840 3148 PD
gr

21 -112 22 -113 58 60 59 59 -80 53 -80 53 3547 3124 7 MP stroke
gs 3314 3051 307 372 MR c np
24 W
3547 3124 PD
24 W
3387 3230 PD
24 W
3504 3349 PD
24 W
3467 3177 PD
24 W
3446 3289 PD
24 W
3526 3236 PD
gr

-99 57 -99 56 19 -98 19 -98 80 41 80 42 2236 730 7 MP stroke
gs 2163 544 345 343 MR c np
24 W
2236 730 PD
24 W
2396 813 PD
24 W
2434 617 PD
24 W
2316 772 PD
24 W
2415 715 PD
24 W
2335 673 PD
gr

56 -99 57 -98 42 80 42 80 -99 18 -98 19 5461 3644 7 MP stroke
gs 5191 3571 344 344 MR c np
24 W
5461 3644 PD
24 W
5264 3681 PD
24 W
5348 3841 PD
24 W
5363 3663 PD
24 W
5306 3761 PD
24 W
5405 3743 PD
gr

81 -85 80 -85 24 104 25 103 -105 -19 -105 -18 3604 1682 7 MP stroke
gs 3321 1572 357 354 MR c np
24 W
3604 1682 PD
24 W
3394 1645 PD
24 W
3443 1852 PD
24 W
3499 1664 PD
24 W
3419 1748 PD
24 W
3523 1767 PD
gr

-10 -113 -10 -112 90 59 90 59 -80 53 -80 54 4066 3540 7 MP stroke
gs 3833 3467 327 372 MR c np
24 W
4066 3540 PD
24 W
3906 3647 PD
24 W
4086 3765 PD
24 W
3986 3594 PD
24 W
3996 3706 PD
24 W
4076 3653 PD
gr

-88 -71 -88 -71 99 -31 100 -31 -12 102 -11 102 4448 3375 7 MP stroke
gs 4352 3302 346 351 MR c np
24 W
4448 3375 PD
24 W
4425 3579 PD
24 W
4624 3517 PD
24 W
4437 3477 PD
24 W
4525 3548 PD
24 W
4536 3446 PD
gr

112 11 111 10 -64 52 -64 52 -47 -63 -48 -62 2908 1879 7 MP stroke
gs 2612 1681 370 272 MR c np
24 W
2908 1879 PD
24 W
2813 1754 PD
24 W
2685 1858 PD
24 W
2860 1817 PD
24 W
2749 1806 PD
24 W
2796 1868 PD
gr

-12 116 -11 116 -52 -64 -53 -64 64 -52 64 -52 2685 1858 7 MP stroke
gs 2612 1553 275 379 MR c np
24 W
2685 1858 PD
24 W
2813 1754 PD
24 W
2708 1626 PD
24 W
2749 1806 PD
24 W
2760 1690 PD
24 W
2697 1742 PD
gr

104 43 103 43 -67 61 -66 61 -37 -104 -37 -104 2009 2156 7 MP stroke
gs 1729 1875 354 355 MR c np
24 W
2009 2156 PD
24 W
1935 1948 PD
24 W
1802 2070 PD
24 W
1972 2052 PD
24 W
1869 2009 PD
24 W
1905 2113 PD
gr

0 203 -82 -29 -82 -29 82 -73 82 -72 1463 2254 6 MP stroke
gr

gs 1390 1978 311 350 MR c np
24 W
1463 2254 PD
24 W
1627 2109 PD
24 W
1463 2051 PD
24 W
1545 2182 PD
24 W
1545 2080 PD
24 W
1463 2153 PD
gr

gs 1463 388 4228 4228 MR c np
42 104 42 103 -102 -37 -103 -36 60 -67 61 -67 4008 4276 7 MP stroke
gs 3851 3996 352 354 MR c np
24 W
4008 4276 PD
24 W
4129 4142 PD
24 W
3924 4069 PD
24 W
4069 4209 PD
24 W
4026 4106 PD
24 W
3966 4172 PD
gr

102 0 101 0 -72 82 -73 82 -29 -82 -29 -82 4027 4615 7 MP stroke
gr

gs 3751 4378 350 311 MR c np
24 W
4027 4615 PD
24 W
3969 4451 PD
24 W
3824 4615 PD
24 W
3998 4533 PD
24 W
3896 4533 PD
24 W
3925 4615 PD
gr

gs 1463 388 4228 4228 MR c np
-104 4 -104 5 49 -83 49 -84 55 79 55 79 1797 3846 7 MP stroke
gs 1724 3764 355 314 MR c np
24 W
1797 3846 PD
24 W
1907 4004 PD
24 W
2005 3837 PD
24 W
1852 3925 PD
24 W
1956 3920 PD
24 W
1901 3842 PD
gr

-43 118 -43 118 -45 -82 -44 -82 87 -36 88 -36 5135 2880 7 MP stroke
gs 5062 2571 322 383 MR c np
24 W
5135 2880 PD
24 W
5310 2808 PD
24 W
5221 2644 PD
24 W
5223 2844 PD
24 W
5266 2726 PD
24 W
5178 2762 PD
gr

-95 -22 -95 -21 61 -76 62 -76 34 98 33 97 5158 3798 7 MP stroke
gs 5085 3725 337 342 MR c np
24 W
5158 3798 PD
24 W
5225 3993 PD
24 W
5348 3841 PD
24 W
5191 3895 PD
24 W
5287 3917 PD
24 W
5253 3820 PD
gr

-115 34 -115 33 34 -90 34 -90 81 56 81 57 1463 1020 7 MP stroke
gr

gs 1390 880 377 327 MR c np
24 W
1463 1020 PD
24 W
1625 1133 PD
24 W
1693 953 PD
24 W
1544 1077 PD
24 W
1659 1043 PD
24 W
1578 986 PD
gr

gs 1463 388 4228 4228 MR c np
30 -111 31 -111 37 63 37 63 -68 48 -67 48 2687 4393 7 MP stroke
gr

gs 2479 4320 282 369 MR c np
24 W
2687 4393 PD
24 W
2552 4489 PD
24 W
2626 4615 PD
24 W
2620 4441 PD
24 W
2589 4552 PD
24 W
2657 4504 PD
gr

gs 1463 388 4228 4228 MR c np
86 -56 85 -57 17 98 16 98 -102 -41 -102 -42 2286 2985 7 MP stroke
gs 2009 2829 351 343 MR c np
24 W
2286 2985 PD
24 W
2082 2902 PD
24 W
2115 3098 PD
24 W
2184 2943 PD
24 W
2098 3000 PD
24 W
2200 3041 PD
gr

-70 -97 -69 -96 90 20 90 21 -21 76 -20 76 2083 4080 7 MP stroke
gs 1969 4007 327 340 MR c np
24 W
2083 4080 PD
24 W
2042 4232 PD
24 W
2222 4273 PD
24 W
2063 4156 PD
24 W
2132 4253 PD
24 W
2153 4177 PD
gr

-63 -101 -63 -102 97 11 97 12 -34 90 -34 90 1693 953 7 MP stroke
gs 1552 880 341 350 MR c np
24 W
1693 953 PD
24 W
1625 1133 PD
24 W
1819 1156 PD
24 W
1659 1043 PD
24 W
1722 1145 PD
24 W
1756 1054 PD
gr

-22 -95 -22 -95 97 33 98 34 -76 62 -75 61 2236 730 7 MP stroke
gs 2012 657 342 337 MR c np
24 W
2236 730 PD
24 W
2085 853 PD
24 W
2280 920 PD
24 W
2161 791 PD
24 W
2183 887 PD
24 W
2258 825 PD
gr

-102 -63 -101 -63 90 -34 90 -34 11 97 12 97 4922 4259 7 MP stroke
gs 4849 4186 350 341 MR c np
24 W
4922 4259 PD
24 W
4945 4453 PD
24 W
5125 4385 PD
24 W
4934 4356 PD
24 W
5035 4419 PD
24 W
5024 4322 PD
gr

33 -115 34 -115 56 81 57 81 -90 34 -90 34 5125 4385 7 MP stroke
gr

gs 4872 4312 327 377 MR c np
24 W
5125 4385 PD
24 W
4945 4453 PD
24 W
5058 4615 PD
24 W
5035 4419 PD
24 W
5002 4534 PD
24 W
5092 4500 PD
gr

gs 1463 388 4228 4228 MR c np
-120 -12 -119 -12 67 -48 68 -48 52 60 52 60 2448 4369 7 MP stroke
gs 2375 4296 386 267 MR c np
24 W
2448 4369 PD
24 W
2552 4489 PD
24 W
2687 4393 PD
24 W
2500 4429 PD
24 W
2620 4441 PD
24 W
2568 4381 PD
gr

-105 44 -106 44 38 -82 37 -81 68 37 68 38 3139 729 7 MP stroke
gs 3066 568 358 310 MR c np
24 W
3139 729 PD
24 W
3275 804 PD
24 W
3350 641 PD
24 W
3207 767 PD
24 W
3312 723 PD
24 W
3244 685 PD
gr

-112 31 -112 31 49 -68 49 -69 63 38 63 37 1463 3452 7 MP stroke
gr

gs 1390 3317 371 284 MR c np
24 W
1463 3452 PD
24 W
1589 3527 PD
24 W
1687 3390 PD
24 W
1526 3489 PD
24 W
1638 3458 PD
24 W
1575 3421 PD
gr

gs 1463 388 4228 4228 MR c np
-37 -104 -37 -104 102 42 102 41 -65 63 -65 62 2212 2777 7 MP stroke
gs 2009 2704 351 355 MR c np
24 W
2212 2777 PD
24 W
2082 2902 PD
24 W
2286 2985 PD
24 W
2147 2839 PD
24 W
2184 2943 PD
24 W
2249 2881 PD
gr

-42 -111 -43 -110 80 29 80 29 -37 81 -38 82 3350 641 7 MP stroke
gs 3202 568 307 368 MR c np
24 W
3350 641 PD
24 W
3275 804 PD
24 W
3435 862 PD
24 W
3312 723 PD
24 W
3355 833 PD
24 W
3392 752 PD
gr

-117 -12 -118 -12 75 -55 75 -56 42 68 43 67 2557 2055 7 MP stroke
gs 2484 1982 382 282 MR c np
24 W
2557 2055 PD
24 W
2642 2190 PD
24 W
2792 2079 PD
24 W
2600 2122 PD
24 W
2717 2134 PD
24 W
2674 2067 PD
gr

-55 -100 -55 -100 96 20 96 20 -41 80 -41 80 5348 1161 7 MP stroke
gs 5193 1088 339 347 MR c np
24 W
5348 1161 PD
24 W
5266 1321 PD
24 W
5458 1361 PD
24 W
5307 1241 PD
24 W
5362 1341 PD
24 W
5403 1261 PD
gr

-12 -120 -12 -119 61 51 61 51 -49 69 -49 68 1687 3390 7 MP stroke
gs 1516 3317 269 386 MR c np
24 W
1687 3390 PD
24 W
1589 3527 PD
24 W
1711 3629 PD
24 W
1638 3458 PD
24 W
1650 3578 PD
24 W
1699 3510 PD
gr

108 -67 109 -68 -13 87 -12 88 -96 -20 -96 -20 5458 1361 7 MP stroke
gs 5168 1248 364 322 MR c np
24 W
5458 1361 PD
24 W
5266 1321 PD
24 W
5241 1496 PD
24 W
5362 1341 PD
24 W
5254 1409 PD
24 W
5350 1428 PD
gr

-12 122 -13 122 -61 -80 -62 -79 74 -43 74 -42 5041 1907 7 MP stroke
gs 4968 1590 295 391 MR c np
24 W
5041 1907 PD
24 W
5189 1822 PD
24 W
5066 1663 PD
24 W
5115 1865 PD
24 W
5127 1743 PD
24 W
5053 1785 PD
gr

75 63 74 62 -106 7 -107 8 32 -70 32 -70 2912 3709 7 MP stroke
gs 2690 3496 360 287 MR c np
24 W
2912 3709 PD
24 W
2976 3569 PD
24 W
2763 3584 PD
24 W
2944 3639 PD
24 W
2869 3577 PD
24 W
2837 3646 PD
gr

7 -111 8 -111 53 64 53 64 -60 47 -61 47 4422 2577 7 MP stroke
gs 4228 2504 268 369 MR c np
24 W
4422 2577 PD
24 W
4301 2671 PD
24 W
4407 2799 PD
24 W
4361 2624 PD
24 W
4354 2735 PD
24 W
4415 2688 PD
gr

-83 -40 -83 -40 52 -62 52 -63 31 103 31 102 2371 2679 7 MP stroke
gs 2298 2606 313 352 MR c np
24 W
2371 2679 PD
24 W
2433 2884 PD
24 W
2537 2759 PD
24 W
2402 2781 PD
24 W
2485 2821 PD
24 W
2454 2719 PD
gr

87 89 87 89 -88 10 -88 11 1 -99 1 -100 2743 1012 7 MP stroke
gs 2496 740 323 346 MR c np
24 W
2743 1012 PD
24 W
2745 813 PD
24 W
2569 834 PD
24 W
2744 912 PD
24 W
2657 824 PD
24 W
2656 923 PD
gr

89 87 89 88 -100 0 -99 1 10 -88 11 -88 5244 3509 7 MP stroke
gs 4993 3260 346 323 MR c np
24 W
5244 3509 PD
24 W
5265 3333 PD
24 W
5066 3334 PD
24 W
5255 3421 PD
24 W
5166 3334 PD
24 W
5155 3422 PD
gr

65 -98 64 -98 29 82 29 82 -93 16 -94 16 4156 4419 7 MP stroke
gr

gs 3896 4346 334 343 MR c np
24 W
4156 4419 PD
24 W
3969 4451 PD
24 W
4027 4615 PD
24 W
4062 4435 PD
24 W
3998 4533 PD
24 W
4091 4517 PD
gr

gs 1463 388 4228 4228 MR c np
-14 128 -14 129 -68 -67 -68 -67 82 -62 82 -61 4598 2943 7 MP stroke
gs 4525 2613 311 404 MR c np
24 W
4598 2943 PD
24 W
4762 2820 PD
24 W
4626 2686 PD
24 W
4680 2882 PD
24 W
4694 2753 PD
24 W
4612 2815 PD
gr

106 -44 105 -44 -26 88 -27 87 -79 -44 -79 -43 3350 641 7 MP stroke
gs 3066 481 358 322 MR c np
24 W
3350 641 PD
24 W
3192 554 PD
24 W
3139 729 PD
24 W
3271 598 PD
24 W
3165 641 PD
24 W
3244 685 PD
gr

59 104 60 104 -92 -13 -92 -12 33 -92 32 -91 5467 4049 7 MP stroke
gs 5275 3768 331 355 MR c np
24 W
5467 4049 PD
24 W
5532 3866 PD
24 W
5348 3841 PD
24 W
5499 3958 PD
24 W
5440 3854 PD
24 W
5408 3945 PD
gr

-112 -33 -112 -33 67 -49 68 -49 44 82 45 82 5221 2644 7 MP stroke
gs 5148 2571 371 311 MR c np
24 W
5221 2644 PD
24 W
5310 2808 PD
24 W
5445 2710 PD
24 W
5266 2726 PD
24 W
5378 2759 PD
24 W
5333 2677 PD
gr

80 -40 80 -39 17 75 17 76 -97 -36 -97 -36 5504 2880 7 MP stroke
gs 5237 2735 341 298 MR c np
24 W
5504 2880 PD
24 W
5310 2808 PD
24 W
5344 2959 PD
24 W
5407 2844 PD
24 W
5327 2884 PD
24 W
5424 2920 PD
gr

-30 -85 -29 -85 97 36 97 36 -68 49 -67 49 5445 2710 7 MP stroke
gs 5237 2637 341 317 MR c np
24 W
5445 2710 PD
24 W
5310 2808 PD
24 W
5504 2880 PD
24 W
5378 2759 PD
24 W
5407 2844 PD
24 W
5475 2795 PD
gr

104 60 104 59 -92 32 -92 33 -12 -92 -12 -92 2236 730 7 MP stroke
gs 1955 473 355 331 MR c np
24 W
2236 730 PD
24 W
2212 546 PD
24 W
2028 611 PD
24 W
2224 638 PD
24 W
2120 579 PD
24 W
2132 670 PD
gr

124 31 125 31 -87 52 -88 52 -37 -83 -37 -83 4976 1110 7 MP stroke
gs 4654 871 396 313 MR c np
24 W
4976 1110 PD
24 W
4902 944 PD
24 W
4727 1048 PD
24 W
4939 1027 PD
24 W
4814 996 PD
24 W
4852 1079 PD
gr

-8 126 -7 127 -68 -70 -68 -69 76 -57 75 -57 3350 641 7 MP stroke
gr

gs 3277 315 298 400 MR c np
24 W
3350 641 PD
24 W
3501 527 PD
24 W
3365 388 PD
24 W
3425 584 PD
24 W
3433 458 PD
24 W
3358 515 PD
gr

gs 1463 388 4228 4228 MR c np
-71 -89 -71 -89 101 -16 100 -15 -29 104 -30 105 2566 1448 7 MP stroke
gs 2434 1375 348 356 MR c np
24 W
2566 1448 PD
24 W
2507 1657 PD
24 W
2708 1626 PD
24 W
2536 1553 PD
24 W
2607 1642 PD
24 W
2637 1537 PD
gr

123 2 122 1 -54 67 -53 68 -69 -69 -69 -69 5690 2713 7 MP stroke
gr

gs 5372 2502 392 285 MR c np
24 W
5690 2713 PD
24 W
5552 2575 PD
24 W
5445 2710 PD
24 W
5621 2644 PD
24 W
5499 2643 PD
24 W
5567 2711 PD
gr

gs 1463 388 4228 4228 MR c np
98 -61 98 -61 18 76 19 77 -117 -16 -116 -15 5010 3627 7 MP stroke
gs 4704 3523 380 300 MR c np
24 W
5010 3627 PD
24 W
4777 3596 PD
24 W
4814 3749 PD
24 W
4894 3612 PD
24 W
4796 3673 PD
24 W
4912 3688 PD
gr

-56 86 -56 86 -50 -83 -50 -84 106 -3 106 -2 2865 1217 7 MP stroke
gs 2792 972 359 319 MR c np
24 W
2865 1217 PD
24 W
3077 1212 PD
24 W
2977 1045 PD
24 W
2971 1215 PD
24 W
3027 1128 PD
24 W
2921 1131 PD
gr

-4 123 -3 122 -52 -70 -53 -71 56 -52 56 -52 4189 2775 7 MP stroke
gs 4116 2457 259 392 MR c np
24 W
4189 2775 PD
24 W
4301 2671 PD
24 W
4196 2530 PD
24 W
4245 2723 PD
24 W
4248 2600 PD
24 W
4193 2652 PD
gr

-98 64 -98 64 16 -93 16 -93 82 29 82 29 1463 2051 7 MP stroke
gr

gs 1390 1850 343 333 MR c np
24 W
1463 2051 PD
24 W
1627 2109 PD
24 W
1659 1923 PD
24 W
1545 2080 PD
24 W
1643 2016 PD
24 W
1561 1987 PD
gr

gs 1463 388 4228 4228 MR c np
-106 0 -105 0 37 -101 37 -101 69 101 68 101 2520 388 7 MP stroke
gr

gs 2447 315 358 349 MR c np
24 W
2520 388 PD
24 W
2657 590 PD
24 W
2731 388 PD
24 W
2588 489 PD
24 W
2694 489 PD
24 W
2626 388 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 101 69 101 68 -101 37 -101 37 5690 3347 6 MP stroke
gr

gs 5415 3274 349 358 MR c np
24 W
5690 3347 PD
24 W
5488 3421 PD
24 W
5690 3558 PD
24 W
5589 3384 PD
24 W
5589 3489 PD
24 W
5690 3452 PD
gr

gs 1463 388 4228 4228 MR c np
-61 97 -61 98 -15 -116 -14 -116 75 19 76 18 2328 1262 7 MP stroke
gs 2255 994 298 379 MR c np
24 W
2328 1262 PD
24 W
2479 1299 PD
24 W
2450 1067 PD
24 W
2404 1280 PD
24 W
2465 1183 PD
24 W
2389 1165 PD
gr

112 -34 111 -34 -32 91 -33 92 -79 -57 -79 -58 5690 3981 7 MP stroke
gr

gs 5394 3793 370 330 MR c np
24 W
5690 3981 PD
24 W
5532 3866 PD
24 W
5467 4049 PD
24 W
5611 3923 PD
24 W
5499 3958 PD
24 W
5578 4015 PD
gr

gs 1463 388 4228 4228 MR c np
-35 111 -34 112 -58 -79 -57 -79 92 -33 92 -32 2028 611 7 MP stroke
gr

gs 1955 315 331 370 MR c np
24 W
2028 611 PD
24 W
2212 546 PD
24 W
2097 388 PD
24 W
2120 579 PD
24 W
2155 467 PD
24 W
2063 500 PD
gr

gs 1463 388 4228 4228 MR c np
73 -73 74 -73 10 100 10 100 -84 -27 -83 -27 5069 4113 7 MP stroke
gs 4829 3986 314 347 MR c np
24 W
5069 4113 PD
24 W
4902 4059 PD
24 W
4922 4259 PD
24 W
4986 4086 PD
24 W
4912 4159 PD
24 W
4996 4186 PD
gr

-51 104 -51 105 -37 -75 -36 -76 87 -29 88 -29 2814 2853 7 MP stroke
gs 2741 2571 322 356 MR c np
24 W
2814 2853 PD
24 W
2989 2795 PD
24 W
2916 2644 PD
24 W
2902 2824 PD
24 W
2953 2719 PD
24 W
2865 2749 PD
gr

91 -4 90 -5 -22 82 -22 82 -68 -78 -69 -77 2739 4158 7 MP stroke
gs 2485 3930 328 311 MR c np
24 W
2739 4158 PD
24 W
2602 4003 PD
24 W
2558 4167 PD
24 W
2670 4081 PD
24 W
2580 4085 PD
24 W
2648 4162 PD
gr

-113 -23 -113 -24 61 -47 60 -47 53 71 52 70 4196 2530 7 MP stroke
gs 4123 2457 373 288 MR c np
24 W
4196 2530 PD
24 W
4301 2671 PD
24 W
4422 2577 PD
24 W
4248 2600 PD
24 W
4361 2624 PD
24 W
4309 2553 PD
gr

23 -115 22 -114 48 62 47 63 -70 52 -70 52 2953 1650 7 MP stroke
gs 2740 1577 287 376 MR c np
24 W
2953 1650 PD
24 W
2813 1754 PD
24 W
2908 1879 PD
24 W
2883 1702 PD
24 W
2860 1817 PD
24 W
2930 1765 PD
gr

-123 -12 -122 -12 70 -52 70 -52 53 64 52 64 2708 1626 7 MP stroke
gs 2635 1553 392 275 MR c np
24 W
2708 1626 PD
24 W
2813 1754 PD
24 W
2953 1650 PD
24 W
2760 1690 PD
24 W
2883 1702 PD
24 W
2831 1638 PD
gr

-93 -87 -93 -88 94 -4 94 -3 -1 91 -1 91 2321 1482 7 MP stroke
gs 2246 1409 335 329 MR c np
24 W
2321 1482 PD
24 W
2319 1664 PD
24 W
2507 1657 PD
24 W
2320 1573 PD
24 W
2413 1661 PD
24 W
2414 1569 PD
gr

9 -91 8 -90 69 77 68 78 -77 13 -77 13 2756 3977 7 MP stroke
gs 2529 3904 301 328 MR c np
24 W
2756 3977 PD
24 W
2602 4003 PD
24 W
2739 4158 PD
24 W
2679 3990 PD
24 W
2670 4081 PD
24 W
2747 4068 PD
gr

-73 74 -73 73 -28 -83 -28 -83 101 10 101 9 1819 1156 7 MP stroke
gs 1746 936 349 313 MR c np
24 W
1819 1156 PD
24 W
2021 1175 PD
24 W
1965 1009 PD
24 W
1920 1165 PD
24 W
1993 1092 PD
24 W
1892 1082 PD
gr

94 -22 94 -21 -32 97 -33 97 -61 -75 -62 -76 5348 1161 7 MP stroke
gs 5087 937 335 341 MR c np
24 W
5348 1161 PD
24 W
5225 1010 PD
24 W
5160 1204 PD
24 W
5286 1085 PD
24 W
5192 1107 PD
24 W
5254 1183 PD
gr

102 -63 101 -63 -10 97 -10 97 -91 -34 -92 -34 5125 617 7 MP stroke
gs 4849 476 350 341 MR c np
24 W
5125 617 PD
24 W
4942 549 PD
24 W
4922 743 PD
24 W
5033 583 PD
24 W
4932 646 PD
24 W
5023 680 PD
gr

-34 -115 -35 -114 92 34 91 34 -57 80 -57 81 5056 388 7 MP stroke
gr

gs 4869 315 330 376 MR c np
24 W
5056 388 PD
24 W
4942 549 PD
24 W
5125 617 PD
24 W
4999 469 PD
24 W
5033 583 PD
24 W
5090 503 PD
gr

gs 1463 388 4228 4228 MR c np
-60 104 -59 104 -32 -92 -32 -92 91 -12 92 -12 5348 1161 7 MP stroke
gs 5275 880 330 355 MR c np
24 W
5348 1161 PD
24 W
5531 1137 PD
24 W
5467 953 PD
24 W
5440 1149 PD
24 W
5499 1045 PD
24 W
5408 1057 PD
gr

-111 -35 -112 -34 80 -58 79 -57 32 92 32 92 5467 953 7 MP stroke
gr

gs 5394 880 370 331 MR c np
24 W
5467 953 PD
24 W
5531 1137 PD
24 W
5690 1022 PD
24 W
5499 1045 PD
24 W
5610 1080 PD
24 W
5578 988 PD
gr

gs 1463 388 4228 4228 MR c np
-42 -96 -42 -96 92 -2 91 -2 -50 98 -49 98 4857 2023 7 MP stroke
gs 4685 1950 330 343 MR c np
24 W
4857 2023 PD
24 W
4758 2219 PD
24 W
4941 2215 PD
24 W
4808 2121 PD
24 W
4849 2217 PD
24 W
4899 2119 PD
gr

-96 -72 -95 -72 81 -9 80 -9 15 81 15 81 4407 2799 7 MP stroke
gs 4334 2726 338 309 MR c np
24 W
4407 2799 PD
24 W
4437 2961 PD
24 W
4598 2943 PD
24 W
4422 2880 PD
24 W
4517 2952 PD
24 W
4503 2871 PD
gr

-101 64 -102 63 20 -76 21 -76 81 13 81 12 1880 4207 7 MP stroke
gs 1807 4007 350 299 MR c np
24 W
1880 4207 PD
24 W
2042 4232 PD
24 W
2083 4080 PD
24 W
1961 4219 PD
24 W
2063 4156 PD
24 W
1981 4143 PD
gr

102 37 103 38 -59 60 -58 60 -44 -98 -44 -97 5135 2880 7 MP stroke
gs 4857 2612 352 342 MR c np
24 W
5135 2880 PD
24 W
5047 2685 PD
24 W
4930 2805 PD
24 W
5091 2783 PD
24 W
4989 2745 PD
24 W
5033 2843 PD
gr

109 12 109 12 -56 52 -56 52 -53 -64 -53 -64 4407 2799 7 MP stroke
gs 4116 2598 365 275 MR c np
24 W
4407 2799 PD
24 W
4301 2671 PD
24 W
4189 2775 PD
24 W
4354 2735 PD
24 W
4245 2723 PD
24 W
4298 2787 PD
gr

-96 -50 -96 -51 76 -40 75 -41 21 91 20 91 1923 2997 7 MP stroke
gs 1850 2924 339 329 MR c np
24 W
1923 2997 PD
24 W
1964 3179 PD
24 W
2115 3098 PD
24 W
1943 3088 PD
24 W
2039 3138 PD
24 W
2019 3047 PD
gr

-88 83 -87 84 -6 -89 -6 -90 94 6 93 6 5066 1663 7 MP stroke
gs 4993 1423 334 326 MR c np
24 W
5066 1663 PD
24 W
5253 1675 PD
24 W
5241 1496 PD
24 W
5159 1669 PD
24 W
5247 1585 PD
24 W
5154 1580 PD
gr

-14 92 -13 92 -76 -59 -76 -58 89 -33 90 -34 2537 2759 7 MP stroke
gs 2464 2502 326 331 MR c np
24 W
2537 2759 PD
24 W
2716 2692 PD
24 W
2564 2575 PD
24 W
2627 2725 PD
24 W
2640 2634 PD
24 W
2551 2667 PD
gr

89 49 90 50 -56 57 -57 58 -33 -107 -33 -107 4503 4412 7 MP stroke
gs 4251 4125 326 361 MR c np
24 W
4503 4412 PD
24 W
4437 4198 PD
24 W
4324 4313 PD
24 W
4470 4305 PD
24 W
4380 4256 PD
24 W
4414 4363 PD
gr

49 -67 48 -68 23 99 24 99 -72 -32 -72 -31 3407 3732 7 MP stroke
gs 3190 3596 291 345 MR c np
24 W
3407 3732 PD
24 W
3263 3669 PD
24 W
3310 3867 PD
24 W
3335 3701 PD
24 W
3287 3768 PD
24 W
3358 3799 PD
gr

50 89 50 90 -114 -29 -115 -29 64 -61 65 -60 1764 1754 7 MP stroke
gs 1591 1502 376 326 MR c np
24 W
1764 1754 PD
24 W
1893 1633 PD
24 W
1664 1575 PD
24 W
1829 1694 PD
24 W
1778 1604 PD
24 W
1714 1665 PD
gr

-54 -104 -53 -104 91 23 91 22 -38 82 -37 81 2974 3946 7 MP stroke
gs 2826 3873 329 355 MR c np
24 W
2974 3946 PD
24 W
2899 4109 PD
24 W
3081 4154 PD
24 W
2937 4027 PD
24 W
2990 4131 PD
24 W
3028 4050 PD
gr

109 -11 109 -12 -18 83 -18 82 -91 -71 -91 -71 3505 2299 7 MP stroke
gs 3214 2084 365 312 MR c np
24 W
3505 2299 PD
24 W
3323 2157 PD
24 W
3287 2322 PD
24 W
3414 2228 PD
24 W
3305 2239 PD
24 W
3396 2310 PD
gr

22 -107 23 -107 67 53 68 53 -90 54 -90 54 3551 3929 7 MP stroke
gs 3298 3856 327 361 MR c np
24 W
3551 3929 PD
24 W
3371 4037 PD
24 W
3506 4143 PD
24 W
3461 3983 PD
24 W
3439 4090 PD
24 W
3529 4036 PD
gr

52 -104 52 -105 49 86 49 87 -101 18 -101 18 4398 2056 7 MP stroke
gs 4123 1983 349 356 MR c np
24 W
4398 2056 PD
24 W
4196 2092 PD
24 W
4294 2265 PD
24 W
4297 2074 PD
24 W
4245 2179 PD
24 W
4346 2160 PD
gr

-105 21 -105 21 52 -89 52 -90 53 68 53 69 1934 2572 7 MP stroke
gs 1861 2457 357 326 MR c np
24 W
1934 2572 PD
24 W
2040 2709 PD
24 W
2144 2530 PD
24 W
1987 2641 PD
24 W
2092 2619 PD
24 W
2039 2551 PD
gr

-14 -112 -15 -113 91 71 91 71 -76 42 -77 41 3476 2074 7 MP stroke
gs 3250 2001 329 372 MR c np
24 W
3476 2074 PD
24 W
3323 2157 PD
24 W
3505 2299 PD
24 W
3399 2115 PD
24 W
3414 2228 PD
24 W
3490 2186 PD
gr

-84 -85 -84 -84 101 -18 101 -18 -17 102 -17 103 4230 1887 7 MP stroke
gs 4123 1814 349 352 MR c np
24 W
4230 1887 PD
24 W
4196 2092 PD
24 W
4398 2056 PD
24 W
4213 1990 PD
24 W
4297 2074 PD
24 W
4314 1972 PD
gr

-17 -112 -16 -112 77 49 76 49 -60 63 -60 63 4033 3316 7 MP stroke
gs 3840 3243 300 371 MR c np
24 W
4033 3316 PD
24 W
3913 3442 PD
24 W
4066 3540 PD
24 W
3973 3379 PD
24 W
3989 3491 PD
24 W
4050 3428 PD
gr

117 -54 116 -54 -36 83 -37 83 -80 -29 -80 -29 3435 862 7 MP stroke
gs 3129 731 380 313 MR c np
24 W
3435 862 PD
24 W
3275 804 PD
24 W
3202 970 PD
24 W
3355 833 PD
24 W
3238 887 PD
24 W
3318 916 PD
gr

-73 -73 -74 -73 84 -28 83 -27 -10 101 -10 100 4922 743 7 MP stroke
gs 4829 670 314 348 MR c np
24 W
4922 743 PD
24 W
4902 944 PD
24 W
5069 889 PD
24 W
4912 843 PD
24 W
4985 917 PD
24 W
4995 816 PD
gr

107 21 108 22 -72 55 -72 56 -36 -77 -35 -77 2539 3557 7 MP stroke
gs 2251 3330 362 301 MR c np
24 W
2539 3557 PD
24 W
2468 3403 PD
24 W
2324 3514 PD
24 W
2504 3480 PD
24 W
2396 3459 PD
24 W
2432 3536 PD
gr

-104 -53 -104 -53 93 -28 92 -28 12 81 11 81 2119 1892 7 MP stroke
gs 2046 1819 355 309 MR c np
24 W
2119 1892 PD
24 W
2142 2054 PD
24 W
2327 1998 PD
24 W
2130 1973 PD
24 W
2234 2026 PD
24 W
2223 1945 PD
gr

-16 -111 -17 -111 77 51 77 50 -60 61 -61 60 3443 1852 7 MP stroke
gs 3249 1779 301 369 MR c np
24 W
3443 1852 PD
24 W
3322 1973 PD
24 W
3476 2074 PD
24 W
3382 1912 PD
24 W
3399 2023 PD
24 W
3459 1963 PD
gr

-42 -103 -42 -104 70 30 70 30 -28 74 -28 73 3924 4069 7 MP stroke
gs 3795 3996 287 354 MR c np
24 W
3924 4069 PD
24 W
3868 4216 PD
24 W
4008 4276 PD
24 W
3896 4142 PD
24 W
3938 4246 PD
24 W
3966 4172 PD
gr

-103 -43 -104 -43 74 -27 73 -28 30 70 30 71 1802 2070 7 MP stroke
gs 1729 1997 354 288 MR c np
24 W
1802 2070 PD
24 W
1862 2211 PD
24 W
2009 2156 PD
24 W
1832 2141 PD
24 W
1935 2183 PD
24 W
1905 2113 PD
gr

-103 39 -104 40 28 -73 28 -74 76 34 75 34 3717 4148 7 MP stroke
gs 3644 3996 354 294 MR c np
24 W
3717 4148 PD
24 W
3868 4216 PD
24 W
3924 4069 PD
24 W
3792 4182 PD
24 W
3896 4142 PD
24 W
3820 4109 PD
gr

40 -103 39 -103 34 76 34 75 -73 28 -74 27 2009 2156 7 MP stroke
gs 1789 2083 294 353 MR c np
24 W
2009 2156 PD
24 W
1862 2211 PD
24 W
1930 2362 PD
24 W
1935 2183 PD
24 W
1896 2286 PD
24 W
1969 2259 PD
gr

98 -74 97 -74 1 105 0 105 -98 -31 -98 -31 4630 1479 7 MP stroke
gs 4361 1344 343 357 MR c np
24 W
4630 1479 PD
24 W
4434 1417 PD
24 W
4435 1627 PD
24 W
4532 1448 PD
24 W
4434 1522 PD
24 W
4532 1553 PD
gr

117 29 117 29 -82 61 -82 62 -35 -91 -35 -90 4832 3001 7 MP stroke
gs 4525 2747 381 328 MR c np
24 W
4832 3001 PD
24 W
4762 2820 PD
24 W
4598 2943 PD
24 W
4797 2911 PD
24 W
4680 2882 PD
24 W
4715 2972 PD
gr

96 51 96 50 -79 48 -80 47 -16 -98 -17 -98 2115 3098 7 MP stroke
gs 1850 2829 339 343 MR c np
24 W
2115 3098 PD
24 W
2082 2902 PD
24 W
1923 2997 PD
24 W
2098 3000 PD
24 W
2002 2949 PD
24 W
2019 3047 PD
gr

22 110 22 110 -72 -46 -73 -45 51 -65 50 -64 3924 4069 7 MP stroke
gs 3807 3776 292 367 MR c np
24 W
3924 4069 PD
24 W
4025 3940 PD
24 W
3880 3849 PD
24 W
3974 4005 PD
24 W
3952 3895 PD
24 W
3902 3959 PD
gr

53 104 54 104 -102 -23 -103 -22 49 -82 49 -81 3081 4154 7 MP stroke
gs 2901 3873 352 355 MR c np
24 W
3081 4154 PD
24 W
3179 3991 PD
24 W
2974 3946 PD
24 W
3130 4073 PD
24 W
3076 3969 PD
24 W
3028 4050 PD
gr

-102 2 -101 3 67 -84 67 -83 34 81 35 81 2223 2204 7 MP stroke
gs 2150 2126 350 314 MR c np
24 W
2223 2204 PD
24 W
2292 2366 PD
24 W
2426 2199 PD
24 W
2258 2285 PD
24 W
2359 2283 PD
24 W
2325 2202 PD
gr

107 24 107 24 -66 51 -67 51 -41 -75 -40 -75 2223 2204 7 MP stroke
gs 1936 1981 361 297 MR c np
24 W
2223 2204 PD
24 W
2142 2054 PD
24 W
2009 2156 PD
24 W
2183 2129 PD
24 W
2075 2105 PD
24 W
2116 2180 PD
gr

108 47 109 47 -78 60 -78 60 -30 -107 -31 -107 5286 4207 7 MP stroke
gs 4996 3920 364 361 MR c np
24 W
5286 4207 PD
24 W
5225 3993 PD
24 W
5069 4113 PD
24 W
5255 4100 PD
24 W
5147 4053 PD
24 W
5178 4160 PD
gr

47 109 47 108 -107 -31 -107 -30 60 -78 60 -78 1965 1009 7 MP stroke
gs 1798 719 361 364 MR c np
24 W
1965 1009 PD
24 W
2085 853 PD
24 W
1871 792 PD
24 W
2025 931 PD
24 W
1978 823 PD
24 W
1918 900 PD
gr

49 -98 49 -98 35 90 35 91 -84 7 -84 8 4930 2805 7 MP stroke
gs 4689 2732 315 343 MR c np
24 W
4930 2805 PD
24 W
4762 2820 PD
24 W
4832 3001 PD
24 W
4846 2813 PD
24 W
4797 2911 PD
24 W
4881 2903 PD
gr

101 0 101 0 -32 71 -32 70 -69 -70 -69 -71 3824 4615 7 MP stroke
gr

gs 3549 4401 349 288 MR c np
24 W
3824 4615 PD
24 W
3686 4474 PD
24 W
3622 4615 PD
24 W
3755 4544 PD
24 W
3654 4544 PD
24 W
3723 4615 PD
gr

gs 1463 388 4228 4228 MR c np
52 -103 52 -103 40 75 41 75 -92 28 -93 28 2327 1998 7 MP stroke
gs 2069 1925 332 353 MR c np
24 W
2327 1998 PD
24 W
2142 2054 PD
24 W
2223 2204 PD
24 W
2234 2026 PD
24 W
2183 2129 PD
24 W
2275 2101 PD
gr

0 202 -71 -69 -70 -69 70 -32 71 -32 1463 2456 6 MP stroke
gr

gs 1390 2181 288 349 MR c np
24 W
1463 2456 PD
24 W
1604 2392 PD
24 W
1463 2254 PD
24 W
1534 2424 PD
24 W
1534 2323 PD
24 W
1463 2355 PD
gr

gs 1463 388 4228 4228 MR c np
122 23 122 22 -66 66 -65 65 -57 -88 -56 -88 4005 1490 7 MP stroke
gs 3688 1241 391 323 MR c np
24 W
4005 1490 PD
24 W
3892 1314 PD
24 W
3761 1445 PD
24 W
3949 1402 PD
24 W
3827 1379 PD
24 W
3883 1467 PD
gr

-47 112 -47 112 -32 -79 -33 -80 79 -33 80 -32 5408 2471 7 MP stroke
gs 5335 2174 306 371 MR c np
24 W
5408 2471 PD
24 W
5567 2406 PD
24 W
5502 2247 PD
24 W
5488 2439 PD
24 W
5534 2326 PD
24 W
5455 2359 PD
gr

-109 2 -109 2 32 -73 32 -74 77 71 77 72 2314 3260 7 MP stroke
gs 2241 3183 365 294 MR c np
24 W
2314 3260 PD
24 W
2468 3403 PD
24 W
2532 3256 PD
24 W
2391 3332 PD
24 W
2500 3329 PD
24 W
2423 3258 PD
gr

32 -123 31 -124 56 88 57 88 -88 36 -88 35 4068 1243 7 MP stroke
gs 3819 1170 323 394 MR c np
24 W
4068 1243 PD
24 W
3892 1314 PD
24 W
4005 1490 PD
24 W
3980 1278 PD
24 W
3949 1402 PD
24 W
4036 1366 PD
gr

112 -46 112 -47 -32 79 -33 80 -80 -33 -79 -33 3831 577 7 MP stroke
gs 3534 438 371 306 MR c np
24 W
3831 577 PD
24 W
3672 511 PD
24 W
3607 670 PD
24 W
3752 544 PD
24 W
3639 591 PD
24 W
3719 623 PD
gr

42 96 42 96 -103 -39 -103 -39 61 -57 61 -57 4941 2215 7 MP stroke
gs 4784 1950 353 339 MR c np
24 W
4941 2215 PD
24 W
5063 2101 PD
24 W
4857 2023 PD
24 W
5002 2158 PD
24 W
4960 2062 PD
24 W
4899 2119 PD
gr

-111 -53 -111 -54 88 -35 88 -36 23 89 23 89 3846 1136 7 MP stroke
gs 3773 1063 369 325 MR c np
24 W
3846 1136 PD
24 W
3892 1314 PD
24 W
4068 1243 PD
24 W
3869 1225 PD
24 W
3980 1278 PD
24 W
3957 1189 PD
gr

75 -83 75 -83 9 87 10 87 -84 -4 -85 -4 4584 1251 7 MP stroke
gs 4342 1170 316 321 MR c np
24 W
4584 1251 PD
24 W
4415 1243 PD
24 W
4434 1417 PD
24 W
4499 1247 PD
24 W
4425 1330 PD
24 W
4509 1334 PD
gr

-19 116 -19 117 -56 -76 -56 -76 75 -41 75 -40 3113 3750 7 MP stroke
gs 3040 3444 297 380 MR c np
24 W
3113 3750 PD
24 W
3263 3669 PD
24 W
3151 3517 PD
24 W
3188 3710 PD
24 W
3207 3593 PD
24 W
3132 3634 PD
gr

-92 58 -92 58 -11 -97 -11 -97 103 39 103 39 4857 2023 7 MP stroke
gs 4784 1834 353 341 MR c np
24 W
4857 2023 PD
24 W
5063 2101 PD
24 W
5041 1907 PD
24 W
4960 2062 PD
24 W
5052 2004 PD
24 W
4949 1965 PD
gr

53 -74 52 -73 54 55 54 56 -106 18 -107 18 3855 2078 7 MP stroke
gs 3569 2005 360 294 MR c np
24 W
3855 2078 PD
24 W
3642 2114 PD
24 W
3750 2225 PD
24 W
3748 2096 PD
24 W
3696 2170 PD
24 W
3802 2152 PD
gr

88 71 88 71 -81 15 -81 14 -7 -85 -7 -86 4624 3517 7 MP stroke
gs 4375 3273 323 318 MR c np
24 W
4624 3517 PD
24 W
4610 3346 PD
24 W
4448 3375 PD
24 W
4617 3431 PD
24 W
4529 3360 PD
24 W
4536 3446 PD
gr

49 -95 48 -95 48 105 47 105 -96 -10 -96 -10 4284 2961 7 MP stroke
gs 4019 2868 339 357 MR c np
24 W
4284 2961 PD
24 W
4092 2941 PD
24 W
4187 3151 PD
24 W
4188 2951 PD
24 W
4139 3046 PD
24 W
4235 3056 PD
gr

-101 47 -100 47 24 -86 24 -87 77 39 76 40 4624 3517 7 MP stroke
gs 4551 3350 348 320 MR c np
24 W
4624 3517 PD
24 W
4777 3596 PD
24 W
4825 3423 PD
24 W
4700 3557 PD
24 W
4801 3509 PD
24 W
4725 3470 PD
gr

39 -105 40 -104 44 74 43 75 -83 30 -83 30 2645 1239 7 MP stroke
gs 2406 1166 313 356 MR c np
24 W
2645 1239 PD
24 W
2479 1299 PD
24 W
2566 1448 PD
24 W
2562 1269 PD
24 W
2522 1374 PD
24 W
2606 1344 PD
gr

-63 67 -63 67 -1 -104 0 -103 63 36 64 37 4299 3713 7 MP stroke
gs 4226 3506 274 354 MR c np
24 W
4299 3713 PD
24 W
4426 3786 PD
24 W
4425 3579 PD
24 W
4363 3750 PD
24 W
4426 3683 PD
24 W
4362 3646 PD
gr

92 76 93 76 -82 18 -82 19 -11 -94 -10 -95 3761 1445 7 MP stroke
gs 3503 1183 332 336 MR c np
24 W
3761 1445 PD
24 W
3740 1256 PD
24 W
3576 1293 PD
24 W
3751 1350 PD
24 W
3658 1275 PD
24 W
3669 1369 PD
gr

-109 47 -108 47 31 -107 30 -108 78 60 78 61 5069 889 7 MP stroke
gs 4996 722 364 362 MR c np
24 W
5069 889 PD
24 W
5225 1010 PD
24 W
5286 795 PD
24 W
5147 950 PD
24 W
5255 902 PD
24 W
5178 842 PD
gr

-93 -39 -93 -39 95 -55 96 -56 -2 95 -3 94 3860 1889 7 MP stroke
gs 3782 1816 338 336 MR c np
24 W
3860 1889 PD
24 W
3855 2078 PD
24 W
4046 1967 PD
24 W
3857 1983 PD
24 W
3951 2022 PD
24 W
3953 1928 PD
gr

105 39 104 40 -88 36 -87 36 -17 -76 -17 -75 5344 2959 7 MP stroke
gs 5062 2735 356 298 MR c np
24 W
5344 2959 PD
24 W
5310 2808 PD
24 W
5135 2880 PD
24 W
5327 2884 PD
24 W
5223 2844 PD
24 W
5239 2920 PD
gr

52 -104 53 -104 24 73 24 74 -76 30 -77 31 5135 2880 7 MP stroke
gs 4909 2807 300 355 MR c np
24 W
5135 2880 PD
24 W
4982 2941 PD
24 W
5030 3088 PD
24 W
5058 2911 PD
24 W
5006 3015 PD
24 W
5083 2984 PD
gr

-103 -38 -102 -37 77 -31 76 -30 26 68 26 68 4930 2805 7 MP stroke
gs 4857 2732 352 283 MR c np
24 W
4930 2805 PD
24 W
4982 2941 PD
24 W
5135 2880 PD
24 W
4956 2873 PD
24 W
5058 2911 PD
24 W
5033 2843 PD
gr

99 43 99 44 -75 30 -75 30 -24 -74 -24 -73 5030 3088 7 MP stroke
gs 4759 2868 345 294 MR c np
24 W
5030 3088 PD
24 W
4982 2941 PD
24 W
4832 3001 PD
24 W
5006 3015 PD
24 W
4907 2971 PD
24 W
4931 3045 PD
gr

-49 98 -49 98 -26 -68 -26 -68 75 -30 75 -30 4832 3001 7 MP stroke
gs 4759 2732 297 343 MR c np
24 W
4832 3001 PD
24 W
4982 2941 PD
24 W
4930 2805 PD
24 W
4907 2971 PD
24 W
4956 2873 PD
24 W
4881 2903 PD
gr

-113 -27 -113 -26 79 -64 78 -63 34 90 35 90 5464 1603 7 MP stroke
gr

gs 5391 1530 373 327 MR c np
24 W
5464 1603 PD
24 W
5533 1783 PD
24 W
5690 1656 PD
24 W
5499 1693 PD
24 W
5611 1720 PD
24 W
5577 1630 PD
gr

gs 1463 388 4228 4228 MR c np
-26 -115 -26 -114 89 36 90 36 -63 78 -64 79 4422 388 7 MP stroke
gr

gs 4222 315 326 376 MR c np
24 W
4422 388 PD
24 W
4295 545 PD
24 W
4474 617 PD
24 W
4358 467 PD
24 W
4385 581 PD
24 W
4448 503 PD
gr

gs 1463 388 4228 4228 MR c np
105 -13 104 -13 -41 71 -41 71 -63 -58 -64 -58 4448 3375 7 MP stroke
gs 4166 3186 356 289 MR c np
24 W
4448 3375 PD
24 W
4321 3259 PD
24 W
4239 3401 PD
24 W
4384 3317 PD
24 W
4280 3330 PD
24 W
4343 3388 PD
gr

72 54 72 54 -62 46 -62 46 -10 -100 -10 -100 4922 4259 7 MP stroke
gs 4705 3986 291 347 MR c np
24 W
4922 4259 PD
24 W
4902 4059 PD
24 W
4778 4151 PD
24 W
4912 4159 PD
24 W
4840 4105 PD
24 W
4850 4205 PD
gr

58 -73 58 -72 29 102 30 102 -87 -29 -88 -30 4030 2137 7 MP stroke
gs 3782 2005 322 351 MR c np
24 W
4030 2137 PD
24 W
3855 2078 PD
24 W
3914 2282 PD
24 W
3942 2107 PD
24 W
3885 2180 PD
24 W
3972 2210 PD
gr

61 79 60 80 -101 -9 -101 -10 40 -70 41 -70 1940 1315 7 MP stroke
gs 1746 1083 349 306 MR c np
24 W
1940 1315 PD
24 W
2021 1175 PD
24 W
1819 1156 PD
24 W
1981 1245 PD
24 W
1920 1165 PD
24 W
1879 1236 PD
gr

105 28 105 27 -58 77 -57 78 -47 -105 -48 -105 4187 3151 7 MP stroke
gs 3904 2868 357 357 MR c np
24 W
4187 3151 PD
24 W
4092 2941 PD
24 W
3977 3096 PD
24 W
4139 3046 PD
24 W
4035 3019 PD
24 W
4082 3123 PD
gr

115 -28 116 -29 -42 79 -41 78 -74 -50 -74 -50 2790 2290 7 MP stroke
gs 2486 2117 378 304 MR c np
24 W
2790 2290 PD
24 W
2642 2190 PD
24 W
2559 2347 PD
24 W
2716 2240 PD
24 W
2601 2268 PD
24 W
2675 2318 PD
gr

0 192 -62 -34 -62 -34 62 -62 62 -62 1463 4615 6 MP stroke
gr

gs 1390 4350 271 339 MR c np
24 W
1463 4615 PD
24 W
1587 4491 PD
24 W
1463 4423 PD
24 W
1525 4553 PD
24 W
1525 4457 PD
24 W
1463 4519 PD
gr

gs 1463 388 4228 4228 MR c np
-91 2 -92 2 23 -85 23 -85 68 83 69 83 4758 2219 7 MP stroke
gs 4685 2142 330 317 MR c np
24 W
4758 2219 PD
24 W
4895 2385 PD
24 W
4941 2215 PD
24 W
4827 2302 PD
24 W
4918 2300 PD
24 W
4849 2217 PD
gr

96 0 96 0 -62 62 -62 62 -34 -62 -34 -62 1655 4615 7 MP stroke
gr

gs 1390 4418 339 271 MR c np
24 W
1655 4615 PD
24 W
1587 4491 PD
24 W
1463 4615 PD
24 W
1621 4553 PD
24 W
1525 4553 PD
24 W
1559 4615 PD
gr

gs 1463 388 4228 4228 MR c np
65 -62 65 -63 21 97 21 96 -86 -34 -86 -34 2212 2777 7 MP stroke
gs 1967 2636 319 340 MR c np
24 W
2212 2777 PD
24 W
2040 2709 PD
24 W
2082 2902 PD
24 W
2126 2743 PD
24 W
2061 2805 PD
24 W
2147 2839 PD
gr

-65 62 -66 62 -30 -85 -31 -85 96 23 96 23 3179 3991 7 MP stroke
gs 3106 3794 339 317 MR c np
24 W
3179 3991 PD
24 W
3371 4037 PD
24 W
3310 3867 PD
24 W
3275 4014 PD
24 W
3340 3952 PD
24 W
3244 3929 PD
gr

-8 90 -9 91 -71 -66 -72 -66 80 -25 80 -24 2739 4158 7 MP stroke
gs 2666 3904 307 328 MR c np
24 W
2739 4158 PD
24 W
2899 4109 PD
24 W
2756 3977 PD
24 W
2819 4134 PD
24 W
2827 4043 PD
24 W
2747 4068 PD
gr

99 0 99 0 -46 78 -46 78 -53 -78 -53 -78 3021 4615 7 MP stroke
gr

gs 2750 4386 345 303 MR c np
24 W
3021 4615 PD
24 W
2915 4459 PD
24 W
2823 4615 PD
24 W
2968 4537 PD
24 W
2869 4537 PD
24 W
2922 4615 PD
gr

gs 1463 388 4228 4228 MR c np
90 5 90 5 -26 81 -27 80 -63 -85 -64 -86 3522 1487 7 MP stroke
gs 3269 1243 327 318 MR c np
24 W
3522 1487 PD
24 W
3395 1316 PD
24 W
3342 1477 PD
24 W
3458 1401 PD
24 W
3368 1396 PD
24 W
3432 1482 PD
gr

0 198 -79 -53 -78 -53 78 -46 79 -46 1463 3255 6 MP stroke
gr

gs 1390 2984 304 345 MR c np
24 W
1463 3255 PD
24 W
1620 3163 PD
24 W
1463 3057 PD
24 W
1542 3209 PD
24 W
1542 3110 PD
24 W
1463 3156 PD
gr

gs 1463 388 4228 4228 MR c np
-87 59 -86 58 -7 -97 -6 -98 93 39 93 39 3860 1889 7 MP stroke
gs 3787 1699 333 342 MR c np
24 W
3860 1889 PD
24 W
4046 1967 PD
24 W
4033 1772 PD
24 W
3953 1928 PD
24 W
4040 1869 PD
24 W
3947 1830 PD
gr

109 -33 109 -34 -22 86 -23 85 -86 -52 -87 -52 3353 2537 7 MP stroke
gs 3062 2360 365 318 MR c np
24 W
3353 2537 PD
24 W
3180 2433 PD
24 W
3135 2604 PD
24 W
3266 2485 PD
24 W
3157 2518 PD
24 W
3244 2570 PD
gr

70 72 71 72 -77 43 -78 44 7 -115 7 -116 4881 2616 7 MP stroke
gs 4667 2312 302 378 MR c np
24 W
4881 2616 PD
24 W
4895 2385 PD
24 W
4740 2472 PD
24 W
4888 2500 PD
24 W
4817 2429 PD
24 W
4811 2544 PD
gr

27 -97 27 -97 64 86 63 85 -91 12 -90 11 3576 1293 7 MP stroke
gs 3322 1220 328 341 MR c np
24 W
3576 1293 PD
24 W
3395 1316 PD
24 W
3522 1487 PD
24 W
3486 1304 PD
24 W
3458 1401 PD
24 W
3549 1390 PD
gr

80 -61 81 -61 -7 116 -7 115 -74 -54 -73 -55 5042 2494 7 MP stroke
gs 4808 2312 308 378 MR c np
24 W
5042 2494 PD
24 W
4895 2385 PD
24 W
4881 2616 PD
24 W
4969 2439 PD
24 W
4888 2500 PD
24 W
4962 2555 PD
gr

105 -22 106 -22 -40 72 -40 71 -66 -49 -65 -50 3860 1889 7 MP stroke
gs 3576 1717 358 290 MR c np
24 W
3860 1889 PD
24 W
3729 1790 PD
24 W
3649 1933 PD
24 W
3795 1839 PD
24 W
3689 1861 PD
24 W
3755 1911 PD
gr

-33 -107 -33 -108 87 52 86 52 -53 55 -54 56 3287 2322 7 MP stroke
gs 3107 2249 320 362 MR c np
24 W
3287 2322 PD
24 W
3180 2433 PD
24 W
3353 2537 PD
24 W
3233 2378 PD
24 W
3266 2485 PD
24 W
3320 2429 PD
gr

-55 105 -55 106 -35 -90 -34 -90 89 -15 90 -16 5354 1814 7 MP stroke
gs 5281 1530 326 358 MR c np
24 W
5354 1814 PD
24 W
5533 1783 PD
24 W
5464 1603 PD
24 W
5444 1798 PD
24 W
5499 1693 PD
24 W
5409 1709 PD
gr

106 -54 106 -55 -16 90 -17 91 -90 -36 -89 -36 4474 617 7 MP stroke
gs 4189 472 359 328 MR c np
24 W
4474 617 PD
24 W
4295 545 PD
24 W
4262 726 PD
24 W
4385 581 PD
24 W
4278 636 PD
24 W
4368 671 PD
gr

0 208 -81 -57 -81 -56 81 -48 81 -47 1463 1228 6 MP stroke
gr

gs 1390 947 309 355 MR c np
24 W
1463 1228 PD
24 W
1625 1133 PD
24 W
1463 1020 PD
24 W
1544 1181 PD
24 W
1544 1077 PD
24 W
1463 1124 PD
gr

gs 1463 388 4228 4228 MR c np
92 51 92 50 -74 42 -74 43 -18 -93 -18 -93 5225 2008 7 MP stroke
gs 4968 1749 331 333 MR c np
24 W
5225 2008 PD
24 W
5189 1822 PD
24 W
5041 1907 PD
24 W
5207 1915 PD
24 W
5115 1865 PD
24 W
5133 1957 PD
gr

77 88 77 88 -76 0 -77 0 0 -88 -1 -88 4438 3137 7 MP stroke
gs 4211 2888 301 323 MR c np
24 W
4438 3137 PD
24 W
4437 2961 PD
24 W
4284 2961 PD
24 W
4437 3049 PD
24 W
4360 2961 PD
24 W
4361 3049 PD
gr

104 0 104 0 -47 81 -48 81 -57 -81 -56 -81 5058 4615 7 MP stroke
gr

gs 4777 4380 355 309 MR c np
24 W
5058 4615 PD
24 W
4945 4453 PD
24 W
4850 4615 PD
24 W
5002 4534 PD
24 W
4897 4534 PD
24 W
4954 4615 PD
gr

gs 1463 388 4228 4228 MR c np
-73 55 -73 55 10 -100 10 -101 63 45 63 46 4776 853 7 MP stroke
gs 4703 670 293 348 MR c np
24 W
4776 853 PD
24 W
4902 944 PD
24 W
4922 743 PD
24 W
4839 899 PD
24 W
4912 843 PD
24 W
4849 798 PD
gr

-28 99 -28 99 -57 -55 -58 -56 85 -44 86 -43 2222 4273 7 MP stroke
gs 2149 4002 318 345 MR c np
24 W
2222 4273 PD
24 W
2393 4186 PD
24 W
2278 4075 PD
24 W
2308 4230 PD
24 W
2335 4130 PD
24 W
2250 4174 PD
gr

103 41 103 41 -74 51 -73 50 -29 -91 -30 -92 2492 3067 7 MP stroke
gs 2213 2811 353 330 MR c np
24 W
2492 3067 PD
24 W
2433 2884 PD
24 W
2286 2985 PD
24 W
2462 2975 PD
24 W
2360 2934 PD
24 W
2389 3026 PD
gr

67 90 67 89 -89 -4 -90 -4 23 -85 22 -86 3135 2604 7 MP stroke
gs 2928 2352 326 326 MR c np
24 W
3135 2604 PD
24 W
3180 2433 PD
24 W
3001 2425 PD
24 W
3157 2518 PD
24 W
3090 2429 PD
24 W
3068 2514 PD
gr

-61 -81 -60 -82 101 12 100 12 -40 69 -40 70 2825 674 7 MP stroke
gs 2672 601 348 310 MR c np
24 W
2825 674 PD
24 W
2745 813 PD
24 W
2946 837 PD
24 W
2785 744 PD
24 W
2845 825 PD
24 W
2886 755 PD
gr

63 -67 63 -67 36 64 37 65 -100 3 -99 2 4425 3579 7 MP stroke
gs 4153 3506 346 281 MR c np
24 W
4425 3579 PD
24 W
4226 3584 PD
24 W
4299 3713 PD
24 W
4326 3581 PD
24 W
4263 3649 PD
24 W
4362 3646 PD
gr

-81 -60 -80 -60 69 -41 70 -40 11 100 11 101 5243 3132 7 MP stroke
gs 5170 3059 308 348 MR c np
24 W
5243 3132 PD
24 W
5265 3333 PD
24 W
5404 3252 PD
24 W
5254 3233 PD
24 W
5335 3293 PD
24 W
5324 3192 PD
gr

-86 70 -87 69 7 -91 6 -92 80 22 80 22 4066 3540 7 MP stroke
gs 3993 3328 320 330 MR c np
24 W
4066 3540 PD
24 W
4226 3584 PD
24 W
4239 3401 PD
24 W
4146 3562 PD
24 W
4232 3492 PD
24 W
4152 3470 PD
gr

-34 98 -34 98 -53 -69 -53 -68 87 -29 87 -30 1866 2768 7 MP stroke
gs 1793 2499 321 343 MR c np
24 W
1866 2768 PD
24 W
2040 2709 PD
24 W
1934 2572 PD
24 W
1953 2738 PD
24 W
1987 2641 PD
24 W
1900 2670 PD
gr

-17 98 -16 98 -69 -53 -68 -53 85 -45 85 -45 3615 1060 7 MP stroke
gs 3542 791 317 343 MR c np
24 W
3615 1060 PD
24 W
3785 970 PD
24 W
3648 864 PD
24 W
3700 1015 PD
24 W
3717 917 PD
24 W
3632 962 PD
gr

88 -1 88 -1 -31 73 -31 73 -57 -72 -57 -72 2078 3323 7 MP stroke
gs 1829 3106 323 293 MR c np
24 W
2078 3323 PD
24 W
1964 3179 PD
24 W
1902 3325 PD
24 W
2021 3251 PD
24 W
1933 3252 PD
24 W
1990 3324 PD
gr

97 -35 98 -34 -30 87 -30 88 -68 -53 -67 -53 3506 4143 7 MP stroke
gs 3238 3964 342 322 MR c np
24 W
3506 4143 PD
24 W
3371 4037 PD
24 W
3311 4212 PD
24 W
3439 4090 PD
24 W
3341 4125 PD
24 W
3409 4178 PD
gr

87 -31 88 -30 -25 96 -25 96 -62 -65 -63 -66 5217 2433 7 MP stroke
gs 4969 2229 322 339 MR c np
24 W
5217 2433 PD
24 W
5092 2302 PD
24 W
5042 2494 PD
24 W
5154 2367 PD
24 W
5067 2398 PD
24 W
5130 2464 PD
gr

0 -212 79 58 79 57 -79 48 -79 49 5690 3769 6 MP stroke
gr

gs 5459 3696 305 359 MR c np
24 W
5690 3769 PD
24 W
5532 3866 PD
24 W
5690 3981 PD
24 W
5611 3818 PD
24 W
5611 3923 PD
24 W
5690 3875 PD
gr

gs 1463 388 4228 4228 MR c np
102 32 102 31 -80 64 -80 65 -22 -96 -22 -96 3958 2474 7 MP stroke
gs 3681 2209 351 339 MR c np
24 W
3958 2474 PD
24 W
3914 2282 PD
24 W
3754 2411 PD
24 W
3936 2378 PD
24 W
3834 2347 PD
24 W
3856 2442 PD
gr

-106 0 -106 0 49 -79 48 -79 57 79 58 79 2097 388 7 MP stroke
gr

gs 2024 315 359 305 MR c np
24 W
2097 388 PD
24 W
2212 546 PD
24 W
2309 388 PD
24 W
2155 467 PD
24 W
2260 467 PD
24 W
2203 388 PD
gr

gs 1463 388 4228 4228 MR c np
2 93 2 93 -82 -29 -82 -28 80 -65 80 -64 3754 2411 7 MP stroke
gs 3677 2152 311 333 MR c np
24 W
3754 2411 PD
24 W
3914 2282 PD
24 W
3750 2225 PD
24 W
3834 2347 PD
24 W
3832 2254 PD
24 W
3752 2318 PD
gr

8 -85 8 -85 88 30 87 29 -96 56 -95 55 4046 1967 7 MP stroke
gs 3782 1894 338 317 MR c np
24 W
4046 1967 PD
24 W
3855 2078 PD
24 W
4030 2137 PD
24 W
3951 2022 PD
24 W
3942 2107 PD
24 W
4038 2052 PD
gr

-106 0 -106 0 57 -81 57 -80 49 80 49 81 4844 388 7 MP stroke
gr

gs 4771 315 359 308 MR c np
24 W
4844 388 PD
24 W
4942 549 PD
24 W
5056 388 PD
24 W
4893 469 PD
24 W
4999 469 PD
24 W
4950 388 PD
gr

gs 1463 388 4228 4228 MR c np
-47 -110 -46 -110 83 27 84 27 -37 83 -37 83 4976 3893 7 MP stroke
gs 4829 3820 314 367 MR c np
24 W
4976 3893 PD
24 W
4902 4059 PD
24 W
5069 4113 PD
24 W
4939 3976 PD
24 W
4986 4086 PD
24 W
5023 4003 PD
gr

-110 -46 -110 -47 82 -37 82 -36 28 83 28 83 1965 1009 7 MP stroke
gs 1892 936 367 313 MR c np
24 W
1965 1009 PD
24 W
2021 1175 PD
24 W
2185 1102 PD
24 W
1993 1092 PD
24 W
2103 1139 PD
24 W
2075 1055 PD
gr

0 -212 80 49 79 48 -79 57 -80 58 5690 1022 6 MP stroke
gr

gs 5458 949 306 359 MR c np
24 W
5690 1022 PD
24 W
5531 1137 PD
24 W
5690 1234 PD
24 W
5610 1080 PD
24 W
5610 1185 PD
24 W
5690 1128 PD
gr

gs 1463 388 4228 4228 MR c np
-103 42 -103 42 31 -88 30 -87 73 45 72 46 3880 3849 7 MP stroke
gs 3807 3692 353 322 MR c np
24 W
3880 3849 PD
24 W
4025 3940 PD
24 W
4086 3765 PD
24 W
3952 3895 PD
24 W
4055 3853 PD
24 W
3983 3807 PD
gr

104 -5 104 -4 -51 78 -52 78 -52 -73 -53 -74 2005 3837 7 MP stroke
gs 1724 3617 355 303 MR c np
24 W
2005 3837 PD
24 W
1900 3690 PD
24 W
1797 3846 PD
24 W
1952 3763 PD
24 W
1848 3768 PD
24 W
1901 3842 PD
gr

-12 -110 -12 -110 67 44 66 44 -54 66 -55 66 4435 1627 7 MP stroke
gs 4253 1554 280 367 MR c np
24 W
4435 1627 PD
24 W
4326 1759 PD
24 W
4459 1847 PD
24 W
4380 1693 PD
24 W
4392 1803 PD
24 W
4447 1737 PD
gr

-74 -72 -74 -71 94 -16 93 -16 -20 88 -19 87 4008 4276 7 MP stroke
gs 3896 4203 334 322 MR c np
24 W
4008 4276 PD
24 W
3969 4451 PD
24 W
4156 4419 PD
24 W
3989 4363 PD
24 W
4062 4435 PD
24 W
4082 4348 PD
gr

82 28 82 29 -52 73 -53 74 -30 -102 -29 -102 3914 2282 7 MP stroke
gs 3677 2005 311 351 MR c np
24 W
3914 2282 PD
24 W
3855 2078 PD
24 W
3750 2225 PD
24 W
3885 2180 PD
24 W
3802 2152 PD
24 W
3832 2254 PD
gr

-71 -74 -72 -73 87 -20 88 -19 -16 93 -16 93 1659 1923 7 MP stroke
gs 1554 1850 322 333 MR c np
24 W
1659 1923 PD
24 W
1627 2109 PD
24 W
1802 2070 PD
24 W
1643 2016 PD
24 W
1715 2090 PD
24 W
1730 1997 PD
gr

-98 42 -97 42 21 -101 22 -100 76 58 76 59 2564 2575 7 MP stroke
gs 2491 2418 342 348 MR c np
24 W
2564 2575 PD
24 W
2716 2692 PD
24 W
2759 2491 PD
24 W
2640 2634 PD
24 W
2738 2592 PD
24 W
2662 2533 PD
gr

-86 71 -87 70 3 -91 4 -90 83 20 83 20 3476 2074 7 MP stroke
gs 3403 1860 320 328 MR c np
24 W
3476 2074 PD
24 W
3642 2114 PD
24 W
3649 1933 PD
24 W
3559 2094 PD
24 W
3646 2024 PD
24 W
3562 2003 PD
gr

-33 99 -32 99 -64 -77 -64 -76 97 -23 96 -22 3012 1410 7 MP stroke
gs 2939 1139 340 345 MR c np
24 W
3012 1410 PD
24 W
3205 1365 PD
24 W
3077 1212 PD
24 W
3108 1388 PD
24 W
3141 1289 PD
24 W
3045 1311 PD
gr

-39 -99 -40 -100 70 12 70 12 -30 87 -31 88 4086 3765 7 MP stroke
gs 3952 3692 287 346 MR c np
24 W
4086 3765 PD
24 W
4025 3940 PD
24 W
4165 3964 PD
24 W
4055 3853 PD
24 W
4095 3952 PD
24 W
4125 3864 PD
gr

-93 8 -93 8 29 -84 29 -85 64 76 64 77 3077 1212 7 MP stroke
gs 3004 1123 333 316 MR c np
24 W
3077 1212 PD
24 W
3205 1365 PD
24 W
3263 1196 PD
24 W
3141 1289 PD
24 W
3234 1280 PD
24 W
3170 1204 PD
gr

0 -212 79 43 78 42 -78 63 -79 64 5690 1656 6 MP stroke
gr

gs 5460 1583 304 359 MR c np
24 W
5690 1656 PD
24 W
5533 1783 PD
24 W
5690 1868 PD
24 W
5611 1720 PD
24 W
5611 1825 PD
24 W
5690 1762 PD
gr

gs 1463 388 4228 4228 MR c np
-106 0 -106 0 64 -79 63 -78 42 78 43 79 4210 388 7 MP stroke
gr

gs 4137 315 359 304 MR c np
24 W
4210 388 PD
24 W
4295 545 PD
24 W
4422 388 PD
24 W
4253 467 PD
24 W
4358 467 PD
24 W
4316 388 PD
gr

gs 1463 388 4228 4228 MR c np
26 84 26 84 -90 -5 -90 -5 64 -79 64 -79 3394 1645 7 MP stroke
gs 3269 1404 327 315 MR c np
24 W
3394 1645 PD
24 W
3522 1487 PD
24 W
3342 1477 PD
24 W
3458 1566 PD
24 W
3432 1482 PD
24 W
3368 1561 PD
gr

105 18 105 19 -64 79 -64 79 -41 -98 -41 -97 3604 1682 7 MP stroke
gs 3321 1414 357 342 MR c np
24 W
3604 1682 PD
24 W
3522 1487 PD
24 W
3394 1645 PD
24 W
3563 1585 PD
24 W
3458 1566 PD
24 W
3499 1664 PD
gr

69 56 68 56 -95 24 -95 25 27 -80 26 -81 3342 1477 7 MP stroke
gs 3132 1243 337 308 MR c np
24 W
3342 1477 PD
24 W
3395 1316 PD
24 W
3205 1365 PD
24 W
3368 1396 PD
24 W
3300 1341 PD
24 W
3273 1421 PD
gr

62 68 63 68 -66 34 -66 35 4 -102 3 -103 3906 3647 7 MP stroke
gs 3708 3369 279 352 MR c np
24 W
3906 3647 PD
24 W
3913 3442 PD
24 W
3781 3511 PD
24 W
3909 3544 PD
24 W
3847 3477 PD
24 W
3844 3579 PD
gr

-29 85 -29 84 -66 -60 -66 -60 95 -25 95 -24 3205 1365 7 MP stroke
gs 3132 1123 337 316 MR c np
24 W
3205 1365 PD
24 W
3395 1316 PD
24 W
3263 1196 PD
24 W
3300 1341 PD
24 W
3329 1256 PD
24 W
3234 1280 PD
gr

80 -54 80 -53 -3 103 -4 102 -76 -49 -77 -49 4066 3540 7 MP stroke
gs 3833 3369 307 352 MR c np
24 W
4066 3540 PD
24 W
3913 3442 PD
24 W
3906 3647 PD
24 W
3989 3491 PD
24 W
3909 3544 PD
24 W
3986 3594 PD
gr

50 92 51 92 -89 -19 -90 -20 39 -73 39 -72 4170 1037 7 MP stroke
gs 3996 780 326 331 MR c np
24 W
4170 1037 PD
24 W
4248 892 PD
24 W
4069 853 PD
24 W
4209 965 PD
24 W
4158 872 PD
24 W
4120 945 PD
gr

76 43 75 44 -61 57 -61 57 -14 -100 -15 -101 5092 2302 7 MP stroke
gs 4868 2028 298 348 MR c np
24 W
5092 2302 PD
24 W
5063 2101 PD
24 W
4941 2215 PD
24 W
5077 2201 PD
24 W
5002 2158 PD
24 W
5016 2259 PD
gr

30 83 31 83 -96 -23 -97 -23 66 -60 66 -60 3846 1136 7 MP stroke
gs 3712 897 340 313 MR c np
24 W
3846 1136 PD
24 W
3978 1016 PD
24 W
3785 970 PD
24 W
3912 1076 PD
24 W
3881 993 PD
24 W
3816 1053 PD
gr

-48 -93 -47 -93 96 10 96 10 -49 83 -48 83 4189 2775 7 MP stroke
gs 4019 2702 339 333 MR c np
24 W
4189 2775 PD
24 W
4092 2941 PD
24 W
4284 2961 PD
24 W
4141 2858 PD
24 W
4188 2951 PD
24 W
4237 2868 PD
gr

113 6 112 5 -61 57 -61 57 -51 -62 -52 -63 4857 2023 7 MP stroke
gs 4559 1825 372 272 MR c np
24 W
4857 2023 PD
24 W
4754 1898 PD
24 W
4632 2012 PD
24 W
4805 1960 PD
24 W
4693 1955 PD
24 W
4744 2017 PD
gr

47 -111 46 -110 37 83 37 83 -83 27 -84 28 5069 889 7 MP stroke
gs 4829 816 314 368 MR c np
24 W
5069 889 PD
24 W
4902 944 PD
24 W
4976 1110 PD
24 W
4985 917 PD
24 W
4939 1027 PD
24 W
5022 1000 PD
gr

-51 -92 -50 -92 96 10 96 11 -45 82 -46 81 4069 853 7 MP stroke
gs 3905 780 339 331 MR c np
24 W
4069 853 PD
24 W
3978 1016 PD
24 W
4170 1037 PD
24 W
4023 934 PD
24 W
4074 1027 PD
24 W
4120 945 PD
gr

6 96 6 95 -88 -41 -87 -41 81 -54 82 -55 2953 3171 7 MP stroke
gs 2868 2907 322 338 MR c np
24 W
2953 3171 PD
24 W
3116 3062 PD
24 W
2941 2980 PD
24 W
3035 3116 PD
24 W
3029 3021 PD
24 W
2947 3075 PD
gr

-92 -50 -92 -51 81 -46 81 -47 11 97 11 97 5041 1907 7 MP stroke
gs 4968 1834 331 341 MR c np
24 W
5041 1907 PD
24 W
5063 2101 PD
24 W
5225 2008 PD
24 W
5052 2004 PD
24 W
5144 2054 PD
24 W
5133 1957 PD
gr

-24 85 -25 86 -65 -85 -64 -86 89 0 89 0 2968 2213 7 MP stroke
gs 2895 1969 325 318 MR c np
24 W
2968 2213 PD
24 W
3146 2213 PD
24 W
3017 2042 PD
24 W
3057 2213 PD
24 W
3082 2127 PD
24 W
2992 2128 PD
gr

-77 42 -76 42 -11 -83 -11 -83 87 41 88 41 2941 2980 7 MP stroke
gs 2868 2823 322 313 MR c np
24 W
2941 2980 PD
24 W
3116 3062 PD
24 W
3094 2896 PD
24 W
3029 3021 PD
24 W
3105 2979 PD
24 W
3018 2938 PD
gr

-87 4 -87 3 22 -89 23 -89 64 86 65 85 3017 2042 7 MP stroke
gs 2944 1962 321 325 MR c np
24 W
3017 2042 PD
24 W
3146 2213 PD
24 W
3191 2035 PD
24 W
3082 2127 PD
24 W
3169 2124 PD
24 W
3104 2038 PD
gr

-33 -85 -34 -85 91 12 92 13 -58 72 -58 73 4030 2137 7 MP stroke
gs 3841 2064 330 317 MR c np
24 W
4030 2137 PD
24 W
3914 2282 PD
24 W
4097 2307 PD
24 W
3972 2210 PD
24 W
4006 2295 PD
24 W
4063 2222 PD
gr

32 89 32 90 -89 -12 -90 -12 57 -78 58 -77 3977 3096 7 MP stroke
gs 3840 2844 326 326 MR c np
24 W
3977 3096 PD
24 W
4092 2941 PD
24 W
3913 2917 PD
24 W
4035 3019 PD
24 W
4002 2929 PD
24 W
3945 3007 PD
gr

52 84 53 84 -98 2 -97 1 45 -85 45 -86 3609 3517 7 MP stroke
gs 3431 3273 342 318 MR c np
24 W
3609 3517 PD
24 W
3699 3346 PD
24 W
3504 3349 PD
24 W
3654 3431 PD
24 W
3602 3347 PD
24 W
3557 3433 PD
gr

86 -3 86 -3 -45 86 -45 85 -41 -83 -41 -82 3781 3511 7 MP stroke
gs 3536 3273 319 318 MR c np
24 W
3781 3511 PD
24 W
3699 3346 PD
24 W
3609 3517 PD
24 W
3740 3429 PD
24 W
3654 3431 PD
24 W
3695 3514 PD
gr

0 196 -63 -37 -63 -38 63 -60 63 -61 1463 3648 6 MP stroke
gr

gs 1390 3379 273 343 MR c np
24 W
1463 3648 PD
24 W
1589 3527 PD
24 W
1463 3452 PD
24 W
1526 3587 PD
24 W
1526 3489 PD
24 W
1463 3550 PD
gr

gs 1463 388 4228 4228 MR c np
-79 -57 -79 -58 92 -28 92 -28 -13 85 -13 86 1961 1777 7 MP stroke
gs 1862 1704 331 318 MR c np
24 W
1961 1777 PD
24 W
1935 1948 PD
24 W
2119 1892 PD
24 W
1948 1863 PD
24 W
2027 1920 PD
24 W
2040 1834 PD
gr

98 0 98 0 -61 63 -61 63 -37 -63 -37 -63 2626 4615 7 MP stroke
gr

gs 2357 4416 343 273 MR c np
24 W
2626 4615 PD
24 W
2552 4489 PD
24 W
2430 4615 PD
24 W
2589 4552 PD
24 W
2491 4552 PD
24 W
2528 4615 PD
gr

gs 1463 388 4228 4228 MR c np
-68 -67 -69 -67 86 -22 87 -22 -18 89 -18 89 4165 3964 7 MP stroke
gs 4056 3891 320 325 MR c np
24 W
4165 3964 PD
24 W
4129 4142 PD
24 W
4302 4098 PD
24 W
4147 4053 PD
24 W
4216 4120 PD
24 W
4233 4031 PD
gr

-99 -58 -98 -57 92 -40 92 -40 6 98 7 97 4033 1772 7 MP stroke
gs 3960 1699 344 342 MR c np
24 W
4033 1772 PD
24 W
4046 1967 PD
24 W
4230 1887 PD
24 W
4040 1869 PD
24 W
4138 1927 PD
24 W
4132 1830 PD
gr

-106 0 -106 0 38 -70 38 -69 68 69 68 70 3365 388 7 MP stroke
gr

gs 3292 315 359 286 MR c np
24 W
3365 388 PD
24 W
3501 527 PD
24 W
3577 388 PD
24 W
3433 458 PD
24 W
3539 458 PD
24 W
3471 388 PD
gr

gs 1463 388 4228 4228 MR c np
0 -211 69 69 69 69 -69 37 -69 36 5690 2502 6 MP stroke
gr

gs 5479 2429 285 358 MR c np
24 W
5690 2502 PD
24 W
5552 2575 PD
24 W
5690 2713 PD
24 W
5621 2538 PD
24 W
5621 2644 PD
24 W
5690 2607 PD
gr

gs 1463 388 4228 4228 MR c np
55 82 54 81 -99 1 -100 1 45 -82 45 -83 3017 2042 7 MP stroke
gs 2835 1804 346 312 MR c np
24 W
3017 2042 PD
24 W
3107 1877 PD
24 W
2908 1879 PD
24 W
3062 1959 PD
24 W
3007 1878 PD
24 W
2962 1960 PD
gr

87 -3 87 -4 -45 83 -45 82 -42 -79 -42 -79 3191 2035 7 MP stroke
gs 2944 1804 321 312 MR c np
24 W
3191 2035 PD
24 W
3107 1877 PD
24 W
3017 2042 PD
24 W
3149 1956 PD
24 W
3062 1959 PD
24 W
3104 2038 PD
gr

69 -78 68 -78 30 92 29 91 -98 -13 -98 -14 2629 2911 7 MP stroke
gs 2360 2811 343 330 MR c np
24 W
2629 2911 PD
24 W
2433 2884 PD
24 W
2492 3067 PD
24 W
2531 2897 PD
24 W
2462 2975 PD
24 W
2560 2989 PD
gr

72 74 71 73 -98 14 -98 14 27 -87 26 -88 3139 729 7 MP stroke
gs 2923 481 343 322 MR c np
24 W
3139 729 PD
24 W
3192 554 PD
24 W
2996 582 PD
24 W
3165 641 PD
24 W
3094 568 PD
24 W
3067 655 PD
gr

-46 -76 -46 -76 98 14 98 13 -52 63 -52 62 2537 2759 7 MP stroke
gs 2360 2686 343 299 MR c np
24 W
2537 2759 PD
24 W
2433 2884 PD
24 W
2629 2911 PD
24 W
2485 2821 PD
24 W
2531 2897 PD
24 W
2583 2835 PD
gr

76 63 76 62 -80 39 -80 40 4 -102 4 -102 5496 3084 7 MP stroke
gs 5271 2807 307 351 MR c np
24 W
5496 3084 PD
24 W
5504 2880 PD
24 W
5344 2959 PD
24 W
5500 2982 PD
24 W
5424 2920 PD
24 W
5420 3021 PD
gr

83 71 82 71 -96 22 -97 23 14 -94 14 -93 3177 1552 7 MP stroke
gs 2939 1292 340 334 MR c np
24 W
3177 1552 PD
24 W
3205 1365 PD
24 W
3012 1410 PD
24 W
3191 1459 PD
24 W
3108 1388 PD
24 W
3094 1481 PD
gr

22 95 22 95 -80 -42 -80 -41 58 -54 58 -53 2280 920 7 MP stroke
gs 2163 657 307 337 MR c np
24 W
2280 920 PD
24 W
2396 813 PD
24 W
2236 730 PD
24 W
2338 867 PD
24 W
2316 772 PD
24 W
2258 825 PD
gr

95 21 95 22 -53 59 -53 58 -42 -80 -42 -80 5348 3841 7 MP stroke
gs 5085 3608 337 307 MR c np
24 W
5348 3841 PD
24 W
5264 3681 PD
24 W
5158 3798 PD
24 W
5306 3761 PD
24 W
5211 3739 PD
24 W
5253 3820 PD
gr

83 -38 82 -37 -14 93 -14 94 -68 -56 -69 -56 3342 1477 7 MP stroke
gs 3104 1292 312 334 MR c np
24 W
3342 1477 PD
24 W
3205 1365 PD
24 W
3177 1552 PD
24 W
3273 1421 PD
24 W
3191 1459 PD
24 W
3259 1515 PD
gr

98 5 98 6 -41 70 -40 70 -58 -76 -57 -75 2136 1326 7 MP stroke
gs 1867 1102 343 298 MR c np
24 W
2136 1326 PD
24 W
2021 1175 PD
24 W
1940 1315 PD
24 W
2079 1251 PD
24 W
1981 1245 PD
24 W
2038 1321 PD
gr

16 97 15 97 -89 -15 -90 -15 74 -82 74 -82 2144 2530 7 MP stroke
gs 2040 2263 326 341 MR c np
24 W
2144 2530 PD
24 W
2292 2366 PD
24 W
2113 2336 PD
24 W
2218 2448 PD
24 W
2202 2351 PD
24 W
2128 2433 PD
gr

24 98 23 97 -86 -51 -85 -52 62 -46 62 -46 4778 4151 7 MP stroke
gs 4658 3883 318 342 MR c np
24 W
4778 4151 PD
24 W
4902 4059 PD
24 W
4731 3956 PD
24 W
4840 4105 PD
24 W
4817 4007 PD
24 W
4754 4053 PD
gr

42 84 42 85 -77 3 -77 4 35 -88 35 -88 5488 3421 7 MP stroke
gs 5331 3172 301 323 MR c np
24 W
5488 3421 PD
24 W
5558 3245 PD
24 W
5404 3252 PD
24 W
5523 3333 PD
24 W
5481 3249 PD
24 W
5446 3337 PD
gr

7 87 6 87 -79 -37 -79 -37 73 -50 72 -50 4422 2577 7 MP stroke
gs 4336 2330 305 321 MR c np
24 W
4422 2577 PD
24 W
4567 2477 PD
24 W
4409 2403 PD
24 W
4494 2527 PD
24 W
4488 2440 PD
24 W
4415 2490 PD
gr

84 42 84 42 -88 35 -88 35 4 -77 4 -77 2825 674 7 MP stroke
gs 2584 447 323 301 MR c np
24 W
2825 674 PD
24 W
2833 520 PD
24 W
2657 590 PD
24 W
2829 597 PD
24 W
2745 555 PD
24 W
2741 632 PD
gr

86 63 85 62 -90 36 -89 35 4 -98 4 -98 3757 3020 7 MP stroke
gs 3513 2751 326 343 MR c np
24 W
3757 3020 PD
24 W
3765 2824 PD
24 W
3586 2895 PD
24 W
3761 2922 PD
24 W
3676 2859 PD
24 W
3671 2957 PD
gr

-72 62 -73 62 -6 -99 -7 -99 79 37 79 37 4409 2403 7 MP stroke
gs 4336 2206 305 345 MR c np
24 W
4409 2403 PD
24 W
4567 2477 PD
24 W
4554 2279 PD
24 W
4488 2440 PD
24 W
4560 2378 PD
24 W
4481 2341 PD
gr

-90 -50 -89 -49 85 -35 86 -35 4 85 4 84 4324 4313 7 MP stroke
gs 4251 4240 326 316 MR c np
24 W
4324 4313 PD
24 W
4332 4482 PD
24 W
4503 4412 PD
24 W
4328 4397 PD
24 W
4418 4447 PD
24 W
4414 4363 PD
gr

-50 -90 -50 -89 84 4 84 4 -34 86 -34 85 1664 1575 7 MP stroke
gs 1523 1502 315 326 MR c np
24 W
1664 1575 PD
24 W
1596 1746 PD
24 W
1764 1754 PD
24 W
1630 1660 PD
24 W
1680 1750 PD
24 W
1714 1665 PD
gr

101 -37 101 -37 -35 88 -35 88 -66 -51 -66 -51 5690 3347 7 MP stroke
gr

gs 5415 3172 349 323 MR c np
24 W
5690 3347 PD
24 W
5558 3245 PD
24 W
5488 3421 PD
24 W
5624 3296 PD
24 W
5523 3333 PD
24 W
5589 3384 PD
gr

gs 1463 388 4228 4228 MR c np
78 -52 78 -51 -4 98 -4 98 -74 -46 -74 -47 3913 2917 7 MP stroke
gs 3684 2751 303 343 MR c np
24 W
3913 2917 PD
24 W
3765 2824 PD
24 W
3757 3020 PD
24 W
3839 2870 PD
24 W
3761 2922 PD
24 W
3835 2969 PD
gr

98 38 98 38 -67 51 -66 50 -31 -88 -32 -89 1659 1923 7 MP stroke
gr

gs 1390 1673 343 324 MR c np
24 W
1659 1923 PD
24 W
1596 1746 PD
24 W
1463 1847 PD
24 W
1627 1834 PD
24 W
1530 1796 PD
24 W
1561 1885 PD
gr

gs 1463 388 4228 4228 MR c np
33 -101 34 -102 52 67 52 66 -86 35 -85 35 4503 4412 7 MP stroke
gr

gs 4259 4339 318 350 MR c np
24 W
4503 4412 PD
24 W
4332 4482 PD
24 W
4436 4615 PD
24 W
4418 4447 PD
24 W
4384 4548 PD
24 W
4470 4513 PD
gr

gs 1463 388 4228 4228 MR c np
-37 101 -37 101 -51 -66 -51 -66 88 -35 88 -35 2657 590 7 MP stroke
gr

gs 2584 315 323 349 MR c np
24 W
2657 590 PD
24 W
2833 520 PD
24 W
2731 388 PD
24 W
2745 555 PD
24 W
2782 454 PD
24 W
2694 489 PD
gr

gs 1463 388 4228 4228 MR c np
-101 34 -100 33 34 -85 34 -86 66 52 67 52 1463 1642 7 MP stroke
gr

gs 1390 1502 348 318 MR c np
24 W
1463 1642 PD
24 W
1596 1746 PD
24 W
1664 1575 PD
24 W
1530 1694 PD
24 W
1630 1660 PD
24 W
1564 1608 PD
gr

gs 1463 388 4228 4228 MR c np
52 -85 53 -84 32 89 31 88 -84 -4 -84 -4 1764 1754 7 MP stroke
gs 1523 1673 315 324 MR c np
24 W
1764 1754 PD
24 W
1596 1746 PD
24 W
1659 1923 PD
24 W
1680 1750 PD
24 W
1627 1834 PD
24 W
1712 1839 PD
gr

-104 -18 -105 -18 61 -56 61 -55 44 74 43 73 4667 1751 7 MP stroke
gs 4594 1678 356 294 MR c np
24 W
4667 1751 PD
24 W
4754 1898 PD
24 W
4876 1787 PD
24 W
4710 1824 PD
24 W
4815 1843 PD
24 W
4771 1769 PD
gr

38 98 37 98 -88 -32 -88 -31 50 -66 51 -67 4231 4615 7 MP stroke
gr

gs 4083 4346 323 343 MR c np
24 W
4231 4615 PD
24 W
4332 4482 PD
24 W
4156 4419 PD
24 W
4282 4548 PD
24 W
4244 4451 PD
24 W
4193 4517 PD
gr

gs 1463 388 4228 4228 MR c np
-94 21 -94 22 41 -80 41 -80 53 58 53 59 5160 1204 7 MP stroke
gs 5087 1088 335 307 MR c np
24 W
5160 1204 PD
24 W
5266 1321 PD
24 W
5348 1161 PD
24 W
5213 1263 PD
24 W
5307 1241 PD
24 W
5254 1183 PD
gr

0 195 -68 -43 -68 -42 68 -55 68 -55 1463 4038 6 MP stroke
gr

gs 1390 3770 283 342 MR c np
24 W
1463 4038 PD
24 W
1599 3928 PD
24 W
1463 3843 PD
24 W
1531 3983 PD
24 W
1531 3886 PD
24 W
1463 3940 PD
gr

gs 1463 388 4228 4228 MR c np
-84 53 -84 53 -4 -84 -4 -85 88 31 88 32 4156 4419 7 MP stroke
gs 4083 4240 323 316 MR c np
24 W
4156 4419 PD
24 W
4332 4482 PD
24 W
4324 4313 PD
24 W
4244 4451 PD
24 W
4328 4397 PD
24 W
4240 4366 PD
gr

97 0 98 0 -55 68 -54 68 -43 -68 -43 -68 2235 4615 7 MP stroke
gr

gs 1967 4406 342 283 MR c np
24 W
2235 4615 PD
24 W
2149 4479 PD
24 W
2040 4615 PD
24 W
2192 4547 PD
24 W
2095 4547 PD
24 W
2138 4615 PD
gr

gs 1463 388 4228 4228 MR c np
1 -105 1 -106 74 50 74 50 -75 56 -75 55 2792 2079 7 MP stroke
gs 2569 2006 297 358 MR c np
24 W
2792 2079 PD
24 W
2642 2190 PD
24 W
2790 2290 PD
24 W
2717 2134 PD
24 W
2716 2240 PD
24 W
2791 2184 PD
gr

83 -23 83 -22 -8 85 -8 85 -75 -62 -75 -63 4196 2092 7 MP stroke
gs 3957 1894 313 317 MR c np
24 W
4196 2092 PD
24 W
4046 1967 PD
24 W
4030 2137 PD
24 W
4121 2029 PD
24 W
4038 2052 PD
24 W
4113 2115 PD
gr

-97 33 -97 34 28 -87 29 -86 68 53 69 53 3648 864 7 MP stroke
gs 3575 724 341 320 MR c np
24 W
3648 864 PD
24 W
3785 970 PD
24 W
3842 797 PD
24 W
3717 917 PD
24 W
3814 884 PD
24 W
3745 831 PD
gr

32 -98 32 -99 63 66 62 65 -94 33 -95 33 5281 2236 7 MP stroke
gs 5019 2163 336 344 MR c np
24 W
5281 2236 PD
24 W
5092 2302 PD
24 W
5217 2433 PD
24 W
5186 2269 PD
24 W
5154 2367 PD
24 W
5249 2334 PD
gr

13 -101 13 -101 75 61 74 61 -87 40 -88 40 3906 3647 7 MP stroke
gs 3658 3574 322 349 MR c np
24 W
3906 3647 PD
24 W
3731 3727 PD
24 W
3880 3849 PD
24 W
3818 3687 PD
24 W
3805 3788 PD
24 W
3893 3748 PD
gr

17 -103 17 -102 75 63 75 62 -92 40 -92 40 4230 1887 7 MP stroke
gs 3973 1814 331 352 MR c np
24 W
4230 1887 PD
24 W
4046 1967 PD
24 W
4196 2092 PD
24 W
4138 1927 PD
24 W
4121 2029 PD
24 W
4213 1990 PD
gr

57 -68 58 -69 36 65 37 65 -94 3 -94 4 2507 1657 7 MP stroke
gs 2246 1584 335 284 MR c np
24 W
2507 1657 PD
24 W
2319 1664 PD
24 W
2392 1794 PD
24 W
2413 1661 PD
24 W
2356 1729 PD
24 W
2450 1725 PD
gr

-81 61 -80 61 -3 -96 -2 -95 83 35 83 34 4881 2616 7 MP stroke
gs 4808 2421 313 338 MR c np
24 W
4881 2616 PD
24 W
5047 2685 PD
24 W
5042 2494 PD
24 W
4964 2650 PD
24 W
5045 2590 PD
24 W
4962 2555 PD
gr

98 11 99 12 -65 60 -64 61 -34 -72 -34 -72 1961 1777 7 MP stroke
gs 1691 1560 344 291 MR c np
24 W
1961 1777 PD
24 W
1893 1633 PD
24 W
1764 1754 PD
24 W
1927 1705 PD
24 W
1829 1694 PD
24 W
1863 1766 PD
gr

11 107 11 108 -67 -50 -68 -50 57 -58 56 -57 4324 4313 7 MP stroke
gs 4229 4025 282 362 MR c np
24 W
4324 4313 PD
24 W
4437 4198 PD
24 W
4302 4098 PD
24 W
4380 4256 PD
24 W
4369 4148 PD
24 W
4313 4206 PD
gr

102 0 103 0 -51 67 -50 66 -52 -66 -52 -67 4436 4615 7 MP stroke
gr

gs 4158 4409 352 280 MR c np
24 W
4436 4615 PD
24 W
4332 4482 PD
24 W
4231 4615 PD
24 W
4384 4548 PD
24 W
4282 4548 PD
24 W
4334 4615 PD
gr

gs 1463 388 4228 4228 MR c np
0 205 -67 -52 -66 -52 66 -50 67 -51 1463 1847 6 MP stroke
gr

gs 1390 1569 280 352 MR c np
24 W
1463 1847 PD
24 W
1596 1746 PD
24 W
1463 1642 PD
24 W
1530 1796 PD
24 W
1530 1694 PD
24 W
1463 1744 PD
gr

gs 1463 388 4228 4228 MR c np
94 17 94 16 -68 66 -68 65 -26 -82 -26 -82 3304 3095 7 MP stroke
gs 3043 2858 335 311 MR c np
24 W
3304 3095 PD
24 W
3252 2931 PD
24 W
3116 3062 PD
24 W
3278 3013 PD
24 W
3184 2996 PD
24 W
3210 3078 PD
gr

11 83 11 83 -79 -18 -79 -17 68 -65 68 -66 3116 3062 7 MP stroke
gs 3021 2823 305 313 MR c np
24 W
3116 3062 PD
24 W
3252 2931 PD
24 W
3094 2896 PD
24 W
3184 2996 PD
24 W
3173 2914 PD
24 W
3105 2979 PD
gr

70 -83 69 -84 22 96 22 96 -92 -13 -91 -12 4097 2307 7 MP stroke
gs 3841 2209 330 339 MR c np
24 W
4097 2307 PD
24 W
3914 2282 PD
24 W
3958 2474 PD
24 W
4006 2295 PD
24 W
3936 2378 PD
24 W
4027 2390 PD
gr

-93 -6 -94 -6 32 -73 32 -74 62 79 61 80 5066 1663 7 MP stroke
gs 4993 1590 334 306 MR c np
24 W
5066 1663 PD
24 W
5189 1822 PD
24 W
5253 1675 PD
24 W
5127 1743 PD
24 W
5221 1748 PD
24 W
5159 1669 PD
gr

-62 81 -61 81 -15 -81 -15 -81 77 0 76 0 4284 2961 7 MP stroke
gs 4211 2726 300 309 MR c np
24 W
4284 2961 PD
24 W
4437 2961 PD
24 W
4407 2799 PD
24 W
4360 2961 PD
24 W
4422 2880 PD
24 W
4346 2880 PD
gr

-25 98 -24 97 -63 -46 -63 -45 88 -52 87 -52 4727 1048 7 MP stroke
gs 4654 780 322 342 MR c np
24 W
4727 1048 PD
24 W
4902 944 PD
24 W
4776 853 PD
24 W
4814 996 PD
24 W
4839 899 PD
24 W
4752 950 PD
gr

-106 0 -106 0 55 -66 55 -66 51 66 51 66 2731 388 7 MP stroke
gr

gs 2658 315 359 279 MR c np
24 W
2731 388 PD
24 W
2833 520 PD
24 W
2943 388 PD
24 W
2782 454 PD
24 W
2888 454 PD
24 W
2837 388 PD
gr

gs 1463 388 4228 4228 MR c np
0 -212 66 51 66 51 -66 55 -66 55 5690 3135 6 MP stroke
gr

gs 5485 3062 279 359 MR c np
24 W
5690 3135 PD
24 W
5558 3245 PD
24 W
5690 3347 PD
24 W
5624 3190 PD
24 W
5624 3296 PD
24 W
5690 3241 PD
gr

gs 1463 388 4228 4228 MR c np
0 -212 62 48 61 48 -61 58 -62 58 5690 2290 6 MP stroke
gr

gs 5494 2217 270 359 MR c np
24 W
5690 2290 PD
24 W
5567 2406 PD
24 W
5690 2502 PD
24 W
5628 2348 PD
24 W
5628 2454 PD
24 W
5690 2396 PD
gr

gs 1463 388 4228 4228 MR c np
-105 0 -106 0 58 -62 58 -61 48 61 47 62 3577 388 7 MP stroke
gr

gs 3504 315 358 270 MR c np
24 W
3577 388 PD
24 W
3672 511 PD
24 W
3788 388 PD
24 W
3624 450 PD
24 W
3730 450 PD
24 W
3682 388 PD
gr

gs 1463 388 4228 4228 MR c np
59 65 59 64 -97 0 -96 0 37 -64 38 -65 2244 1793 7 MP stroke
gs 2053 1591 340 276 MR c np
24 W
2244 1793 PD
24 W
2319 1664 PD
24 W
2126 1664 PD
24 W
2282 1728 PD
24 W
2223 1664 PD
24 W
2185 1728 PD
gr

89 -12 90 -12 -31 71 -31 72 -59 -59 -58 -60 3504 3349 7 MP stroke
gs 3252 3157 326 290 MR c np
24 W
3504 3349 PD
24 W
3387 3230 PD
24 W
3325 3373 PD
24 W
3446 3289 PD
24 W
3356 3302 PD
24 W
3415 3361 PD
gr

-94 -21 -94 -22 62 -58 61 -58 33 80 32 79 5502 2247 7 MP stroke
gr

gs 5429 2174 335 306 MR c np
24 W
5502 2247 PD
24 W
5567 2406 PD
24 W
5690 2290 PD
24 W
5534 2326 PD
24 W
5628 2348 PD
24 W
5596 2268 PD
gr

gs 1463 388 4228 4228 MR c np
-22 -95 -21 -94 79 33 80 33 -58 61 -58 62 3788 388 7 MP stroke
gr

gs 3599 315 306 336 MR c np
24 W
3788 388 PD
24 W
3672 511 PD
24 W
3831 577 PD
24 W
3730 450 PD
24 W
3752 544 PD
24 W
3810 483 PD
gr

gs 1463 388 4228 4228 MR c np
79 60 78 61 -80 24 -80 25 2 -85 1 -85 2896 4279 7 MP stroke
gs 2666 4036 307 317 MR c np
24 W
2896 4279 PD
24 W
2899 4109 PD
24 W
2739 4158 PD
24 W
2897 4194 PD
24 W
2819 4134 PD
24 W
2817 4219 PD
gr

52 71 51 71 -82 2 -83 2 31 -73 31 -73 1902 3325 7 MP stroke
gs 1726 3106 312 293 MR c np
24 W
1902 3325 PD
24 W
1964 3179 PD
24 W
1799 3183 PD
24 W
1933 3252 PD
24 W
1881 3181 PD
24 W
1850 3254 PD
gr

75 49 75 49 -65 38 -66 38 -10 -87 -9 -87 4434 1417 7 MP stroke
gs 4211 1170 297 321 MR c np
24 W
4434 1417 PD
24 W
4415 1243 PD
24 W
4284 1319 PD
24 W
4425 1330 PD
24 W
4349 1281 PD
24 W
4359 1368 PD
gr

-23 89 -22 89 -66 -61 -66 -61 88 -28 89 -28 3146 2213 7 MP stroke
gs 3073 1962 324 325 MR c np
24 W
3146 2213 PD
24 W
3323 2157 PD
24 W
3191 2035 PD
24 W
3235 2185 PD
24 W
3257 2096 PD
24 W
3169 2124 PD
gr

27 -80 26 -80 43 68 43 68 -69 12 -70 12 2288 4455 7 MP stroke
gr

gs 2076 4382 286 307 MR c np
24 W
2288 4455 PD
24 W
2149 4479 PD
24 W
2235 4615 PD
24 W
2218 4467 PD
24 W
2192 4547 PD
24 W
2261 4535 PD
gr

gs 1463 388 4228 4228 MR c np
-80 26 -79 27 11 -69 12 -69 68 42 68 43 1463 3843 7 MP stroke
gr

gs 1390 3717 306 285 MR c np
24 W
1463 3843 PD
24 W
1599 3928 PD
24 W
1622 3790 PD
24 W
1531 3886 PD
24 W
1611 3859 PD
24 W
1543 3817 PD
gr

gs 1463 388 4228 4228 MR c np
-53 60 -53 60 -23 -89 -23 -89 76 29 76 29 3740 1256 7 MP stroke
gs 3667 1063 299 325 MR c np
24 W
3740 1256 PD
24 W
3892 1314 PD
24 W
3846 1136 PD
24 W
3816 1285 PD
24 W
3869 1225 PD
24 W
3793 1196 PD
gr

72 52 72 52 -80 32 -79 33 7 -85 8 -84 5552 2575 7 MP stroke
gs 5335 2333 306 316 MR c np
24 W
5552 2575 PD
24 W
5567 2406 PD
24 W
5408 2471 PD
24 W
5560 2491 PD
24 W
5488 2439 PD
24 W
5480 2523 PD
gr

69 -36 69 -37 -8 84 -7 85 -61 -48 -62 -48 5690 2502 7 MP stroke
gr

gs 5479 2333 285 316 MR c np
24 W
5690 2502 PD
24 W
5567 2406 PD
24 W
5552 2575 PD
24 W
5628 2454 PD
24 W
5560 2491 PD
24 W
5621 2538 PD
gr

gs 1463 388 4228 4228 MR c np
53 72 53 71 -85 8 -86 8 33 -80 32 -79 3607 670 7 MP stroke
gs 3428 438 318 306 MR c np
24 W
3607 670 PD
24 W
3672 511 PD
24 W
3501 527 PD
24 W
3639 591 PD
24 W
3586 519 PD
24 W
3554 598 PD
gr

-38 69 -38 70 -47 -62 -48 -61 86 -8 85 -8 3501 527 7 MP stroke
gr

gs 3428 315 318 286 MR c np
24 W
3501 527 PD
24 W
3672 511 PD
24 W
3577 388 PD
24 W
3586 519 PD
24 W
3624 450 PD
24 W
3539 458 PD
gr

gs 1463 388 4228 4228 MR c np
57 -64 57 -63 26 82 26 82 -83 -19 -83 -18 3418 2968 7 MP stroke
gs 3179 2858 313 311 MR c np
24 W
3418 2968 PD
24 W
3252 2931 PD
24 W
3304 3095 PD
24 W
3335 2950 PD
24 W
3278 3013 PD
24 W
3361 3032 PD
gr

63 64 64 63 -88 29 -87 29 24 -92 24 -93 2941 2980 7 MP stroke
gs 2741 2722 322 332 MR c np
24 W
2941 2980 PD
24 W
2989 2795 PD
24 W
2814 2853 PD
24 W
2965 2887 PD
24 W
2902 2824 PD
24 W
2878 2916 PD
gr

76 -42 77 -42 -24 93 -24 92 -53 -50 -52 -51 3094 2896 7 MP stroke
gs 2868 2722 300 332 MR c np
24 W
3094 2896 PD
24 W
2989 2795 PD
24 W
2941 2980 PD
24 W
3042 2845 PD
24 W
2965 2887 PD
24 W
3018 2938 PD
gr

-22 -85 -23 -85 83 18 83 19 -61 66 -60 67 3373 2798 7 MP stroke
gs 3179 2725 313 317 MR c np
24 W
3373 2798 PD
24 W
3252 2931 PD
24 W
3418 2968 PD
24 W
3313 2865 PD
24 W
3335 2950 PD
24 W
3395 2883 PD
gr

-71 61 -72 61 6 -99 6 -99 66 38 65 38 4284 1167 7 MP stroke
gs 4211 972 290 345 MR c np
24 W
4284 1167 PD
24 W
4415 1243 PD
24 W
4427 1045 PD
24 W
4349 1205 PD
24 W
4421 1144 PD
24 W
4355 1106 PD
gr

85 -46 86 -46 -4 77 -4 77 -82 -31 -81 -31 2996 582 7 MP stroke
gs 2752 447 318 301 MR c np
24 W
2996 582 PD
24 W
2833 520 PD
24 W
2825 674 PD
24 W
2915 551 PD
24 W
2829 597 PD
24 W
2911 628 PD
gr

-26 -97 -27 -97 81 31 82 31 -55 66 -55 66 2943 388 7 MP stroke
gr

gs 2760 315 310 341 MR c np
24 W
2943 388 PD
24 W
2833 520 PD
24 W
2996 582 PD
24 W
2888 454 PD
24 W
2915 551 PD
24 W
2969 485 PD
gr

gs 1463 388 4228 4228 MR c np
-46 84 -46 84 -31 -80 -31 -81 77 -4 77 -3 5404 3252 7 MP stroke
gs 5331 3011 301 315 MR c np
24 W
5404 3252 PD
24 W
5558 3245 PD
24 W
5496 3084 PD
24 W
5481 3249 PD
24 W
5527 3164 PD
24 W
5450 3168 PD
gr

66 61 66 61 -65 31 -66 31 -1 -92 0 -92 3323 2157 7 MP stroke
gs 3118 1900 279 331 MR c np
24 W
3323 2157 PD
24 W
3322 1973 PD
24 W
3191 2035 PD
24 W
3323 2065 PD
24 W
3256 2004 PD
24 W
3257 2096 PD
gr

-97 -26 -97 -25 66 -55 66 -55 31 81 31 80 5496 3084 7 MP stroke
gr

gs 5423 3011 341 308 MR c np
24 W
5496 3084 PD
24 W
5558 3245 PD
24 W
5690 3135 PD
24 W
5527 3164 PD
24 W
5624 3190 PD
24 W
5593 3110 PD
gr

gs 1463 388 4228 4228 MR c np
-55 66 -55 66 -35 -81 -34 -81 90 15 89 15 2113 2336 7 MP stroke
gs 2040 2131 326 309 MR c np
24 W
2113 2336 PD
24 W
2292 2366 PD
24 W
2223 2204 PD
24 W
2202 2351 PD
24 W
2258 2285 PD
24 W
2168 2270 PD
gr

-9 -93 -9 -93 72 31 72 32 -63 61 -63 62 3389 3546 7 MP stroke
gs 3190 3473 291 333 MR c np
24 W
3389 3546 PD
24 W
3263 3669 PD
24 W
3407 3732 PD
24 W
3326 3608 PD
24 W
3335 3701 PD
24 W
3398 3639 PD
gr

-68 -58 -68 -59 75 -24 75 -25 -7 83 -7 83 4262 726 7 MP stroke
gs 4175 653 297 313 MR c np
24 W
4262 726 PD
24 W
4248 892 PD
24 W
4398 843 PD
24 W
4255 809 PD
24 W
4323 867 PD
24 W
4330 784 PD
gr

79 17 79 18 -51 67 -51 67 -28 -84 -28 -85 3252 2931 7 MP stroke
gs 3021 2689 305 316 MR c np
24 W
3252 2931 PD
24 W
3196 2762 PD
24 W
3094 2896 PD
24 W
3224 2846 PD
24 W
3145 2829 PD
24 W
3173 2914 PD
gr

60 -67 61 -66 28 85 28 84 -89 -18 -88 -18 3373 2798 7 MP stroke
gs 3123 2689 324 316 MR c np
24 W
3373 2798 PD
24 W
3196 2762 PD
24 W
3252 2931 PD
24 W
3285 2780 PD
24 W
3224 2846 PD
24 W
3313 2865 PD
gr

71 55 70 54 -89 28 -88 28 18 -82 18 -83 3287 2322 7 MP stroke
gs 3073 2084 324 312 MR c np
24 W
3287 2322 PD
24 W
3323 2157 PD
24 W
3146 2213 PD
24 W
3305 2239 PD
24 W
3235 2185 PD
24 W
3216 2267 PD
gr

-51 -69 -50 -70 82 -4 83 -4 -32 74 -32 73 5253 1675 7 MP stroke
gs 5116 1602 312 294 MR c np
24 W
5253 1675 PD
24 W
5189 1822 PD
24 W
5354 1814 PD
24 W
5221 1748 PD
24 W
5272 1818 PD
24 W
5304 1744 PD
gr

24 95 25 94 -83 -34 -83 -35 58 -60 59 -60 4930 2805 7 MP stroke
gs 4808 2543 313 336 MR c np
24 W
4930 2805 PD
24 W
5047 2685 PD
24 W
4881 2616 PD
24 W
4989 2745 PD
24 W
4964 2650 PD
24 W
4906 2710 PD
gr

74 1 74 0 -38 65 -37 64 -37 -65 -36 -65 2392 1794 7 MP stroke
gs 2171 1591 295 277 MR c np
24 W
2392 1794 PD
24 W
2319 1664 PD
24 W
2244 1793 PD
24 W
2356 1729 PD
24 W
2282 1728 PD
24 W
2318 1793 PD
gr

10 95 11 94 -76 -29 -76 -29 65 -65 66 -66 3761 1445 7 MP stroke
gs 3667 1183 299 336 MR c np
24 W
3761 1445 PD
24 W
3892 1314 PD
24 W
3740 1256 PD
24 W
3827 1379 PD
24 W
3816 1285 PD
24 W
3751 1350 PD
gr

77 -41 76 -42 0 92 1 92 -77 -50 -77 -51 3476 2074 7 MP stroke
gs 3249 1900 301 331 MR c np
24 W
3476 2074 PD
24 W
3322 1973 PD
24 W
3323 2157 PD
24 W
3399 2023 PD
24 W
3323 2065 PD
24 W
3399 2115 PD
gr

0 152 -65 -38 -66 -38 66 -38 65 -38 4284 1319 6 MP stroke
gs 4211 1094 278 299 MR c np
24 W
4284 1319 PD
24 W
4415 1243 PD
24 W
4284 1167 PD
24 W
4349 1281 PD
24 W
4349 1205 PD
24 W
4284 1243 PD
gr

82 45 82 46 -67 45 -67 45 -15 -91 -15 -90 4456 3967 7 MP stroke
gs 4219 3713 311 328 MR c np
24 W
4456 3967 PD
24 W
4426 3786 PD
24 W
4292 3876 PD
24 W
4441 3877 PD
24 W
4359 3831 PD
24 W
4374 3922 PD
gr

-4 81 -3 82 -64 -37 -63 -36 67 -45 67 -45 4292 3876 7 MP stroke
gs 4219 3640 281 310 MR c np
24 W
4292 3876 PD
24 W
4426 3786 PD
24 W
4299 3713 PD
24 W
4359 3831 PD
24 W
4363 3750 PD
24 W
4296 3795 PD
gr

gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 8269 5000 a
 currentpoint currentpoint translate 1 0.3 div 1 0.3 div scale neg
exch neg exch translate
 8269 5000 a Black BlueViolet
4941 5445 a Fp(\017)p Black 5044 5445 a
 0. setgray
 5044 5445 a Black
5044 5445 a
 0. setgray
 5044 5445 a 102 w Fq(load)f(applied)g(o)m(v)-5
b(er)58 b(a)h(n)n(umber)f(of)i(equal)e(incremental)h(steps)4781
5691 y
 0 setgray
 4781 5691 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736
a
 0. setgray
 9293 5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g
(\226)g(p)n(.16/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 17 17
TeXDict begin 17 16 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 17/View [ /XYZ null null null ] /Title (Comparison of Methods)
/OUT pdfmark end
 5001 3450 a BlueViolet 5996 1366 a Fr(Comparison)78
b(of)f(Methods)p Black 9148 1366 a
 0 setgray
 9148 1366 a 4781 1882
a
 0. setgray
 4781 1882 a Black BlueViolet 4941 1794 a Fp(\017)p
Black 5044 1794 a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044
1794 a 102 w Fq(diagonal)59 b(scaling)p Red 426 w(DIA)-6
b(G)p Black 7619 1794 a
 0. setgray
 7619 1794 a Black BlueViolet
4941 2233 a Fp(\017)p Black 5044 2233 a
 0. setgray
 5044 2233 a Black
5044 2233 a
 0. setgray
 5044 2233 a 102 w Fq(EMF)60 b(with)g(DC-reduction)p
Red 427 w(DC-EMF)p Black 8609 2233 a
 0. setgray
 8609 2233 a Black
OliveGreen 5226 2578 a Fp(\017)p Black 5329 2578 a
 0. setgray
 5329
2578 a Black 5329 2578 a
 0. setgray
 5329 2578 a 102 w Fq(method)e(of)i(choice)e(f)
-6 b(or)59 b(elastic)h(prob)l(lems)p Black BlueViolet
4941 3115 a Fp(\017)p Black 5044 3115 a
 0. setgray
 5044 3115 a Black
5044 3115 a
 0. setgray
 5044 3115 a 102 w Fq(DC-EMF)h(applied)e(to)g(the)g(elastic)
h(par)9 b(t)p Red 426 w(ELAS-DC-EMF)p Black 10290 3115
a
 0. setgray
 10290 3115 a Black OliveGreen 5226 3459 a Fp(\017)p
Black 5329 3459 a
 0. setgray
 5329 3459 a Black 5329 3459 a
 0. setgray
 5329
3459 a 102 w Fq(plasticity)60 b(is)f(`simple)h(update')f(of)g
(elasticity)p Black OliveGreen 5226 3851 a Fp(\017)p
Black 5329 3851 a
 0. setgray
 5329 3851 a Black 5329 3851 a
 0. setgray
 5329
3851 a BlueViolet 102 w Fq(IDEA:)p Black 5987 3851 a
 0. setgray

5987 3851 a 61 w Fq(base)f(preconditioner)g(on)h(the)g(elastic)h(par)9
b(t)59 b(only)p Black OliveGreen 5226 4268 a Fp(\017)p
Black 5329 4268 a
 0. setgray
 5329 4268 a Black 5329 4268 a
 0. setgray
 5329
4268 a 102 w Fl(E)5584 4193 y Fj(el)5776 4268 y Fq(does)f(not)h(change)
f(from)h(load)g(step)g(to)g(load)g(step)p Black OliveGreen
5226 4660 a Fp(\017)p Black 5329 4660 a
 0. setgray
 5329 4660 a Black
5329 4660 a
 0. setgray
 5329 4660 a 102 w Fq(preconditioner)e Fl(P)i
Fq(need)e(only)i(be)f(calculated)f(once)h(at)h(the)5431
4904 y(beginning)f(of)i(each)e(sim)n(ulation)p Black
BlueViolet 4941 5443 a Fp(\017)p Black 5044 5443 a
 0. setgray
 5044
5443 a Black 5044 5443 a
 0. setgray
 5044 5443 a 102 w Fq(snapshot)g(at)i(f)-6
b(our)58 b(load)h(steps)272 b Fm(s)58 b Fn(=)g(1)p Fm(;)34
b Fn(25)p Fm(;)g Fn(50)p Fm(;)g Fn(100)4781 5689 y
 0 setgray
 4781
5689 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293 5736
a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g(p)n
(.17/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 18 18
TeXDict begin 18 17 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 18/View [ /XYZ null null null ] /Title (Iteration Counts: Plasticity)
/OUT pdfmark end
 5001 3450 a BlueViolet 5819 1366 a Fr(Iteration)76
b(Counts:)95 b(Plasticity)p Black 9328 1366 a
 0 setgray
 9328 1366
a 4781 1882 a
 0. setgray
 4781 1882 a Black Black 7123 1721 a
 0. setgray
 7123
1721 a 102 w Fm(\027)70 b Fn(=)58 b(0)p Fm(:)p Fn(25)4781
3624 y Fm(s)f Fn(=)h(1)5462 3624 y
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 5462 3624 a @beginspecial
123 @llx 213 @lly 503 @urx 591 @ury 3800 @rwi @setspecial
%%BeginDocument: unstr1_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr1_col.eps
%%CreationDate: 07/24/2006  21:42:35
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   123   213   503   591
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   123   213   503   591
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1271   246  4551  4539 MR c np
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

1326 4784 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
1990 4784 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2534 4784 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3198 4784 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3741 4784 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4405 4784 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4949 4784 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5613 4784 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1351 4343 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1351 3693 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1351 3043 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1351 2392 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1271 1742 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1271 1092 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1271  441 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 2851 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 2452 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 2253 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 2050 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 1944 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 4386 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 4120 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 4034 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 3844 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 3788 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 4433 mt 2091 4433 L
2031 4373 mt 2031 4493 L
3533 4167 mt 3653 4167 L
3593 4107 mt 3593 4227 L
4254 4081 mt 4374 4081 L
4314 4021 mt 4314 4141 L
4979 3891 mt 5099 3891 L
5039 3831 mt 5039 3951 L
5479 3835 mt 5599 3835 L
5539 3775 mt 5539 3895 L
1989 4391 mt 2073 4475 L
2073 4391 mt 1989 4475 L
3551 4125 mt 3635 4209 L
3635 4125 mt 3551 4209 L
4272 4039 mt 4356 4123 L
4356 4039 mt 4272 4123 L
4997 3849 mt 5081 3933 L
5081 3849 mt 4997 3933 L
5497 3793 mt 5581 3877 L
5581 3793 mt 5497 3877 L
gs 1466 388 4228 4229 MR c np
c8
500 -106 725 -203 721 -199 1562 -399 2031 2870 5 MP stroke
c9
500 -56 725 -190 721 -86 1562 -266 2031 4433 5 MP stroke
c10
500 -56 725 -190 721 -86 1562 -266 2031 4433 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
gr

0 sg
DA
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1449 4659 mt 
( ) s
5677  430 mt 
( ) s
SO
6 w
1 sg
0 564 1554 0 0 -564 1846 1295 4 MP
PP
-1554 0 0 564 1554 0 0 -564 1846 1295 5 MP stroke
4 w
DO
SO
6 w
0 sg
1846  731 mt 3400  731 L
1846 1295 mt 3400 1295 L
3400 1295 mt 3400  731 L
1846 1295 mt 1846  731 L
1846 1295 mt 3400 1295 L
1846 1295 mt 1846  731 L
1846  731 mt 3400  731 L
1846 1295 mt 3400 1295 L
3400 1295 mt 3400  731 L
1846 1295 mt 1846  731 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

2327  889 mt 
(DIAG) s
gs 1846 731 1555 565 MR c np
24 w
gr

24 w
gs 1959 692 293 293 MR c np
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 2047 819 11 MP
c8
DP
gr

c8
gs 1846 731 1555 565 MR c np
gr

0 sg
2327 1065 mt 
(DC-EMF) s
gs 1846 731 1555 565 MR c np
gs 1959 867 293 293 MR c np
0 -94 -94 0 0 94 94 0 2058 966 5 MP
c9
DP
gr

c9
gr

c9
0 sg
2327 1240 mt 
(ELAS-DC-EMF) s
gs 1846 731 1555 565 MR c np
gr

gs 1959 1041 293 293 MR c np
c10
2045 1187 mt 2165 1187 L
2105 1127 mt 2105 1247 L
2063 1145 mt 2147 1229 L
2147 1145 mt 2063 1229 L
gr

c10
gs 1846 731 1555 565 MR c np
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5462 3624 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 5462 3624 a 7361 3624 a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 7361
3624 a @beginspecial 126 @llx 215 @lly 502 @urx 589 @ury
3760 @rwi @setspecial
%%BeginDocument: unstr2_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr2_col.eps
%%CreationDate: 07/24/2006  21:41:56
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 2835 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 2431 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 2240 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 2016 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 1901 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 4214 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 3873 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 3770 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 3615 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 3536 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 4247 mt 2091 4247 L
2031 4187 mt 2031 4307 L
3533 3910 mt 3653 3910 L
3593 3850 mt 3593 3970 L
4254 3862 mt 4374 3862 L
4314 3802 mt 4314 3922 L
4979 3640 mt 5099 3640 L
5039 3580 mt 5039 3700 L
5479 3583 mt 5599 3583 L
5539 3523 mt 5539 3643 L
1989 4205 mt 2073 4289 L
2073 4205 mt 1989 4289 L
3551 3868 mt 3635 3952 L
3635 3868 mt 3551 3952 L
4272 3820 mt 4356 3904 L
4356 3820 mt 4272 3904 L
4997 3598 mt 5081 3682 L
5081 3598 mt 4997 3682 L
5497 3541 mt 5581 3625 L
5581 3541 mt 5497 3625 L
gs 1466 388 4228 4229 MR c np
c8
500 -115 725 -224 721 -191 1562 -404 2031 2854 5 MP stroke
c9
500 -79 725 -155 721 -103 1562 -341 2031 4261 5 MP stroke
c10
500 -57 725 -222 721 -48 1562 -337 2031 4247 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 7361 3624 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 7361 3624 a 1879 w Fm(s)f Fn(=)h(25)4781
5476 y Fm(s)f Fn(=)h(50)5409 5476 y
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 5409 5476 a @beginspecial
126 @llx 215 @lly 502 @urx 589 @ury 3760 @rwi @setspecial
%%BeginDocument: unstr3_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr3_col.eps
%%CreationDate: 07/24/2006  21:41:56
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 2785 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 2375 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 2172 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 1954 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 1833 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 3913 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 3516 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 3483 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 3289 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 3237 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 3950 mt 2091 3950 L
2031 3890 mt 2031 4010 L
3533 3549 mt 3653 3549 L
3593 3489 mt 3593 3609 L
4254 3517 mt 4374 3517 L
4314 3457 mt 4314 3577 L
4979 3325 mt 5099 3325 L
5039 3265 mt 5039 3385 L
5479 3250 mt 5599 3250 L
5539 3190 mt 5539 3310 L
1989 3908 mt 2073 3992 L
2073 3908 mt 1989 3992 L
3551 3507 mt 3635 3591 L
3635 3507 mt 3551 3591 L
4272 3475 mt 4356 3559 L
4356 3475 mt 4272 3559 L
4997 3283 mt 5081 3367 L
5081 3283 mt 4997 3367 L
5497 3208 mt 5581 3292 L
5581 3208 mt 5497 3292 L
gs 1466 388 4228 4229 MR c np
c8
500 -121 725 -218 721 -203 1562 -410 2031 2804 5 MP stroke
c9
500 -52 725 -194 721 -33 1562 -397 2031 3960 5 MP stroke
c10
500 -75 725 -192 721 -32 1562 -401 2031 3950 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5409 5476 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 5409 5476 a 7288 5476 a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 7288
5476 a @beginspecial 126 @llx 215 @lly 502 @urx 589 @ury
3760 @rwi @setspecial
%%BeginDocument: unstr4_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr4_col.eps
%%CreationDate: 07/24/2006  21:41:56
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 2702 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 2292 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 2101 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 1856 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 1761 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 3797 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 3321 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 3321 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 3111 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 3076 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 3817 mt 2091 3817 L
2031 3757 mt 2031 3877 L
3533 3352 mt 3653 3352 L
3593 3292 mt 3593 3412 L
4254 3325 mt 4374 3325 L
4314 3265 mt 4314 3385 L
4979 3136 mt 5099 3136 L
5039 3076 mt 5039 3196 L
5479 3107 mt 5599 3107 L
5539 3047 mt 5539 3167 L
1989 3775 mt 2073 3859 L
2073 3775 mt 1989 3859 L
3551 3310 mt 3635 3394 L
3635 3310 mt 3551 3394 L
4272 3283 mt 4356 3367 L
4356 3283 mt 4272 3367 L
4997 3094 mt 5081 3178 L
5081 3094 mt 4997 3178 L
5497 3065 mt 5581 3149 L
5581 3065 mt 5497 3149 L
gs 1466 388 4228 4229 MR c np
c8
500 -95 725 -245 721 -191 1562 -410 2031 2721 5 MP stroke
c9
500 -35 725 -210 721 0 1562 -476 2031 3844 5 MP stroke
c10
500 -29 725 -189 721 -27 1562 -465 2031 3817 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 7288 5476 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 7288 5476 a 1879 w Fm(s)g Fn(=)g(100)9898
5476 y
 0 setgray
 9898 5476 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736
a
 0. setgray
 9293 5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g
(\226)g(p)n(.18/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 19 19
TeXDict begin 19 18 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 19/View [ /XYZ null null null ] /Title (Iteration Counts: Plasticity)
/OUT pdfmark end
 5001 3450 a BlueViolet 5819 1366 a Fr(Iteration)76
b(Counts:)95 b(Plasticity)p Black 9328 1366 a
 0 setgray
 9328 1366
a 4781 1882 a
 0. setgray
 4781 1882 a Black Black 7123 1721 a
 0. setgray
 7123
1721 a 102 w Fm(\027)70 b Fn(=)58 b(0)p Fm(:)p Fn(49)4781
3605 y Fm(s)f Fn(=)h(1)5462 3605 y
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 5462 3605 a @beginspecial
126 @llx 215 @lly 502 @urx 589 @ury 3760 @rwi @setspecial
%%BeginDocument: unstr5_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr5_col.eps
%%CreationDate: 07/24/2006  21:41:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 1975 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 1592 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 1372 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 1041 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 1081 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 3432 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 3253 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 3124 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 2943 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 2794 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 3479 mt 2091 3479 L
2031 3419 mt 2031 3539 L
3533 3300 mt 3653 3300 L
3593 3240 mt 3593 3360 L
4254 3171 mt 4374 3171 L
4314 3111 mt 4314 3231 L
4979 2990 mt 5099 2990 L
5039 2930 mt 5039 3050 L
5479 2841 mt 5599 2841 L
5539 2781 mt 5539 2901 L
1989 3437 mt 2073 3521 L
2073 3437 mt 1989 3521 L
3551 3258 mt 3635 3342 L
3635 3258 mt 3551 3342 L
4272 3129 mt 4356 3213 L
4356 3129 mt 4272 3213 L
4997 2948 mt 5081 3032 L
5081 2948 mt 4997 3032 L
5497 2799 mt 5581 2883 L
5581 2799 mt 5497 2883 L
gs 1466 388 4228 4229 MR c np
c8
500 40 725 -331 721 -220 1562 -383 2031 1994 5 MP stroke
c9
500 -149 725 -181 721 -129 1562 -179 2031 3479 5 MP stroke
c10
500 -149 725 -181 721 -129 1562 -179 2031 3479 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5462 3605 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 5462 3605 a 7341 3605 a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 7341
3605 a @beginspecial 126 @llx 215 @lly 502 @urx 589 @ury
3760 @rwi @setspecial
%%BeginDocument: unstr6_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr6_col.eps
%%CreationDate: 07/24/2006  21:41:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 1836 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 1453 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 1265 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 1003 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 949 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 3047 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 2730 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 2595 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 2458 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 2345 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 3094 mt 2091 3094 L
2031 3034 mt 2031 3154 L
3533 2783 mt 3653 2783 L
3593 2723 mt 3593 2843 L
4254 2644 mt 4374 2644 L
4314 2584 mt 4314 2704 L
4979 2508 mt 5099 2508 L
5039 2448 mt 5039 2568 L
5479 2392 mt 5599 2392 L
5539 2332 mt 5539 2452 L
1989 3052 mt 2073 3136 L
2073 3052 mt 1989 3136 L
3551 2741 mt 3635 2825 L
3635 2741 mt 3551 2825 L
4272 2602 mt 4356 2686 L
4356 2602 mt 4272 2686 L
4997 2466 mt 5081 2550 L
5081 2466 mt 4997 2550 L
5497 2350 mt 5581 2434 L
5581 2350 mt 5497 2434 L
gs 1466 388 4228 4229 MR c np
c8
500 -54 725 -262 721 -188 1562 -383 2031 1855 5 MP stroke
c9
500 -113 725 -137 721 -135 1562 -317 2031 3094 5 MP stroke
c10
500 -116 725 -136 721 -139 1562 -311 2031 3094 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 7341 3605 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 7341 3605 a 1879 w Fm(s)g Fn(=)g(25)4781
5457 y Fm(s)f Fn(=)h(50)5409 5457 y
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 5409 5457 a @beginspecial
126 @llx 215 @lly 502 @urx 589 @ury 3760 @rwi @setspecial
%%BeginDocument: unstr7_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr7_col.eps
%%CreationDate: 07/24/2006  21:41:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 1799 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 1551 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 1239 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 938 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 909 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 2889 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 2499 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 2418 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 2320 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 2222 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 2936 mt 2091 2936 L
2031 2876 mt 2031 2996 L
3533 2548 mt 3653 2548 L
3593 2488 mt 3593 2608 L
4254 2467 mt 4374 2467 L
4314 2407 mt 4314 2527 L
4979 2371 mt 5099 2371 L
5039 2311 mt 5039 2431 L
5479 2269 mt 5599 2269 L
5539 2209 mt 5539 2329 L
1989 2894 mt 2073 2978 L
2073 2894 mt 1989 2978 L
3551 2506 mt 3635 2590 L
3635 2506 mt 3551 2590 L
4272 2425 mt 4356 2509 L
4356 2425 mt 4272 2509 L
4997 2329 mt 5081 2413 L
5081 2329 mt 4997 2413 L
5497 2227 mt 5581 2311 L
5581 2227 mt 5497 2311 L
gs 1466 388 4228 4229 MR c np
c8
500 -29 725 -301 721 -312 1562 -248 2031 1818 5 MP stroke
c9
500 -98 725 -98 721 -81 1562 -390 2031 2936 5 MP stroke
c10
500 -102 725 -96 721 -81 1562 -388 2031 2936 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5409 5457 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 5409 5457 a 7288 5457 a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 7288
5457 a @beginspecial 126 @llx 215 @lly 502 @urx 589 @ury
3760 @rwi @setspecial
%%BeginDocument: unstr8_col.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.2.0.232 (R2006a). Operating System: Microsoft Windows XP.
%%Title: .\unstr8_col.eps
%%CreationDate: 07/24/2006  21:41:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   502   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   502   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1298   273  4511  4489 MR c np
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6919 5187 PR
6 w
0 4228 4227 0 0 -4228 1466 4616 4 MP
PP
-4227 0 0 4228 4227 0 0 -4228 1466 4616 5 MP stroke
4 w
DO
SO
6 w
0 sg
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
1466 4616 mt 5693 4616 L
1466 4616 mt 1466  388 L
1466 4616 mt 1466 4573 L
1466  388 mt 1466  431 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1350 4761 mt 
(11.5) s
2070 4616 mt 2070 4573 L
2070  388 mt 2070  431 L
2004 4761 mt 
(12) s
2674 4616 mt 2674 4573 L
2674  388 mt 2674  431 L
2558 4761 mt 
(12.5) s
3278 4616 mt 3278 4573 L
3278  388 mt 3278  431 L
3212 4761 mt 
(13) s
3881 4616 mt 3881 4573 L
3881  388 mt 3881  431 L
3765 4761 mt 
(13.5) s
4485 4616 mt 4485 4573 L
4485  388 mt 4485  431 L
4419 4761 mt 
(14) s
5089 4616 mt 5089 4573 L
5089  388 mt 5089  431 L
4973 4761 mt 
(14.5) s
5693 4616 mt 5693 4573 L
5693  388 mt 5693  431 L
5627 4761 mt 
(15) s
1466 4290 mt 1508 4290 L
5693 4290 mt 5651 4290 L
1365 4334 mt 
(6) s
1466 3640 mt 1508 3640 L
5693 3640 mt 5651 3640 L
1365 3684 mt 
(7) s
1466 2990 mt 1508 2990 L
5693 2990 mt 5651 2990 L
1365 3034 mt 
(8) s
1466 2339 mt 1508 2339 L
5693 2339 mt 5651 2339 L
1365 2383 mt 
(9) s
1466 1689 mt 1508 1689 L
5693 1689 mt 5651 1689 L
1298 1733 mt 
(10) s
1466 1039 mt 1508 1039 L
5693 1039 mt 5651 1039 L
1298 1083 mt 
(11) s
1466  388 mt 1508  388 L
5693  388 mt 5651  388 L
1298  432 mt 
(12) s
1466  388 mt 5693  388 L
1466 4616 mt 5693 4616 L
5693 4616 mt 5693  388 L
1466 4616 mt 1466  388 L
gs 1466 388 4228 4229 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1973 1793 11 MP
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3535 1359 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4256 1008 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4981 902 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5481 663 11 MP
DP
gs 1466 388 4228 4229 MR c np
gr

0 -94 -94 0 0 94 94 0 1984 2529 5 MP
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
DP
0 -94 -94 0 0 94 94 0 3546 2137 5 MP
DP
0 -94 -94 0 0 94 94 0 4267 1899 5 MP
DP
0 -94 -94 0 0 94 94 0 4992 1882 5 MP
DP
0 -94 -94 0 0 94 94 0 5492 1496 5 MP
DP
gs 1466 388 4228 4229 MR c np
gr

/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
1971 2576 mt 2091 2576 L
2031 2516 mt 2031 2636 L
3533 2187 mt 3653 2187 L
3593 2127 mt 3593 2247 L
4254 1951 mt 4374 1951 L
4314 1891 mt 4314 2011 L
4979 1933 mt 5099 1933 L
5039 1873 mt 5039 1993 L
5479 1547 mt 5599 1547 L
5539 1487 mt 5539 1607 L
1989 2534 mt 2073 2618 L
2073 2534 mt 1989 2618 L
3551 2145 mt 3635 2229 L
3635 2145 mt 3551 2229 L
4272 1909 mt 4356 1993 L
4356 1909 mt 4272 1993 L
4997 1891 mt 5081 1975 L
5081 1891 mt 4997 1975 L
5497 1505 mt 5581 1589 L
5581 1505 mt 5497 1589 L
gs 1466 388 4228 4229 MR c np
c8
500 -239 725 -106 721 -351 1562 -434 2031 1812 5 MP stroke
c9
500 -386 725 -17 721 -238 1562 -392 2031 2576 5 MP stroke
c10
500 -386 725 -18 721 -236 1562 -389 2031 2576 5 MP stroke
DA
0 sg
4227 -1138 1466 4290 2 MP stroke
SO
6 w
gr

6 w
0 sg

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 7288 5457 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 7288 5457 a 1879 w Fm(s)g Fn(=)g(100)9898
5457 y
 0 setgray
 9898 5457 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736
a
 0. setgray
 9293 5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g
(\226)g(p)n(.19/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000
a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 20 20
TeXDict begin 20 19 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 20/View [ /XYZ null null null ] /Title (Full Simulation)
/OUT pdfmark end
 5001 3450 a BlueViolet 6588 1393 a Fr(Full)77 b(Sim)-6
b(ulation)p Black 8558 1393 a
 0 setgray
 8558 1393 a 4781 1882 a
 0. setgray

4781 1882 a Black BlueViolet 4941 1794 a Fp(\017)p Black
5044 1794 a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044 1794 a
102 w Fq(F90)60 b(geotechnical)e(\002nite)h(element)g(code)p
Red 58 w(O)-13 b(XFEM)p Black 9428 1794 a
 0. setgray
 9428 1794 a
Black BlueViolet 4941 2130 a Fp(\017)p Black 5044 2130
a
 0. setgray
 5044 2130 a Black 5044 2130 a
 0. setgray
 5044 2130 a 102 w Fq(modi\002ed)59
b(Euler)g(method)p Black BlueViolet 4941 2463 a Fp(\017)p
Black 5044 2463 a
 0. setgray
 5044 2463 a Black 5044 2463 a
 0. setgray
 5044
2463 a 102 w Fq(one)g(load)g(stage)f(compr)s(ising)h(100)f(load)h
(steps)p Black Black 6479 4660 a
 0. setgray
 6479 4660 a 6580 4660
a
 currentpoint currentpoint translate 0.28 0.28 scale neg exch neg exch
translate
 6580 4660 a @beginspecial 55 @llx 197 @lly 551 @urx
591 @ury 4960 @rwi @setspecial
%%BeginDocument: fig43.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./fig43.eps
%%CreationDate: 07/20/2006  16:32:54
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:    55   197   551   591
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup string
  currentfile exch readhexstring pop
  /bmap xdef pop pop} bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  {bmap} image gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    55   197   551   591
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  452   247  5952  4731 MR c np
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4226 5356 0 0 -4226 899 4615 4 MP
PP
-5356 0 0 4226 5356 0 0 -4226 899 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899 4615 mt 6255 4615 L
 899  389 mt 6255  389 L
 899 4615 mt  899  389 L
6255 4615 mt 6255  389 L
 899 4615 mt 6255 4615 L
 899 4615 mt  899  389 L
 899 4615 mt  899 4561 L
 899  389 mt  899  442 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 866 4760 mt 
(0) s
2238 4615 mt 2238 4561 L
2238  389 mt 2238  442 L
2172 4760 mt 
(25) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  442 L
3511 4760 mt 
(50) s
4916 4615 mt 4916 4561 L
4916  389 mt 4916  442 L
4850 4760 mt 
(75) s
6255 4615 mt 6255 4561 L
6255  389 mt 6255  442 L
6155 4760 mt 
(100) s
 899 4615 mt  952 4615 L
6255 4615 mt 6201 4615 L
 798 4659 mt 
(0) s
 899 4192 mt  952 4192 L
6255 4192 mt 6201 4192 L
 698 4236 mt 
(0.1) s
 899 3769 mt  952 3769 L
6255 3769 mt 6201 3769 L
 698 3813 mt 
(0.2) s
 899 3347 mt  952 3347 L
6255 3347 mt 6201 3347 L
 698 3391 mt 
(0.3) s
 899 2924 mt  952 2924 L
6255 2924 mt 6201 2924 L
 698 2968 mt 
(0.4) s
 899 2502 mt  952 2502 L
6255 2502 mt 6201 2502 L
 698 2546 mt 
(0.5) s
 899 2079 mt  952 2079 L
6255 2079 mt 6201 2079 L
 698 2123 mt 
(0.6) s
 899 1656 mt  952 1656 L
6255 1656 mt 6201 1656 L
 698 1700 mt 
(0.7) s
 899 1234 mt  952 1234 L
6255 1234 mt 6201 1234 L
 698 1278 mt 
(0.8) s
 899  811 mt  952  811 L
6255  811 mt 6201  811 L
 698  855 mt 
(0.9) s
 899  389 mt  952  389 L
6255  389 mt 6201  389 L
 798  433 mt 
(1) s
 899 4615 mt 6255 4615 L
 899  389 mt 6255  389 L
 899 4615 mt  899  389 L
6255 4615 mt 6255  389 L
gs 899 389 5357 4227 MR c np
DA
24 w
54 -7 54 -7 53 -7 54 -8 53 -7 54 -8 53 -8 54 -8 
54 -8 53 -9 54 -8 53 -9 54 -9 53 -9 54 -9 53 -9 
54 -10 54 -10 53 -10 54 -10 53 -10 54 -10 53 -11 54 -11 
53 -11 54 -11 54 -12 53 -12 54 -12 53 -12 54 -13 53 -13 
54 -13 54 -13 53 -14 54 -14 53 -14 54 -15 53 -15 54 -16 
53 -15 54 -16 54 -17 53 -17 54 -17 53 -18 54 -18 53 -18 
54 -19 53 -20 54 -20 54 -20 53 -21 54 -22 53 -22 54 -23 
53 -24 54 -24 54 -25 53 -26 54 -27 53 -28 54 -30 53 -29 
54 -32 53 -30 54 -35 54 -34 53 -37 54 -39 53 -39 54 -43 
53 -46 54 -48 53 -51 54 -57 54 -58 53 -64 54 -79 53 -94 
54 -102 53 -103 54 -108 54 -109 53 -108 54 -115 53 -114 54 -115 
53 -115 54 -120 53 -113 54 -118 54 -119 53 -119 54 -119 53 -118 
54 -119 53 -119 54 -119 952 4496 100 MP stroke
SO
54 0 54 0 53 0 54 0 53 0 54 0 53 0 54 0 
54 0 53 0 54 0 53 0 54 0 53 0 54 0 53 0 
54 0 54 0 53 0 54 0 53 0 54 0 53 -1 54 0 
53 0 54 0 54 0 53 -1 54 0 53 0 54 -1 53 0 
54 -1 54 0 53 -1 54 -1 53 -1 54 -1 53 -3 54 -3 
53 -5 54 -5 54 -6 53 -7 54 -8 53 -8 54 -9 53 -9 
54 -9 53 -10 54 -10 54 -11 53 -11 54 -12 53 -13 54 -13 
53 -14 54 -15 54 -16 53 -16 54 -17 53 -18 54 -18 53 -19 
54 -20 53 -24 54 -20 54 -24 53 -25 54 -26 53 -30 54 -29 
53 -34 54 -32 53 -36 54 -40 54 -41 53 -44 54 -50 53 -47 
54 -56 53 -59 54 -66 54 -76 53 -77 54 -83 53 -108 54 -153 
53 -184 54 -193 53 -215 54 -218 54 -235 53 -228 54 -233 53 -237 
54 -237 53 -237 54 -237 952 4378 100 MP stroke
gr

24 w
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

3384 4921 mt 
(step s) s
 611 3693 mt  -90 rotate
(load normalised against ultimate load) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 882 4658 mt 
( ) s
6239  431 mt 
( ) s
gs 899 389 5357 4227 MR c np
DO
6 w
0 -4226 2238 4615 2 MP stroke
0 -4226 3577 4615 2 MP stroke
0 -4226 4916 4615 2 MP stroke
SO
gr

6 w
1 sg
0 529 990 0 0 -529 5079 4228 4 MP
PP
-990 0 0 529 990 0 0 -529 5079 4228 5 MP stroke
4 w
DO
SO
6 w
0 sg
5079 4228 mt 6069 4228 L
5079 3699 mt 6069 3699 L
5079 4228 mt 5079 3699 L
6069 4228 mt 6069 3699 L
5079 4228 mt 6069 4228 L
5079 4228 mt 5079 3699 L
5079 4228 mt 6069 4228 L
5079 3699 mt 6069 3699 L
5079 4228 mt 5079 3699 L
6069 4228 mt 6069 3699 L
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 144 FMSR

5547 3894 mt 
(n) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

5622 3894 mt 
(=0.25) s
gs 5079 3699 991 530 MR c np
DA
24 w
360 0 5151 3841 2 MP stroke
SO
gr

24 w
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 144 FMSR

5547 4138 mt 
(n) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

5622 4138 mt 
(=0.49) s
gs 5079 3699 991 530 MR c np
360 0 5151 4085 2 MP stroke
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 6580 4660 a
 currentpoint currentpoint translate 1 0.28 div 1 0.28 div scale neg
exch neg exch translate
 6580 4660 a Black BlueViolet
4941 5105 a Fp(\017)p Black 5044 5105 a
 0. setgray
 5044 5105 a Black
5044 5105 a
 0. setgray
 5044 5105 a 102 w Fq(5)p OliveGreen 59 w(unstr)s(uctured)p
Black 6515 5105 a
 0. setgray
 6515 5105 a 59 w Fq(g)n(r)s(ids:)73
b(4000)p Fp(!)p Fq(30000)57 b(unkno)m(wns)4781 5353 y
 0 setgray

4781 5353 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293
5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g
(p)n(.20/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop end
%%Page: 21 21
TeXDict begin 21 20 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 21/View [ /XYZ null null null ] /Title (CPU times (1))
/OUT pdfmark end
 5001 3450 a BlueViolet 6677 1366 a Fr(CPU)77 b(times)f(\(1\))p
Black 8469 1366 a
 0 setgray
 8469 1366 a 4781 1882 a
 0. setgray
 4781 1882 a
Black Black 4964 3591 a
 0. setgray
 4964 3591 a 5066 3591 a
 currentpoint currentpoint translate 0.32 0.32 scale neg exch neg exch
translate
 5066
3591 a @beginspecial 117 @llx 215 @lly 501 @urx 589 @ury
3840 @rwi @setspecial
%%BeginDocument: meantimes.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./meantimes.eps
%%CreationDate: 09/05/2005  15:32:15
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   117   215   501   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   117   215   501   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1193   273  4613  4488 MR c np
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4227 4227 0 0 -4227 1463 4615 4 MP
PP
-4227 0 0 4227 4227 0 0 -4227 1463 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
1463 4615 mt 5690 4615 L
1463  388 mt 5690  388 L
1463 4615 mt 1463  388 L
5690 4615 mt 5690  388 L
1463 4615 mt 5690 4615 L
1463 4615 mt 1463  388 L
1463 4615 mt 1463 4572 L
1463  388 mt 1463  431 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1347 4760 mt 
(11.5) s
2067 4615 mt 2067 4572 L
2067  388 mt 2067  431 L
2001 4760 mt 
(12) s
2671 4615 mt 2671 4572 L
2671  388 mt 2671  431 L
2555 4760 mt 
(12.5) s
3275 4615 mt 3275 4572 L
3275  388 mt 3275  431 L
3209 4760 mt 
(13) s
3878 4615 mt 3878 4572 L
3878  388 mt 3878  431 L
3762 4760 mt 
(13.5) s
4482 4615 mt 4482 4572 L
4482  388 mt 4482  431 L
4416 4760 mt 
(14) s
5086 4615 mt 5086 4572 L
5086  388 mt 5086  431 L
4970 4760 mt 
(14.5) s
5690 4615 mt 5690 4572 L
5690  388 mt 5690  431 L
5624 4760 mt 
(15) s
1463 4615 mt 1506 4615 L
5690 4615 mt 5647 4615 L
1193 4659 mt 
(-8.5) s
1463 4145 mt 1506 4145 L
5690 4145 mt 5647 4145 L
1293 4189 mt 
(-8) s
1463 3675 mt 1506 3675 L
5690 3675 mt 5647 3675 L
1193 3719 mt 
(-7.5) s
1463 3206 mt 1506 3206 L
5690 3206 mt 5647 3206 L
1293 3250 mt 
(-7) s
1463 2736 mt 1506 2736 L
5690 2736 mt 5647 2736 L
1193 2780 mt 
(-6.5) s
1463 2267 mt 1506 2267 L
5690 2267 mt 5647 2267 L
1293 2311 mt 
(-6) s
1463 1797 mt 1506 1797 L
5690 1797 mt 5647 1797 L
1193 1841 mt 
(-5.5) s
1463 1328 mt 1506 1328 L
5690 1328 mt 5647 1328 L
1293 1372 mt 
(-5) s
1463  858 mt 1506  858 L
5690  858 mt 5647  858 L
1193  902 mt 
(-4.5) s
1463  388 mt 1506  388 L
5690  388 mt 5647  388 L
1293  432 mt 
(-4) s
1463 4615 mt 5690 4615 L
1463  388 mt 5690  388 L
1463 4615 mt 1463  388 L
5690 4615 mt 5690  388 L
gs 1463 388 4228 4228 MR c np
24 w
gr

24 w
gs 1883 1622 3799 3037 MR c np
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1971 4493 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3532 3276 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4253 2698 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4978 2111 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5477 1749 11 MP
DP
gr

gs 1463 388 4228 4228 MR c np
gs 1883 701 3799 3034 MR c np
0 j
0 -94 -94 0 0 94 94 0 1982 3541 5 MP
DP
0 -94 -94 0 0 94 94 0 3543 2344 5 MP
DP
0 -94 -94 0 0 94 94 0 4264 1745 5 MP
DP
0 -94 -94 0 0 94 94 0 4989 1185 5 MP
DP
0 -94 -94 0 0 94 94 0 5488 800 5 MP
DP
gr

gs 1883 701 3799 3057 MR c np
1969 3611 mt 2089 3611 L
2029 3551 mt 2029 3671 L
3530 2385 mt 3650 2385 L
3590 2325 mt 3590 2445 L
4251 1788 mt 4371 1788 L
4311 1728 mt 4311 1848 L
4976 1243 mt 5096 1243 L
5036 1183 mt 5036 1303 L
5475  847 mt 5595  847 L
5535  787 mt 5535  907 L
1987 3569 mt 2071 3653 L
2071 3569 mt 1987 3653 L
3548 2343 mt 3632 2427 L
3632 2343 mt 3548 2427 L
4269 1746 mt 4353 1830 L
4353 1746 mt 4269 1830 L
4994 1201 mt 5078 1285 L
5078 1201 mt 4994 1285 L
5493  805 mt 5577  889 L
5577  805 mt 5493  889 L
gr

499 -362 725 -587 721 -578 1561 -1217 2029 4512 5 MP stroke
499 -385 725 -560 721 -599 1561 -1197 2029 3588 5 MP stroke
499 -396 725 -545 721 -597 1561 -1226 2029 3611 5 MP stroke
DA
4228 -3288 1463 4380 2 MP stroke
SO
6 w
gr

6 w
1 sg
0 625 1502 0 0 -625 1664 1211 4 MP
PP
-1502 0 0 625 1502 0 0 -625 1664 1211 5 MP stroke
4 w
DO
SO
6 w
0 sg
1664 1211 mt 3166 1211 L
1664  586 mt 3166  586 L
1664 1211 mt 1664  586 L
3166 1211 mt 3166  586 L
1664 1211 mt 3166 1211 L
1664 1211 mt 1664  586 L
1664 1211 mt 3166 1211 L
1664  586 mt 3166  586 L
1664 1211 mt 1664  586 L
3166 1211 mt 3166  586 L
2199  748 mt 
(DIAG) s
gs 1664 586 1503 626 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1894 687 11 MP
DP
gs 1664 586 1503 626 MR c np
gr

2199  941 mt 
(DC-EMF) s
gs 1664 586 1503 626 MR c np
gr

0 -94 -94 0 0 94 94 0 1905 851 5 MP
DP
gs 1664 586 1503 626 MR c np
gr

2199 1134 mt 
(ELAS-DC-EMF) s
gs 1664 586 1503 626 MR c np
gr

1892 1090 mt 2012 1090 L
1952 1030 mt 1952 1150 L
1910 1048 mt 1994 1132 L
1994 1048 mt 1910 1132 L
gs 1664 586 1503 626 MR c np
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5066 3591 a
 currentpoint currentpoint translate 1 0.32 div 1 0.32 div scale neg
exch neg exch translate
 5066 3591 a Black Black 8099
2321 a
 0. setgray
 8099 2321 a 102 w Fq(a)l(v)-5 b(er)n(age)57 b(CPU)j(time)8505
2565 y(per)e(iter)n(ation)p OliveGreen 8746 2874 a Fn(\026)8743
2912 y Fm(t)8816 2949 y Fj(k)8969 2912 y Fn(=)g Fm(cn)p
Black 9392 2912 a
 0. setgray
 9392 2912 a Black Black 4972 5765 a
 0. setgray

4972 5765 a 5074 5765 a
 currentpoint currentpoint translate 0.32 0.32 scale neg exch neg exch
translate
 5074 5765 a @beginspecial 125
@llx 215 @lly 506 @urx 589 @ury 3810 @rwi @setspecial
%%BeginDocument: setuptime.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./setuptime.eps
%%CreationDate: 09/05/2005  16:03:21
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   125   215   506   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   125   215   506   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1293   273  4563  4488 MR c np
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4227 4227 0 0 -4227 1463 4615 4 MP
PP
-4227 0 0 4227 4227 0 0 -4227 1463 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
1463 4615 mt 5690 4615 L
1463  388 mt 5690  388 L
1463 4615 mt 1463  388 L
5690 4615 mt 5690  388 L
1463 4615 mt 5690 4615 L
1463 4615 mt 1463  388 L
1463 4615 mt 1463 4572 L
1463  388 mt 1463  431 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1347 4760 mt 
(11.5) s
1992 4615 mt 1992 4572 L
1992  388 mt 1992  431 L
1926 4760 mt 
(12) s
2520 4615 mt 2520 4572 L
2520  388 mt 2520  431 L
2404 4760 mt 
(12.5) s
3048 4615 mt 3048 4572 L
3048  388 mt 3048  431 L
2982 4760 mt 
(13) s
3577 4615 mt 3577 4572 L
3577  388 mt 3577  431 L
3461 4760 mt 
(13.5) s
4105 4615 mt 4105 4572 L
4105  388 mt 4105  431 L
4039 4760 mt 
(14) s
4633 4615 mt 4633 4572 L
4633  388 mt 4633  431 L
4517 4760 mt 
(14.5) s
5161 4615 mt 5161 4572 L
5161  388 mt 5161  431 L
5095 4760 mt 
(15) s
5690 4615 mt 5690 4572 L
5690  388 mt 5690  431 L
5574 4760 mt 
(15.5) s
1463 4615 mt 1506 4615 L
5690 4615 mt 5647 4615 L
1293 4659 mt 
(-1) s
1463 4192 mt 1506 4192 L
5690 4192 mt 5647 4192 L
1363 4236 mt 
(0) s
1463 3769 mt 1506 3769 L
5690 3769 mt 5647 3769 L
1363 3813 mt 
(1) s
1463 3347 mt 1506 3347 L
5690 3347 mt 5647 3347 L
1363 3391 mt 
(2) s
1463 2924 mt 1506 2924 L
5690 2924 mt 5647 2924 L
1363 2968 mt 
(3) s
1463 2501 mt 1506 2501 L
5690 2501 mt 5647 2501 L
1363 2545 mt 
(4) s
1463 2079 mt 1506 2079 L
5690 2079 mt 5647 2079 L
1363 2123 mt 
(5) s
1463 1656 mt 1506 1656 L
5690 1656 mt 5647 1656 L
1363 1700 mt 
(6) s
1463 1234 mt 1506 1234 L
5690 1234 mt 5647 1234 L
1363 1278 mt 
(7) s
1463  811 mt 1506  811 L
5690  811 mt 5647  811 L
1363  855 mt 
(8) s
1463  388 mt 1506  388 L
5690  388 mt 5647  388 L
1363  432 mt 
(9) s
1463 4615 mt 5690 4615 L
1463  388 mt 5690  388 L
1463 4615 mt 1463  388 L
5690 4615 mt 5690  388 L
gs 1463 388 4228 4228 MR c np
24 w
gs 1812 1923 3361 2522 MR c np
0 j
0 -94 -94 0 0 94 94 0 1911 4251 5 MP
DP
0 -94 -94 0 0 94 94 0 3277 3307 5 MP
DP
0 -94 -94 0 0 94 94 0 3908 2842 5 MP
DP
0 -94 -94 0 0 94 94 0 4542 2359 5 MP
DP
0 -94 -94 0 0 94 94 0 4979 2022 5 MP
DP
gr

437 -337 634 -483 631 -465 1366 -944 1958 4298 5 MP stroke
DA
4227 -3381 1463 3769 2 MP stroke
SO
6 w
gr

1 sg
0 240 1119 0 0 -240 1726 851 4 MP
PP
-1119 0 0 240 1119 0 0 -240 1726 851 5 MP stroke
4 w
DO
SO
6 w
0 sg
1726  851 mt 2845  851 L
1726  611 mt 2845  611 L
1726  851 mt 1726  611 L
2845  851 mt 2845  611 L
1726  851 mt 2845  851 L
1726  851 mt 1726  611 L
1726  851 mt 2845  851 L
1726  611 mt 2845  611 L
1726  851 mt 1726  611 L
2845  851 mt 2845  611 L
2261  774 mt 
(DC-EMF) s
gs 1726 611 1120 241 MR c np
24 w
gr

24 w
0 j
0 -94 -94 0 0 94 94 0 1966 684 5 MP
DP
gs 1726 611 1120 241 MR c np
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5074 5765 a
 currentpoint currentpoint translate 1 0.32 div 1 0.32 div scale neg
exch neg exch translate
 5074 5765 a Black Black 7506
4620 a
 0. setgray
 7506 4620 a 102 w Fq(reduction/f)-6 b(actor)s(isation)58
b(time)p OliveGreen 8520 4967 a Fm(t)8593 4998 y Fj(s)8733
4967 y Fn(=)g Fm(cn)9156 4892 y Fk(2)p Black 9244 4967
a
 0. setgray
 9244 4967 a 10288 4782 a
 0 setgray
 10288 4782 a 10245 5222 a
 0 setgray

10245 5222 a 9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n
(ebr)q(uar)r(y)g(2007)g(\226)g(p)n(.21/24)10712 5736
y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 22 22
TeXDict begin 22 21 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 22/View [ /XYZ null null null ] /Title (CPU times (2))
/OUT pdfmark end
 5001 3450 a BlueViolet 6677 1366 a Fr(CPU)77 b(times)f(\(2\))p
Black 8469 1366 a
 0 setgray
 8469 1366 a 4781 1882 a
 0. setgray
 4781 1882 a
Black Black 4989 3591 a
 0. setgray
 4989 3591 a 5091 3591 a
 currentpoint currentpoint translate 0.32 0.32 scale neg exch neg exch
translate
 5091
3591 a @beginspecial 126 @llx 215 @lly 501 @urx 589 @ury
3750 @rwi @setspecial
%%BeginDocument: overalltime.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./overalltime.eps
%%CreationDate: 09/05/2005  16:18:15
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   501   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   501   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1296   273  4510  4488 MR c np
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4226 4227 0 0 -4226 1463 4615 4 MP
PP
-4227 0 0 4226 4227 0 0 -4226 1463 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
1463 4615 mt 5690 4615 L
1463  389 mt 5690  389 L
1463 4615 mt 1463  389 L
5690 4615 mt 5690  389 L
1463 4615 mt 5690 4615 L
1463 4615 mt 1463  389 L
1463 4615 mt 1463 4572 L
1463  388 mt 1463  431 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1347 4760 mt 
(11.5) s
2067 4615 mt 2067 4572 L
2067  388 mt 2067  431 L
2001 4760 mt 
(12) s
2671 4615 mt 2671 4572 L
2671  388 mt 2671  431 L
2555 4760 mt 
(12.5) s
3275 4615 mt 3275 4572 L
3275  388 mt 3275  431 L
3209 4760 mt 
(13) s
3878 4615 mt 3878 4572 L
3878  388 mt 3878  431 L
3762 4760 mt 
(13.5) s
4482 4615 mt 4482 4572 L
4482  388 mt 4482  431 L
4416 4760 mt 
(14) s
5086 4615 mt 5086 4572 L
5086  388 mt 5086  431 L
4970 4760 mt 
(14.5) s
5690 4615 mt 5690 4572 L
5690  388 mt 5690  431 L
5624 4760 mt 
(15) s
1463 4615 mt 1506 4615 L
5690 4615 mt 5647 4615 L
1363 4659 mt 
(5) s
1463 4011 mt 1506 4011 L
5690 4011 mt 5647 4011 L
1363 4055 mt 
(6) s
1463 3407 mt 1506 3407 L
5690 3407 mt 5647 3407 L
1363 3451 mt 
(7) s
1463 2803 mt 1506 2803 L
5690 2803 mt 5647 2803 L
1363 2847 mt 
(8) s
1463 2200 mt 1506 2200 L
5690 2200 mt 5647 2200 L
1363 2244 mt 
(9) s
1463 1596 mt 1506 1596 L
5690 1596 mt 5647 1596 L
1296 1640 mt 
(10) s
1463  992 mt 1506  992 L
5690  992 mt 5647  992 L
1296 1036 mt 
(11) s
1463  388 mt 1506  388 L
5690  388 mt 5647  388 L
1296  432 mt 
(12) s
1463 4615 mt 5690 4615 L
1463  389 mt 5690  389 L
1463 4615 mt 1463  389 L
5690 4615 mt 5690  389 L
gs 1463 388 4228 4228 MR c np
24 w
gs 1883 1329 3799 2864 MR c np
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1971 4027 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3532 2891 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4253 2348 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4978 1801 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 5477 1456 11 MP
DP
gr

gr

24 w
gs 1883 361 3799 3339 MR c np
0 j
0 -94 -94 0 0 94 94 0 1982 3506 5 MP
DP
0 -94 -94 0 0 94 94 0 3543 2204 5 MP
DP
0 -94 -94 0 0 94 94 0 4264 1584 5 MP
DP
0 -94 -94 0 0 94 94 0 4989 908 5 MP
DP
0 -94 -94 0 0 94 94 0 5488 460 5 MP
DP
gr

gs 1463 388 4228 4228 MR c np
gr

gs 1883 1972 3799 2749 MR c np
1969 4574 mt 2089 4574 L
2029 4514 mt 2029 4634 L
3530 3402 mt 3650 3402 L
3590 3342 mt 3590 3462 L
4251 2956 mt 4371 2956 L
4311 2896 mt 4311 3016 L
4976 2404 mt 5096 2404 L
5036 2344 mt 5036 2464 L
5475 2118 mt 5595 2118 L
5535 2058 mt 5535 2178 L
1987 4532 mt 2071 4616 L
2071 4532 mt 1987 4616 L
3548 3360 mt 3632 3444 L
3632 3360 mt 3548 3444 L
4269 2914 mt 4353 2998 L
4353 2914 mt 4269 2998 L
4994 2362 mt 5078 2446 L
5078 2362 mt 4994 2446 L
5493 2076 mt 5577 2160 L
5577 2076 mt 5493 2160 L
gr

gs 1463 388 4228 4228 MR c np
499 -345 725 -547 721 -543 1561 -1136 2029 4046 5 MP stroke
499 -448 725 -676 721 -620 1561 -1302 2029 3553 5 MP stroke
499 -286 725 -552 721 -446 1561 -1172 2029 4574 5 MP stroke
DA
4228 -3171 1463 4615 2 MP stroke
4228 -4227 1463 4615 2 MP stroke
SO
6 w
gr

6 w
1 sg
0 624 1501 0 0 -624 1553 1223 4 MP
PP
-1501 0 0 624 1501 0 0 -624 1553 1223 5 MP stroke
4 w
DO
SO
6 w
0 sg
1553 1223 mt 3054 1223 L
1553  599 mt 3054  599 L
1553 1223 mt 1553  599 L
3054 1223 mt 3054  599 L
1553 1223 mt 3054 1223 L
1553 1223 mt 1553  599 L
1553 1223 mt 3054 1223 L
1553  599 mt 3054  599 L
1553 1223 mt 1553  599 L
3054 1223 mt 3054  599 L
2088  761 mt 
(DIAG) s
gs 1553 599 1502 625 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1782 700 11 MP
DP
gs 1553 599 1502 625 MR c np
gr

2088  954 mt 
(DC-EMF) s
gs 1553 599 1502 625 MR c np
gr

0 -94 -94 0 0 94 94 0 1793 864 5 MP
DP
gs 1553 599 1502 625 MR c np
gr

2088 1146 mt 
(ELAS-DC-EMF) s
gs 1553 599 1502 625 MR c np
gr

1780 1103 mt 1900 1103 L
1840 1043 mt 1840 1163 L
1798 1061 mt 1882 1145 L
1882 1061 mt 1798 1145 L
gs 1553 599 1502 625 MR c np
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5091 3591 a
 currentpoint currentpoint translate 1 0.32 div 1 0.32 div scale neg
exch neg exch translate
 5091 3591 a Black Black 8102
2102 a
 0. setgray
 8102 2102 a 102 w Fq(total)60 b(time)m(,)g Fm(\027)70
b Fn(=)58 b(0)p Fm(:)p Fn(25)p OliveGreen 8493 2557 a
Fm(t)8566 2605 y Fd(D)s(I)8 b(AG)9006 2557 y Fn(=)58
b Fm(cn)9429 2482 y Fk(1)p Fj(:)p Fk(5)8422 2821 y Fm(t)8495
2870 y Fd(D)s(C)7 b Fc(\000)p Fd(E)f(M)11 b(F)9201 2821
y Fn(=)58 b Fm(cn)9624 2746 y Fk(2)8128 3101 y Fm(t)8201
3149 y Fd(E)6 b(LAS)f Fc(\000)p Fd(D)s(C)i Fc(\000)p
Fd(E)f(M)11 b(F)9371 3101 y Fn(=)58 b Fm(cn)9794 3026
y Fk(1)p Fj(:)p Fk(5)p Black 10006 3101 a
 0. setgray
 10006 3101
a Black Black 4975 5765 a
 0. setgray
 4975 5765 a 5077 5765 a
 currentpoint currentpoint translate 0.32 0.32 scale neg exch neg exch
translate
 5077
5765 a @beginspecial 126 @llx 215 @lly 506 @urx 589 @ury
3800 @rwi @setspecial
%%BeginDocument: overalltime_49.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: ./overalltime_49.eps
%%CreationDate: 09/05/2005  18:05:07
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:   126   215   506   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   126   215   506   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

 1296   273  4560  4488 MR c np
125 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 PR
6 w
0 4227 4227 0 0 -4227 1463 4615 4 MP
PP
-4227 0 0 4227 4227 0 0 -4227 1463 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
1463 4615 mt 5690 4615 L
1463  388 mt 5690  388 L
1463 4615 mt 1463  388 L
5690 4615 mt 5690  388 L
1463 4615 mt 5690 4615 L
1463 4615 mt 1463  388 L
1463 4615 mt 1463 4572 L
1463  388 mt 1463  431 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1347 4760 mt 
(11.5) s
1992 4615 mt 1992 4572 L
1992  388 mt 1992  431 L
1926 4760 mt 
(12) s
2520 4615 mt 2520 4572 L
2520  388 mt 2520  431 L
2404 4760 mt 
(12.5) s
3048 4615 mt 3048 4572 L
3048  388 mt 3048  431 L
2982 4760 mt 
(13) s
3577 4615 mt 3577 4572 L
3577  388 mt 3577  431 L
3461 4760 mt 
(13.5) s
4105 4615 mt 4105 4572 L
4105  388 mt 4105  431 L
4039 4760 mt 
(14) s
4633 4615 mt 4633 4572 L
4633  388 mt 4633  431 L
4517 4760 mt 
(14.5) s
5161 4615 mt 5161 4572 L
5161  388 mt 5161  431 L
5095 4760 mt 
(15) s
5690 4615 mt 5690 4572 L
5690  388 mt 5690  431 L
5574 4760 mt 
(15.5) s
1463 4615 mt 1506 4615 L
5690 4615 mt 5647 4615 L
1363 4659 mt 
(6) s
1463 4086 mt 1506 4086 L
5690 4086 mt 5647 4086 L
1363 4130 mt 
(7) s
1463 3558 mt 1506 3558 L
5690 3558 mt 5647 3558 L
1363 3602 mt 
(8) s
1463 3030 mt 1506 3030 L
5690 3030 mt 5647 3030 L
1363 3074 mt 
(9) s
1463 2501 mt 1506 2501 L
5690 2501 mt 5647 2501 L
1296 2545 mt 
(10) s
1463 1973 mt 1506 1973 L
5690 1973 mt 5647 1973 L
1296 2017 mt 
(11) s
1463 1445 mt 1506 1445 L
5690 1445 mt 5647 1445 L
1296 1489 mt 
(12) s
1463  917 mt 1506  917 L
5690  917 mt 5647  917 L
1296  961 mt 
(13) s
1463  388 mt 1506  388 L
5690  388 mt 5647  388 L
1296  432 mt 
(14) s
1463 4615 mt 5690 4615 L
1463  388 mt 5690  388 L
1463 4615 mt 1463  388 L
5690 4615 mt 5690  388 L
gs 1463 388 4228 4228 MR c np
24 w
gs 1812 1634 3361 2505 MR c np
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1900 3973 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3266 2984 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 3897 2488 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4531 2061 11 MP
DP
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 4968 1761 11 MP
DP
gr

gs 1812 1207 3361 2772 MR c np
0 j
0 -94 -94 0 0 94 94 0 1911 3785 5 MP
DP
0 -94 -94 0 0 94 94 0 3277 2702 5 MP
DP
0 -94 -94 0 0 94 94 0 3908 2208 5 MP
DP
0 -94 -94 0 0 94 94 0 4542 1702 5 MP
DP
0 -94 -94 0 0 94 94 0 4979 1306 5 MP
DP
gr

gs 1812 2064 3361 2356 MR c np
1898 4273 mt 2018 4273 L
1958 4213 mt 1958 4333 L
3264 3283 mt 3384 3283 L
3324 3223 mt 3324 3343 L
3895 2899 mt 4015 2899 L
3955 2839 mt 3955 2959 L
4529 2542 mt 4649 2542 L
4589 2482 mt 4589 2602 L
4966 2210 mt 5086 2210 L
5026 2150 mt 5026 2270 L
1916 4231 mt 2000 4315 L
2000 4231 mt 1916 4315 L
3282 3241 mt 3366 3325 L
3366 3241 mt 3282 3325 L
3913 2857 mt 3997 2941 L
3997 2857 mt 3913 2941 L
4547 2500 mt 4631 2584 L
4631 2500 mt 4547 2584 L
4984 2168 mt 5068 2252 L
5068 2168 mt 4984 2252 L
gr

437 -300 634 -427 631 -496 1366 -989 1958 3992 5 MP stroke
437 -396 634 -506 631 -494 1366 -1083 1958 3832 5 MP stroke
437 -332 634 -357 631 -384 1366 -990 1958 4273 5 MP stroke
DA
4227 -3170 1463 4615 2 MP stroke
4227 -4227 1463 4615 2 MP stroke
SO
6 w
gr

1 sg
0 624 1501 0 0 -624 1689 1198 4 MP
PP
-1501 0 0 624 1501 0 0 -624 1689 1198 5 MP stroke
4 w
DO
SO
6 w
0 sg
1689 1198 mt 3190 1198 L
1689  574 mt 3190  574 L
1689 1198 mt 1689  574 L
3190 1198 mt 3190  574 L
1689 1198 mt 3190 1198 L
1689 1198 mt 1689  574 L
1689 1198 mt 3190 1198 L
1689  574 mt 3190  574 L
1689 1198 mt 1689  574 L
3190 1198 mt 3190  574 L
2224  736 mt 
(DIAG) s
gs 1689 574 1502 625 MR c np
24 w
gr

24 w
0 j
-35 -26 13 -41 -36 24 -35 -24 13 41 -35 26 43 0 14 41 
15 -41 43 0 1918 675 11 MP
DP
gs 1689 574 1502 625 MR c np
gr

2224  929 mt 
(DC-EMF) s
gs 1689 574 1502 625 MR c np
gr

0 -94 -94 0 0 94 94 0 1929 839 5 MP
DP
gs 1689 574 1502 625 MR c np
gr

2224 1121 mt 
(ELAS-DC-EMF) s
gs 1689 574 1502 625 MR c np
gr

1916 1078 mt 2036 1078 L
1976 1018 mt 1976 1138 L
1934 1036 mt 2018 1120 L
2018 1036 mt 1934 1120 L
gs 1689 574 1502 625 MR c np
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 5077 5765 a
 currentpoint currentpoint translate 1 0.32 div 1 0.32 div scale neg
exch neg exch translate
 5077 5765 a Black Black 7917
4791 a
 0. setgray
 7917 4791 a 101 w Fq(total)i(time)m(,)g Fm(\027)70
b Fn(=)58 b(0)p Fm(:)p Fn(49)10288 4782 y
 0 setgray
 10288 4782
a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19
b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g(p)n(.22/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 23 23
TeXDict begin 23 22 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 23/View [ /XYZ null null null ] /Title (Summary)
/OUT pdfmark end
 5001 3450 a BlueViolet 6944 1366 a Fr(Summar)s(y)p
Black 8202 1366 a
 0 setgray
 8202 1366 a 4781 1882 a
 0. setgray
 4781 1882 a
Black BlueViolet 4941 1794 a Fp(\017)p Black 5044 1794
a
 0. setgray
 5044 1794 a Black 5044 1794 a
 0. setgray
 5044 1794 a 102 w Fq(F)-6
b(or)60 b(purely)e(elastic)i(prob)l(lems)m(,)e(D-EMF)i(and)f(DC-EMF)h
(off)-6 b(er)5146 2038 y(an)59 b(impro)m(v)-5 b(ement)58
b(in)h(ter)5 b(ms)60 b(of)f(asymptotic)g(beha)l(viour)e(o)m(v)-5
b(er)5146 2282 y(tr)n(aditional)60 b(methods)e(such)h(as)f(diagonal)h
(scaling.)p Black BlueViolet 4941 2618 a Fp(\017)p Black
5044 2618 a
 0. setgray
 5044 2618 a Black 5044 2618 a
 0. setgray
 5044 2618 a
102 w Fq(Applying)g(DC-EMF)i(to)e(the)h(elastic)f(par)9
b(t)59 b(of)g(the)g(matr)s(ix)5146 2861 y(pro)m(vides)f(a)h(promising)g
(ne)l(w)g(element-based)5146 3105 y(preconditioner)-11
b(.)p Black BlueViolet 4941 3438 a Fp(\017)p Black 5044
3438 a
 0. setgray
 5044 3438 a Black 5044 3438 a
 0. setgray
 5044 3438 a 102
w Fq(Future)60 b(research)p Black OliveGreen 5226 3727
a Fp(\017)p Black 5329 3727 a
 0. setgray
 5329 3727 a Black 5329
3727 a
 0. setgray
 5329 3727 a 102 w Fq(mater)s(ials)g(with)g(non-associated)d
(\003o)m(w)h(r)s(ules)5431 3971 y(\()p Fp(\))h Fq(nonsymmetr)s(ic)f
(systems\))p Black OliveGreen 5226 4259 a Fp(\017)p Black
5329 4259 a
 0. setgray
 5329 4259 a Black 5329 4259 a
 0. setgray
 5329 4259 a
102 w Fq(consolidation)g(prob)l(lems)5431 4503 y(\()p
Fp(\))h Fq(saddle-point)f(systems\))p Black OliveGreen
5226 4791 a Fp(\017)p Black 5329 4791 a
 0. setgray
 5329 4791 a Black
5329 4791 a
 0. setgray
 5329 4791 a 102 w Fq(unsatur)n(ated)g(soils)5431
5035 y(\()p Fp(\))h Fq(e)-6 b(xtr)n(a)59 b(deg)n(rees)e(of)j(freedom\))
p Black BlueViolet 4941 5371 a Fp(\017)p Black 5044 5371
a
 0. setgray
 5044 5371 a Black 5044 5371 a
 0. setgray
 5044 5371 a 102 w Fq(collabor)n(ation)f
(with)h(O)l(ASYS)h(Ltd)4781 5576 y
 0 setgray
 4781 5576 a 10245
5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293 5736 a Fo(SIAM)19
b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g(p)n(.23/24)10712
5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 24 24
TeXDict begin 24 23 bop 4500 6000 a
 tx@Dict begin 90 Rot  end
 4500 6000 a 5001
3450 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 5001 3450 a 5001 3450 a
SDict begin H.S end
 5001 3450 a Black Black
5001 3450 a
 0 setgray
 5001 3450 a 5001 3450 a
SDict begin H.R end
 5001 3450 a 5001
3450 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark
end
 5001 3450 a 5001 3450 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 5001 3450 a 5001 3450
a
SDict begin [ /Page 24/View [ /XYZ null null null ] /Title (Relevant Publications)
/OUT pdfmark end
 5001 3450 a BlueViolet 6148 1393 a Fr(Rele)l(v)-6 b(ant)77
b(Pub)m(lications)p Black 8998 1393 a
 0 setgray
 8998 1393 a 4781
1882 a
 0. setgray
 4781 1882 a Black BlueViolet 4941 2206 a Fp(\017)p
Black 5044 2206 a
 0. setgray
 5044 2206 a Black 5044 2206 a
 0. setgray
 5044
2206 a 102 w Fa(A)-6 b(ugar)l(de)r(,)60 b(Rama)n(g)r(e)f(and)h(Staudac)
n(her)5146 2453 y Fe(On)g(Element-based)e(Preconditioners)g(f)-6
b(or)59 b(Linear)g(Elasticity)5146 2696 y(Prob)l(lems)p
OliveGreen 5146 2940 a Fq(Computers)g(and)f(Str)s(uctures)p
Black 7641 2940 a
 0. setgray
 7641 2940 a 60 w Fa(84)p Fq(,)h(pp)-7
b(.)73 b(2306-2315,)57 b(2006.)p Black BlueViolet 4941
3687 a Fp(\017)p Black 5044 3687 a
 0. setgray
 5044 3687 a Black
5044 3687 a
 0. setgray
 5044 3687 a 102 w Fa(A)-6 b(ugar)l(de)r(,)60
b(Rama)n(g)r(e)f(and)h(Staudac)n(her)5146 3933 y Fe(Element-based)f
(Preconditioners)f(f)-6 b(or)59 b(Elasto-Plastic)5146
4177 y(Prob)l(lems)p OliveGreen 5146 4421 a Fq(Inter)5
b(national)60 b(Jour)5 b(nal)59 b(of)g(Numer)s(ical)h(Methods)e(in)5146
4664 y(Engineer)s(ing)p Black 6289 4664 a
 0. setgray
 6289 4664 a
59 w Fq(doi:10.1002/nme)m(.1947,)f(2006.)4781 4913 y
 0 setgray

4781 4913 a 10245 5222 a
 0 setgray
 10245 5222 a 9293 5736 a
 0. setgray
 9293
5736 a Fo(SIAM)19 b(CSE)h(Meeting,)g(F)n(ebr)q(uar)r(y)g(2007)g(\226)g
(p)n(.24/24)10712 5736 y
 0 setgray
 10712 5736 a 4500 6000 a
 tx@Dict begin -90 Rot  end
 4500
6000 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
